
PLAY [mso] *********************************************************************

TASK [mso_schema_site_contract_service_graph_listener : Test that we have an ACI MultiSite host, username and password] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:6
skipping: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "false_condition": "mso_hostname is not defined or mso_username is not defined or mso_password is not defined",
    "skip_reason": "Conditional result was False"
}

TASK [mso_schema_site_contract_service_graph_listener : Set vars] **************
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:12
ok: [lh-dmz1-pod1-ndo-v421] => {
    "ansible_facts": {
        "aci_info": {
            "host": "20.253.151.162",
            "output_level": "debug",
            "password": "sJ94G92#8dq2hx*K4qh",
            "use_proxy": true,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        },
        "mso_info": {
            "host": "173.36.219.30",
            "output_level": "debug",
            "password": "sJ94G92#8dq2hx*K4qh",
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "changed": false
}

TASK [mso_schema_site_contract_service_graph_listener : Remove ansible_schema to start the test - setup part] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:51
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084663.5929961-7601-166535997058254 `" && echo ansible-tmp-1710084663.5929961-7601-166535997058254="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084663.5929961-7601-166535997058254 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpoz6j00jm TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084663.5929961-7601-166535997058254/AnsiballZ_mso_schema.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084663.5929961-7601-166535997058254/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084663.5929961-7601-166535997058254/AnsiballZ_mso_schema.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084663.5929961-7601-166535997058254/AnsiballZ_mso_schema.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084663.5929961-7601-166535997058254/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "vvv",
            "ESTABLISH HTTP(S) CONNECTFOR USER: ansible_github_ci TO https://173.36.219.30:443"
        ],
        [
            "info",
            "login() - login method called for 173.36.219.30"
        ],
        [
            "info",
            "login() - previous auth not found sending login POST to 173.36.219.30"
        ],
        [
            "info",
            "login() - connection.send(/login, LOGIN_PAYLOAD_NOT_SHOWN, POST, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edcf88b4bb6f5a86d3bdad, null, DELETE, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "description": null,
            "host": "173.36.219.30",
            "id": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "state": "absent",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "DELETE",
    "previous": {
        "description": "",
        "displayName": "ans_li_schema",
        "id": "65edcf88b4bb6f5a86d3bdad",
        "sites": [
            {
                "anps": [
                    {
                        "anpRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/anps/AP1",
                        "epgs": [
                            {
                                "domainAssociations": [],
                                "epgRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                "selectors": [],
                                "shutdown": false,
                                "staticLeafs": [],
                                "staticPorts": [],
                                "subnets": [],
                                "uSegAttrs": []
                            }
                        ]
                    }
                ],
                "bds": [
                    {
                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                        "hostBasedRouting": false,
                        "l3OutRefs": [],
                        "l3Outs": [],
                        "mac": "00:22:BD:F8:19:FF",
                        "subnets": []
                    }
                ],
                "contracts": [
                    {
                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract1",
                        "serviceGraphRelationship": {
                            "serviceGraphRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph",
                            "serviceNodesRelationship": [
                                {
                                    "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1"
                                },
                                {
                                    "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2"
                                }
                            ]
                        }
                    },
                    {
                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract2",
                        "serviceGraphRelationship": {
                            "serviceGraphRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2",
                            "serviceNodesRelationship": [
                                {
                                    "deviceConfiguration": {
                                        "cloudLoadBalancer": {
                                            "listeners": [
                                                {
                                                    "certificates": null,
                                                    "name": "nlb_li_tcp",
                                                    "nlbDevIp": {
                                                        "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                                                        "name": "10.10.10.10"
                                                    },
                                                    "port": 80,
                                                    "protocol": "tcp",
                                                    "rules": [
                                                        {
                                                            "actionType": "forward",
                                                            "contentType": "textPlain",
                                                            "healthCheck": {
                                                                "interval": 5,
                                                                "port": 80,
                                                                "protocol": "tcp",
                                                                "successCode": "200-399",
                                                                "unhealthyThreshold": 2,
                                                                "useHostFromRule": "no"
                                                            },
                                                            "index": 1,
                                                            "name": "rule1",
                                                            "port": 80,
                                                            "protocol": "tcp",
                                                            "redirectCode": "permMoved",
                                                            "redirectProtocol": "inherit",
                                                            "targetIpType": "unspecified",
                                                            "urlType": "original"
                                                        }
                                                    ],
                                                    "secPolicy": "default"
                                                }
                                            ]
                                        }
                                    },
                                    "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
                                },
                                {
                                    "deviceConfiguration": {
                                        "cloudLoadBalancer": {
                                            "listeners": [
                                                {
                                                    "certificates": [
                                                        {
                                                            "default": true,
                                                            "name": "ans_li_tenant_keyring",
                                                            "store": "default",
                                                            "tDn": "uni/tn-ans_li_tenant/certstore"
                                                        }
                                                    ],
                                                    "name": "aplb_li_https",
                                                    "port": 443,
                                                    "protocol": "https",
                                                    "rules": [
                                                        {
                                                            "actionType": "forward",
                                                            "contentType": "textPlain",
                                                            "healthCheck": {
                                                                "interval": 30,
                                                                "path": "health_check_path",
                                                                "port": 80,
                                                                "protocol": "http",
                                                                "successCode": "200",
                                                                "timeout": 30,
                                                                "unhealthyThreshold": 3,
                                                                "useHostFromRule": "yes"
                                                            },
                                                            "index": 1,
                                                            "name": "rule1",
                                                            "port": 80,
                                                            "protocol": "http",
                                                            "providerEpgRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                                            "redirectCode": "permMoved",
                                                            "redirectProtocol": "inherit",
                                                            "targetIpType": "unspecified",
                                                            "urlType": "original"
                                                        }
                                                    ],
                                                    "secPolicy": "default"
                                                },
                                                {
                                                    "certificates": null,
                                                    "name": "aplb_li_http",
                                                    "port": 80,
                                                    "protocol": "http",
                                                    "rules": [
                                                        {
                                                            "actionType": "forward",
                                                            "contentType": "textPlain",
                                                            "healthCheck": {
                                                                "host": "use_host_from_rule",
                                                                "interval": 30,
                                                                "path": "/",
                                                                "port": 443,
                                                                "protocol": "https",
                                                                "successCode": "200",
                                                                "timeout": 30,
                                                                "unhealthyThreshold": 3,
                                                                "useHostFromRule": "no"
                                                            },
                                                            "index": 2,
                                                            "name": "rule2",
                                                            "port": 443,
                                                            "protocol": "https",
                                                            "providerEpgRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                                            "redirectCode": "permMoved",
                                                            "redirectProtocol": "inherit",
                                                            "targetIpType": "unspecified",
                                                            "urlType": "original"
                                                        }
                                                    ],
                                                    "secPolicy": "default"
                                                },
                                                {
                                                    "certificates": null,
                                                    "name": "ans_li_common",
                                                    "port": 80,
                                                    "protocol": "http",
                                                    "rules": [
                                                        {
                                                            "actionType": "forward",
                                                            "contentType": "textPlain",
                                                            "healthCheck": {
                                                                "host": "use_host_from_rule",
                                                                "interval": 30,
                                                                "path": "/",
                                                                "port": 443,
                                                                "protocol": "https",
                                                                "successCode": "200",
                                                                "timeout": 60,
                                                                "unhealthyThreshold": 3,
                                                                "useHostFromRule": "no"
                                                            },
                                                            "index": 3,
                                                            "name": "rule3",
                                                            "port": 443,
                                                            "protocol": "https",
                                                            "providerEpgRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                                            "redirectCode": "permMoved",
                                                            "redirectProtocol": "inherit",
                                                            "targetIpType": "unspecified",
                                                            "urlType": "original"
                                                        }
                                                    ],
                                                    "secPolicy": "default"
                                                }
                                            ]
                                        }
                                    },
                                    "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
                                }
                            ]
                        }
                    },
                    {
                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract3"
                    }
                ],
                "externalEpgs": [],
                "intersiteL3outs": [],
                "networks": [],
                "serviceGraphs": [
                    {
                        "serviceGraphRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph",
                        "serviceNodes": [
                            {
                                "device": {
                                    "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_firewall1",
                                    "funcType": "GoTo"
                                },
                                "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1"
                            },
                            {
                                "device": {
                                    "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_tplb",
                                    "funcType": "GoTo"
                                },
                                "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2"
                            }
                        ]
                    },
                    {
                        "serviceGraphRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2",
                        "serviceNodes": [
                            {
                                "device": {
                                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb",
                                    "funcType": "GoTo"
                                },
                                "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
                            },
                            {
                                "device": {
                                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_aplb",
                                    "funcType": "GoTo"
                                },
                                "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
                            }
                        ]
                    }
                ],
                "siteId": "65deb9cebcb66752c31ba316",
                "templateID": "65edcf88b4bb6f5a86d3bdae",
                "templateName": "ansible_template1",
                "vrfs": [
                    {
                        "dcnmStaticLeafs": [],
                        "isRPExternal": false,
                        "regions": [
                            {
                                "name": "westus2",
                                "vpcs": [
                                    {
                                        "apicCloudCtxProfileName": "VRF1-westus2",
                                        "cidrs": [
                                            {
                                                "createdBy": "USER",
                                                "ip": "14.14.14.1/24",
                                                "primary": true,
                                                "subnets": []
                                            }
                                        ],
                                        "contextProfileType": "regular",
                                        "hubnetworkPeering": false,
                                        "isTGWAttachment": false,
                                        "isVpnGatewayRouter": false,
                                        "name": "VRF1-westus2"
                                    }
                                ]
                            }
                        ],
                        "routeLeak": [],
                        "routeTargetAddresses": [],
                        "routeTargetExportMvpn": [],
                        "routeTargetImportMvpn": [],
                        "trmEnabled": false,
                        "vrfRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/vrfs/VRF1"
                    }
                ]
            }
        ],
        "templates": [
            {
                "anps": [
                    {
                        "anpRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/anps/AP1",
                        "displayName": "AP1",
                        "epgs": [
                            {
                                "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                "contractRelationships": [
                                    {
                                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract1",
                                        "relationshipType": "provider"
                                    },
                                    {
                                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract2",
                                        "relationshipType": "provider"
                                    },
                                    {
                                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract1",
                                        "relationshipType": "consumer"
                                    },
                                    {
                                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract2",
                                        "relationshipType": "consumer"
                                    },
                                    {
                                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract3",
                                        "relationshipType": "consumer"
                                    }
                                ],
                                "description": "",
                                "displayName": "EPG1",
                                "epgRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                "epgType": "application",
                                "intraEpg": "unenforced",
                                "intraEpgContracts": [],
                                "mCastSource": false,
                                "name": "EPG1",
                                "preferredGroup": false,
                                "prio": "unspecified",
                                "proxyArp": false,
                                "selectors": [],
                                "subnets": [],
                                "tagAnnotations": [],
                                "uSegAttrs": [],
                                "uSegEpg": false,
                                "uuid": "300cdd58-cd1a-46c2-ad14-4b7dda97967e",
                                "vrfRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/vrfs/VRF1"
                            }
                        ],
                        "name": "AP1",
                        "uuid": "903f68a0-8861-4a06-a4f3-9c54b7d8cef4"
                    }
                ],
                "bds": [
                    {
                        "arpFlood": false,
                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                        "description": "",
                        "dhcpLabels": [],
                        "displayName": "BD1",
                        "intersiteBumTrafficAllow": false,
                        "l2Stretch": true,
                        "l2UnknownUnicast": "proxy",
                        "l3MCast": false,
                        "multiDstPktAct": "bd-flood",
                        "name": "BD1",
                        "optimizeWanBandwidth": false,
                        "subnets": [],
                        "tagAnnotations": [],
                        "unicastRouting": true,
                        "unkMcastAct": "flood",
                        "uuid": "d361bc5f-7009-4b9b-bd8d-610bd04894af",
                        "v6unkMcastAct": "flood",
                        "vrfRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/vrfs/VRF1"
                    }
                ],
                "contracts": [
                    {
                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract1",
                        "description": "",
                        "displayName": "Contract1",
                        "filterRelationships": [
                            {
                                "action": "permit",
                                "directives": [
                                    "none"
                                ],
                                "filterRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/filters/Filter1",
                                "priorityOverride": "default"
                            }
                        ],
                        "filterRelationshipsConsumerToProvider": [],
                        "filterRelationshipsProviderToConsumer": [],
                        "filterType": "bothWay",
                        "name": "Contract1",
                        "prio": "unspecified",
                        "scope": "context",
                        "serviceGraphRelationship": {
                            "serviceGraphRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph",
                            "serviceNodesRelationship": [
                                {
                                    "consumerConnector": {
                                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                        "connectorType": "general"
                                    },
                                    "providerConnector": {
                                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                        "connectorType": "general"
                                    },
                                    "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1"
                                },
                                {
                                    "consumerConnector": {
                                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                        "connectorType": "general"
                                    },
                                    "providerConnector": {
                                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                        "connectorType": "general"
                                    },
                                    "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2"
                                }
                            ]
                        },
                        "subjectName": "msc-subject",
                        "tagAnnotations": [],
                        "targetDscp": "unspecified",
                        "uuid": "67644b8a-b2b3-4556-9ce6-6106a7192eec"
                    },
                    {
                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract2",
                        "description": "",
                        "displayName": "Contract2",
                        "filterRelationships": [
                            {
                                "action": "permit",
                                "directives": [
                                    "none"
                                ],
                                "filterRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/filters/Filter1",
                                "priorityOverride": "default"
                            }
                        ],
                        "filterRelationshipsConsumerToProvider": [],
                        "filterRelationshipsProviderToConsumer": [],
                        "filterType": "bothWay",
                        "name": "Contract2",
                        "prio": "unspecified",
                        "scope": "context",
                        "serviceGraphRelationship": {
                            "serviceGraphRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2",
                            "serviceNodesRelationship": [
                                {
                                    "consumerConnector": {
                                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                        "connectorType": "general"
                                    },
                                    "providerConnector": {
                                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                        "connectorType": "general"
                                    },
                                    "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
                                },
                                {
                                    "consumerConnector": {
                                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                        "connectorType": "general"
                                    },
                                    "providerConnector": {
                                        "bdRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/bds/BD1",
                                        "connectorType": "general"
                                    },
                                    "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
                                }
                            ]
                        },
                        "subjectName": "msc-subject",
                        "tagAnnotations": [],
                        "targetDscp": "unspecified",
                        "uuid": "3367d68c-3626-48c4-a3df-fdf83902bfd5"
                    },
                    {
                        "contractRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/contracts/Contract3",
                        "description": "",
                        "displayName": "Contract3",
                        "filterRelationships": [
                            {
                                "action": "permit",
                                "directives": [
                                    "none"
                                ],
                                "filterRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/filters/Filter1",
                                "priorityOverride": "default"
                            }
                        ],
                        "filterRelationshipsConsumerToProvider": [],
                        "filterRelationshipsProviderToConsumer": [],
                        "filterType": "bothWay",
                        "name": "Contract3",
                        "prio": "unspecified",
                        "scope": "context",
                        "subjectName": "msc-subject",
                        "tagAnnotations": [],
                        "targetDscp": "unspecified",
                        "uuid": "5e9d321e-4fe4-4e99-887d-f595b2121d9f"
                    }
                ],
                "description": "",
                "displayName": "ansible_template1",
                "externalEpgs": [],
                "filters": [
                    {
                        "description": "",
                        "displayName": "Filter1",
                        "entries": [
                            {
                                "arpFlag": "unspecified",
                                "description": "",
                                "destinationFrom": "unspecified",
                                "destinationTo": "unspecified",
                                "displayName": "Filter1Entry",
                                "etherType": "unspecified",
                                "ipProtocol": "unspecified",
                                "matchOnlyFragments": false,
                                "name": "Filter1Entry",
                                "sourceFrom": "unspecified",
                                "sourceTo": "unspecified",
                                "stateful": false,
                                "tcpSessionRules": [
                                    "unspecified"
                                ]
                            }
                        ],
                        "filterRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/filters/Filter1",
                        "name": "Filter1",
                        "tagAnnotations": [],
                        "uuid": "225b38a9-2172-488f-a923-c4e0f5637ace"
                    }
                ],
                "intersiteL3outs": [],
                "name": "ansible_template1",
                "networks": [],
                "serviceGraphs": [
                    {
                        "description": "",
                        "displayName": "ansible_service_graph",
                        "name": "ansible_service_graph",
                        "nodeFilter": "allow-all",
                        "serviceGraphRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph",
                        "serviceNodes": [
                            {
                                "deviceRef": "",
                                "index": 1,
                                "name": "node1",
                                "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1",
                                "serviceNodeTypeId": "0000ffff0000000000000051",
                                "uuid": "7886dda0-3282-4635-8a3e-520bd35a8aa7"
                            },
                            {
                                "deviceRef": "",
                                "index": 2,
                                "name": "node2",
                                "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2",
                                "serviceNodeTypeId": "0000ffff0000000000000052",
                                "uuid": "0e0a38a2-1a7a-4753-b118-5102a958871a"
                            }
                        ],
                        "svcRuleType": "vrf",
                        "uuid": "3ac881f4-1af4-48e1-9a30-fcded8893de0"
                    },
                    {
                        "description": "",
                        "displayName": "ansible_service_graph2",
                        "name": "ansible_service_graph2",
                        "nodeFilter": "allow-all",
                        "serviceGraphRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2",
                        "serviceNodes": [
                            {
                                "deviceRef": "",
                                "index": 1,
                                "name": "node1",
                                "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1",
                                "serviceNodeTypeId": "0000ffff0000000000000052",
                                "uuid": "9ab41416-422b-483a-b229-404d25b7d1b8"
                            },
                            {
                                "deviceRef": "",
                                "index": 2,
                                "name": "node2",
                                "serviceNodeRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2",
                                "serviceNodeTypeId": "0000ffff0000000000000052",
                                "uuid": "49f58268-9cfa-47fe-b4f7-cbe669c2f800"
                            }
                        ],
                        "svcRuleType": "vrf",
                        "uuid": "59fac8ab-da58-47fc-b6ed-9bdaead57aae"
                    }
                ],
                "templateID": "65edcf88b4bb6f5a86d3bdae",
                "templateType": "stretched-template",
                "tenantId": "65edcf77b4bb6f5a86d3bdac",
                "version": 31,
                "vrfs": [
                    {
                        "autoRouteTargetExport": [
                            {
                                "aci": "route-target:as4-nn2:16779148:53194"
                            }
                        ],
                        "autoRouteTargetImport": [
                            {
                                "aci": "route-target:as4-nn2:16779147:53194"
                            }
                        ],
                        "bdEnfStatus": false,
                        "description": "",
                        "displayName": "VRF1",
                        "externalPrefixes": [],
                        "ipDataPlaneLearning": "enabled",
                        "l3MCast": false,
                        "name": "VRF1",
                        "pcEnfPref": "enforced",
                        "preferredGroup": false,
                        "routeLeak": [],
                        "routeTargetExport": [],
                        "routeTargetExportEvpn": [],
                        "routeTargetImport": [],
                        "routeTargetImportEvpn": [],
                        "rpConfigs": [],
                        "rtAutoDisabled": false,
                        "siteAwarePolicyEnforcementMode": false,
                        "tagAnnotations": [],
                        "uuid": "14ecac7a-f36f-4734-9b29-49bba816b351",
                        "vrfRef": "/schemas/65edcf88b4bb6f5a86d3bdad/templates/ansible_template1/vrfs/VRF1",
                        "vzAnyConsumerContracts": [],
                        "vzAnyEnabled": false,
                        "vzAnyProviderContracts": []
                    }
                ]
            },
            {
                "anps": [],
                "bds": [],
                "contracts": [],
                "description": "",
                "displayName": "ansible_template2",
                "externalEpgs": [],
                "filters": [],
                "intersiteL3outs": [],
                "name": "ansible_template2",
                "networks": [],
                "serviceGraphs": [],
                "templateID": "65edcf91b4bb6f5a86d3bdb1",
                "templateType": "stretched-template",
                "tenantId": "65edcf77b4bb6f5a86d3bdac",
                "version": 1,
                "vrfs": []
            }
        ]
    },
    "proposed": {},
    "response": "OK (unknown bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edcf88b4bb6f5a86d3bdad"
}

TASK [mso_schema_site_contract_service_graph_listener : Remove ans_li_tenant tenant to start the test - setup part] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:57
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084674.5242848-7670-210102159493100 `" && echo ansible-tmp-1710084674.5242848-7670-210102159493100="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084674.5242848-7670-210102159493100 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_tenant.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpou03w_7q TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084674.5242848-7670-210102159493100/AnsiballZ_mso_tenant.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084674.5242848-7670-210102159493100/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084674.5242848-7670-210102159493100/AnsiballZ_mso_tenant.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084674.5242848-7670-210102159493100/AnsiballZ_mso_tenant.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084674.5242848-7670-210102159493100/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants/65edcf77b4bb6f5a86d3bdac?msc-only=true, null, DELETE, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "description": null,
            "display_name": null,
            "host": "173.36.219.30",
            "login_domain": null,
            "orchestrator_only": "yes",
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "remote_users": null,
            "sites": null,
            "state": "absent",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "users": null,
            "validate_certs": false
        }
    },
    "method": "DELETE",
    "previous": {
        "_updateVersion": 0,
        "_versionDefaulted": false,
        "description": "",
        "displayName": "ans_li_tenant",
        "id": "65edcf77b4bb6f5a86d3bdac",
        "name": "ans_li_tenant",
        "siteAssociations": [
            {
                "awsAccount": [],
                "azureAccount": [],
                "cloudAccount": "uni/tn-ans_li_tenant/act-[85ca999d-c9c7-484b-82b8-6854bc1e2af5]-vendor-azure",
                "gatewayRouter": [],
                "gcpAccount": [],
                "securityDomains": [],
                "siteId": "65deb9cebcb66752c31ba316"
            }
        ],
        "userAssociations": [
            {
                "userId": "81ef2a7b7073696945d15b9ab341409ec979d973e29a300857b84abe8c296ba0"
            },
            {
                "userId": "48d105bdfbc49a5fcf39a10b961386e61dfe40085cb0315d818b761c5735dafa"
            }
        ]
    },
    "proposed": {},
    "response": "OK (unknown bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/tenants/65edcf77b4bb6f5a86d3bdac?msc-only=true"
}

TASK [mso_schema_site_contract_service_graph_listener : Add ans_li_tenant tenant] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:63
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084680.605082-7727-99401864524892 `" && echo ansible-tmp-1710084680.605082-7727-99401864524892="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084680.605082-7727-99401864524892 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_tenant.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp42wxji8s TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084680.605082-7727-99401864524892/AnsiballZ_mso_tenant.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084680.605082-7727-99401864524892/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084680.605082-7727-99401864524892/AnsiballZ_mso_tenant.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084680.605082-7727-99401864524892/AnsiballZ_mso_tenant.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084680.605082-7727-99401864524892/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "_updateVersion": 0,
        "_versionDefaulted": false,
        "description": "",
        "displayName": "ans_li_tenant",
        "id": "65edd24cb4bb6f5a86d3c1a2",
        "name": "ans_li_tenant",
        "siteAssociations": [],
        "userAssociations": [
            {
                "userId": "81ef2a7b7073696945d15b9ab341409ec979d973e29a300857b84abe8c296ba0"
            },
            {
                "userId": "48d105bdfbc49a5fcf39a10b961386e61dfe40085cb0315d818b761c5735dafa"
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants, {\"name\": \"ans_li_tenant\", \"userAssociations\": [{\"userId\": \"81ef2a7b7073696945d15b9ab341409ec979d973e29a300857b84abe8c296ba0\"}, {\"userId\": \"48d105bdfbc49a5fcf39a10b961386e61dfe40085cb0315d818b761c5735dafa\"}], \"displayName\": \"ans_li_tenant\"}, POST, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "description": null,
            "display_name": null,
            "host": "173.36.219.30",
            "login_domain": null,
            "orchestrator_only": "yes",
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "remote_users": null,
            "sites": null,
            "state": "present",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "users": [
                "ansible_github_ci",
                "admin"
            ],
            "validate_certs": false
        }
    },
    "method": "POST",
    "previous": {},
    "proposed": {
        "name": "ans_li_tenant",
        "userAssociations": [
            {
                "userId": "81ef2a7b7073696945d15b9ab341409ec979d973e29a300857b84abe8c296ba0"
            },
            {
                "userId": "48d105bdfbc49a5fcf39a10b961386e61dfe40085cb0315d818b761c5735dafa"
            }
        ]
    },
    "response": "OK (347 bytes)",
    "sent": {
        "displayName": "ans_li_tenant",
        "name": "ans_li_tenant",
        "userAssociations": [
            {
                "userId": "81ef2a7b7073696945d15b9ab341409ec979d973e29a300857b84abe8c296ba0"
            },
            {
                "userId": "48d105bdfbc49a5fcf39a10b961386e61dfe40085cb0315d818b761c5735dafa"
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 201,
    "url": "https://173.36.219.30:443/mso/api/v1/tenants"
}

TASK [mso_schema_site_contract_service_graph_listener : Associate Azure site with 'ans_li_tenant'] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:70
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084687.765808-7782-247372251647611 `" && echo ansible-tmp-1710084687.765808-7782-247372251647611="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084687.765808-7782-247372251647611 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_tenant_site.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp9t_yy2ja TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084687.765808-7782-247372251647611/AnsiballZ_mso_tenant_site.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084687.765808-7782-247372251647611/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084687.765808-7782-247372251647611/AnsiballZ_mso_tenant_site.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084687.765808-7782-247372251647611/AnsiballZ_mso_tenant_site.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084687.765808-7782-247372251647611/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "azureAccount": [],
        "cloudAccount": "uni/tn-ans_li_tenant/act-[85ca999d-c9c7-484b-82b8-6854bc1e2af5]-vendor-azure",
        "securityDomains": [],
        "siteId": "65deb9cebcb66752c31ba316"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants/65edd24cb4bb6f5a86d3c1a2?validate=false, [{\"op\": \"add\", \"path\": \"/siteAssociations/-\", \"value\": {\"siteId\": \"65deb9cebcb66752c31ba316\", \"securityDomains\": [], \"cloudAccount\": \"uni/tn-ans_li_tenant/act-[85ca999d-c9c7-484b-82b8-6854bc1e2af5]-vendor-azure\", \"azureAccount\": []}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "aws_access_key": null,
            "aws_account_org": false,
            "aws_trusted": null,
            "azure_access_type": "shared",
            "azure_active_directory_id": null,
            "azure_active_directory_name": null,
            "azure_application_id": null,
            "azure_credential_name": null,
            "azure_subscription_id": null,
            "cloud_account": "uni/tn-ans_li_tenant/act-[85ca999d-c9c7-484b-82b8-6854bc1e2af5]-vendor-azure",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "secret_key": null,
            "security_domains": [],
            "site": "azure_ansible_test_2",
            "state": "present",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/siteAssociations/-",
            "value": {
                "azureAccount": [],
                "cloudAccount": "uni/tn-ans_li_tenant/act-[85ca999d-c9c7-484b-82b8-6854bc1e2af5]-vendor-azure",
                "securityDomains": [],
                "siteId": "65deb9cebcb66752c31ba316"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "azureAccount": [],
        "cloudAccount": "uni/tn-ans_li_tenant/act-[85ca999d-c9c7-484b-82b8-6854bc1e2af5]-vendor-azure",
        "securityDomains": [],
        "siteId": "65deb9cebcb66752c31ba316"
    },
    "response": "OK (568 bytes)",
    "sent": {
        "azureAccount": [],
        "cloudAccount": "uni/tn-ans_li_tenant/act-[85ca999d-c9c7-484b-82b8-6854bc1e2af5]-vendor-azure",
        "securityDomains": [],
        "siteId": "65deb9cebcb66752c31ba316"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 201,
    "url": "https://173.36.219.30:443/mso/api/v1/tenants/65edd24cb4bb6f5a86d3c1a2?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Ensure ansible_schema with ansible_template1 and ansible_template2 exist] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:81
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084696.847656-7839-32488486130976 `" && echo ansible-tmp-1710084696.847656-7839-32488486130976="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084696.847656-7839-32488486130976 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpmh6oq2od TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084696.847656-7839-32488486130976/AnsiballZ_mso_schema_template.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084696.847656-7839-32488486130976/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084696.847656-7839-32488486130976/AnsiballZ_mso_schema_template.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084696.847656-7839-32488486130976/AnsiballZ_mso_schema_template.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084696.847656-7839-32488486130976/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=ansible_template1) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "displayName": "ansible_template1",
        "name": "ansible_template1",
        "tenantId": "65edd24cb4bb6f5a86d3c1a2"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas, {\"displayName\": \"ans_li_schema\", \"templates\": [{\"name\": \"ansible_template1\", \"displayName\": \"ansible_template1\", \"tenantId\": \"65edd24cb4bb6f5a86d3c1a2\"}], \"sites\": []}, POST, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "display_name": null,
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "schema_description": null,
            "state": "present",
            "template": "ansible_template1",
            "template_description": null,
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "ansible_template1",
    "method": "PATCH",
    "patch_operation": {
        "displayName": "ans_li_schema",
        "sites": [],
        "templates": [
            {
                "displayName": "ansible_template1",
                "name": "ansible_template1",
                "tenantId": "65edd24cb4bb6f5a86d3c1a2"
            }
        ]
    },
    "previous": {},
    "proposed": {},
    "response": "OK (440 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 201,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas"
}
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084703.518721-7839-30649560509468 `" && echo ansible-tmp-1710084703.518721-7839-30649560509468="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084703.518721-7839-30649560509468 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp2iw0a2y_ TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084703.518721-7839-30649560509468/AnsiballZ_mso_schema_template.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084703.518721-7839-30649560509468/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084703.518721-7839-30649560509468/AnsiballZ_mso_schema_template.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084703.518721-7839-30649560509468/AnsiballZ_mso_schema_template.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084703.518721-7839-30649560509468/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=ansible_template2) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "displayName": "ansible_template2",
        "name": "ansible_template2",
        "tenantId": "65edd24cb4bb6f5a86d3c1a2"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/tenants, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/-\", \"value\": {\"name\": \"ansible_template2\", \"displayName\": \"ansible_template2\", \"tenantId\": \"65edd24cb4bb6f5a86d3c1a2\"}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "display_name": null,
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "schema_description": null,
            "state": "present",
            "template": "ansible_template2",
            "template_description": null,
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "ansible_template2",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/-",
            "value": {
                "displayName": "ansible_template2",
                "name": "ansible_template2",
                "tenantId": "65edd24cb4bb6f5a86d3c1a2"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "displayName": "ansible_template2",
        "name": "ansible_template2",
        "tenantId": "65edd24cb4bb6f5a86d3c1a2"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "displayName": "ansible_template2",
        "name": "ansible_template2",
        "tenantId": "65edd24cb4bb6f5a86d3c1a2"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Create ansible_service_graph schema template service graph] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:92
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084711.607959-7953-171718796869842 `" && echo ansible-tmp-1710084711.607959-7953-171718796869842="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084711.607959-7953-171718796869842 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_service_graph.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmprcpvklkg TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084711.607959-7953-171718796869842/AnsiballZ_mso_schema_template_service_graph.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084711.607959-7953-171718796869842/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084711.607959-7953-171718796869842/AnsiballZ_mso_schema_template_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084711.607959-7953-171718796869842/AnsiballZ_mso_schema_template_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084711.607959-7953-171718796869842/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "description": "",
        "displayName": "ansible_service_graph",
        "name": "ansible_service_graph",
        "nodeFilter": "allow-all",
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "index": 1,
                "name": "node1",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000051"
            },
            {
                "index": 2,
                "name": "node2",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/service-node-types, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/serviceGraphs/-\", \"value\": {\"name\": \"ansible_service_graph\", \"displayName\": \"ansible_service_graph\", \"description\": \"\", \"nodeFilter\": \"allow-all\", \"serviceGraphRef\": {\"serviceGraphName\": \"ansible_service_graph\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"serviceNodes\": [{\"name\": \"node1\", \"serviceNodeTypeId\": \"0000ffff0000000000000051\", \"index\": 1, \"serviceNodeRef\": {\"serviceNodeName\": \"node1\", \"serviceGraphName\": \"ansible_service_graph\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}, {\"name\": \"node2\", \"serviceNodeTypeId\": \"0000ffff0000000000000052\", \"index\": 2, \"serviceNodeRef\": {\"serviceNodeName\": \"node2\", \"serviceGraphName\": \"ansible_service_graph\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "description": "",
            "display_name": "ansible_service_graph",
            "filter_after_first_node": "allow_all",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "service_graph": "ansible_service_graph",
            "service_nodes": [
                {
                    "type": "firewall"
                },
                {
                    "type": "load-balancer"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/serviceGraphs/-",
            "value": {
                "description": "",
                "displayName": "ansible_service_graph",
                "name": "ansible_service_graph",
                "nodeFilter": "allow-all",
                "serviceGraphRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "templateName": "ansible_template1"
                },
                "serviceNodes": [
                    {
                        "index": 1,
                        "name": "node1",
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph",
                            "serviceNodeName": "node1",
                            "templateName": "ansible_template1"
                        },
                        "serviceNodeTypeId": "0000ffff0000000000000051"
                    },
                    {
                        "index": 2,
                        "name": "node2",
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph",
                            "serviceNodeName": "node2",
                            "templateName": "ansible_template1"
                        },
                        "serviceNodeTypeId": "0000ffff0000000000000052"
                    }
                ]
            }
        }
    ],
    "previous": {},
    "proposed": {
        "description": "",
        "displayName": "ansible_service_graph",
        "name": "ansible_service_graph",
        "nodeFilter": "allow-all",
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "index": 1,
                "name": "node1",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000051"
            },
            {
                "index": 2,
                "name": "node2",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            }
        ]
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "description": "",
        "displayName": "ansible_service_graph",
        "name": "ansible_service_graph",
        "nodeFilter": "allow-all",
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "index": 1,
                "name": "node1",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000051"
            },
            {
                "index": 2,
                "name": "node2",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Create ansible_service_graph2 schema template service graph] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:105
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084719.0628932-8009-58433532180826 `" && echo ansible-tmp-1710084719.0628932-8009-58433532180826="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084719.0628932-8009-58433532180826 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_service_graph.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmptv099wjg TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084719.0628932-8009-58433532180826/AnsiballZ_mso_schema_template_service_graph.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084719.0628932-8009-58433532180826/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084719.0628932-8009-58433532180826/AnsiballZ_mso_schema_template_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084719.0628932-8009-58433532180826/AnsiballZ_mso_schema_template_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084719.0628932-8009-58433532180826/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "description": "",
        "displayName": "ansible_service_graph2",
        "name": "ansible_service_graph2",
        "nodeFilter": "allow-all",
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "index": 1,
                "name": "node1",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            },
            {
                "index": 2,
                "name": "node2",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/service-node-types, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/serviceGraphs/-\", \"value\": {\"name\": \"ansible_service_graph2\", \"displayName\": \"ansible_service_graph2\", \"description\": \"\", \"nodeFilter\": \"allow-all\", \"serviceGraphRef\": {\"serviceGraphName\": \"ansible_service_graph2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"serviceNodes\": [{\"name\": \"node1\", \"serviceNodeTypeId\": \"0000ffff0000000000000052\", \"index\": 1, \"serviceNodeRef\": {\"serviceNodeName\": \"node1\", \"serviceGraphName\": \"ansible_service_graph2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}, {\"name\": \"node2\", \"serviceNodeTypeId\": \"0000ffff0000000000000052\", \"index\": 2, \"serviceNodeRef\": {\"serviceNodeName\": \"node2\", \"serviceGraphName\": \"ansible_service_graph2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "description": "",
            "display_name": "ansible_service_graph2",
            "filter_after_first_node": "allow_all",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "service_graph": "ansible_service_graph2",
            "service_nodes": [
                {
                    "type": "load-balancer"
                },
                {
                    "type": "load-balancer"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/serviceGraphs/-",
            "value": {
                "description": "",
                "displayName": "ansible_service_graph2",
                "name": "ansible_service_graph2",
                "nodeFilter": "allow-all",
                "serviceGraphRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "templateName": "ansible_template1"
                },
                "serviceNodes": [
                    {
                        "index": 1,
                        "name": "node1",
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph2",
                            "serviceNodeName": "node1",
                            "templateName": "ansible_template1"
                        },
                        "serviceNodeTypeId": "0000ffff0000000000000052"
                    },
                    {
                        "index": 2,
                        "name": "node2",
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph2",
                            "serviceNodeName": "node2",
                            "templateName": "ansible_template1"
                        },
                        "serviceNodeTypeId": "0000ffff0000000000000052"
                    }
                ]
            }
        }
    ],
    "previous": {},
    "proposed": {
        "description": "",
        "displayName": "ansible_service_graph2",
        "name": "ansible_service_graph2",
        "nodeFilter": "allow-all",
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "index": 1,
                "name": "node1",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            },
            {
                "index": 2,
                "name": "node2",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            }
        ]
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "description": "",
        "displayName": "ansible_service_graph2",
        "name": "ansible_service_graph2",
        "nodeFilter": "allow-all",
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "index": 1,
                "name": "node1",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            },
            {
                "index": 2,
                "name": "node2",
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                },
                "serviceNodeTypeId": "0000ffff0000000000000052"
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Bind ansible_test site with ansible_template1 and ansible_template2] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:118
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084726.460426-8066-126889284440608 `" && echo ansible-tmp-1710084726.460426-8066-126889284440608="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084726.460426-8066-126889284440608 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpkcnh2x0x TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084726.460426-8066-126889284440608/AnsiballZ_mso_schema_site.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084726.460426-8066-126889284440608/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084726.460426-8066-126889284440608/AnsiballZ_mso_schema_site.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084726.460426-8066-126889284440608/AnsiballZ_mso_schema_site.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084726.460426-8066-126889284440608/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=ansible_template1) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "anps": [],
        "bds": [],
        "contracts": [],
        "externalEpgs": [],
        "intersiteL3outs": [],
        "serviceGraphs": [],
        "siteId": "65deb9cebcb66752c31ba316",
        "templateName": "ansible_template1",
        "vrfs": []
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/sites/-\", \"value\": {\"siteId\": \"65deb9cebcb66752c31ba316\", \"templateName\": \"ansible_template1\", \"anps\": [], \"bds\": [], \"contracts\": [], \"externalEpgs\": [], \"intersiteL3outs\": [], \"serviceGraphs\": [], \"vrfs\": []}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "site": "azure_ansible_test_2",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "ansible_template1",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/sites/-",
            "value": {
                "anps": [],
                "bds": [],
                "contracts": [],
                "externalEpgs": [],
                "intersiteL3outs": [],
                "serviceGraphs": [],
                "siteId": "65deb9cebcb66752c31ba316",
                "templateName": "ansible_template1",
                "vrfs": []
            }
        }
    ],
    "previous": {},
    "proposed": {
        "anps": [],
        "bds": [],
        "contracts": [],
        "externalEpgs": [],
        "intersiteL3outs": [],
        "serviceGraphs": [],
        "siteId": "65deb9cebcb66752c31ba316",
        "templateName": "ansible_template1",
        "vrfs": []
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "anps": [],
        "bds": [],
        "contracts": [],
        "externalEpgs": [],
        "intersiteL3outs": [],
        "serviceGraphs": [],
        "siteId": "65deb9cebcb66752c31ba316",
        "templateName": "ansible_template1",
        "vrfs": []
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add Filter1 to ansible_template1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:129
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084734.0377789-8116-159659210058970 `" && echo ansible-tmp-1710084734.0377789-8116-159659210058970="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084734.0377789-8116-159659210058970 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_filter_entry.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpudbb5ev0 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084734.0377789-8116-159659210058970/AnsiballZ_mso_schema_template_filter_entry.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084734.0377789-8116-159659210058970/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084734.0377789-8116-159659210058970/AnsiballZ_mso_schema_template_filter_entry.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084734.0377789-8116-159659210058970/AnsiballZ_mso_schema_template_filter_entry.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084734.0377789-8116-159659210058970/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "arpFlag": "unspecified",
        "description": "",
        "destinationFrom": "unspecified",
        "destinationTo": "unspecified",
        "displayName": "Filter1Entry",
        "etherType": "unspecified",
        "ipProtocol": "unspecified",
        "matchOnlyFragments": false,
        "name": "Filter1Entry",
        "sourceFrom": "unspecified",
        "sourceTo": "unspecified",
        "stateful": false,
        "tcpSessionRules": [
            "unspecified"
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/filters/-\", \"value\": {\"name\": \"Filter1\", \"displayName\": \"Filter1\", \"description\": \"\", \"entries\": [{\"name\": \"Filter1Entry\", \"displayName\": \"Filter1Entry\", \"description\": \"\", \"etherType\": \"unspecified\", \"ipProtocol\": \"unspecified\", \"tcpSessionRules\": [\"unspecified\"], \"sourceFrom\": \"unspecified\", \"sourceTo\": \"unspecified\", \"destinationFrom\": \"unspecified\", \"destinationTo\": \"unspecified\", \"arpFlag\": \"unspecified\", \"stateful\": false, \"matchOnlyFragments\": false}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "arp_flag": null,
            "destination_from": null,
            "destination_to": null,
            "display_name": null,
            "entry": "Filter1Entry",
            "ethertype": null,
            "filter": "Filter1",
            "filter_description": "",
            "filter_display_name": null,
            "filter_entry_description": "",
            "fragments_only": null,
            "host": "173.36.219.30",
            "ip_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "source_from": null,
            "source_to": null,
            "state": "present",
            "stateful": null,
            "tcp_session_rules": null,
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/filters/-",
            "value": {
                "description": "",
                "displayName": "Filter1",
                "entries": [
                    {
                        "arpFlag": "unspecified",
                        "description": "",
                        "destinationFrom": "unspecified",
                        "destinationTo": "unspecified",
                        "displayName": "Filter1Entry",
                        "etherType": "unspecified",
                        "ipProtocol": "unspecified",
                        "matchOnlyFragments": false,
                        "name": "Filter1Entry",
                        "sourceFrom": "unspecified",
                        "sourceTo": "unspecified",
                        "stateful": false,
                        "tcpSessionRules": [
                            "unspecified"
                        ]
                    }
                ],
                "name": "Filter1"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "arpFlag": "unspecified",
        "description": "",
        "destinationFrom": "unspecified",
        "destinationTo": "unspecified",
        "displayName": "Filter1Entry",
        "etherType": "unspecified",
        "ipProtocol": "unspecified",
        "matchOnlyFragments": false,
        "name": "Filter1Entry",
        "sourceFrom": "unspecified",
        "sourceTo": "unspecified",
        "stateful": false,
        "tcpSessionRules": [
            "unspecified"
        ]
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "arpFlag": "unspecified",
        "description": "",
        "destinationFrom": "unspecified",
        "destinationTo": "unspecified",
        "displayName": "Filter1Entry",
        "etherType": "unspecified",
        "ipProtocol": "unspecified",
        "matchOnlyFragments": false,
        "name": "Filter1Entry",
        "sourceFrom": "unspecified",
        "sourceTo": "unspecified",
        "stateful": false,
        "tcpSessionRules": [
            "unspecified"
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add Contracts to the ansible_template1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:145
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084740.931432-8188-114946716357457 `" && echo ansible-tmp-1710084740.931432-8188-114946716357457="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084740.931432-8188-114946716357457 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_contract_filter.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp5l5ve7xd TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084740.931432-8188-114946716357457/AnsiballZ_mso_schema_template_contract_filter.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084740.931432-8188-114946716357457/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084740.931432-8188-114946716357457/AnsiballZ_mso_schema_template_contract_filter.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084740.931432-8188-114946716357457/AnsiballZ_mso_schema_template_contract_filter.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084740.931432-8188-114946716357457/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=Contract1) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "contractFilterType": "bothWay",
        "contractScope": "context",
        "directives": [
            "none"
        ],
        "displayName": "Contract1",
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "filterType": "both-way"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/contracts/-\", \"value\": {\"name\": \"Contract1\", \"displayName\": \"Contract1\", \"filterType\": \"bothWay\", \"scope\": \"context\", \"filterRelationships\": [{\"filterRef\": {\"filterName\": \"Filter1\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"directives\": [\"none\"]}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "action": null,
            "contract": "Contract1",
            "contract_display_name": null,
            "contract_filter_type": "both-way",
            "contract_scope": null,
            "description": null,
            "filter": "Filter1",
            "filter_directives": null,
            "filter_schema": null,
            "filter_template": null,
            "filter_type": "both-way",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "priority": null,
            "qos_level": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "Contract1",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/contracts/-",
            "value": {
                "displayName": "Contract1",
                "filterRelationships": [
                    {
                        "directives": [
                            "none"
                        ],
                        "filterRef": {
                            "filterName": "Filter1",
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "templateName": "ansible_template1"
                        }
                    }
                ],
                "filterType": "bothWay",
                "name": "Contract1",
                "scope": "context"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "directives": [
            "none"
        ],
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        }
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "contractFilterType": "bothWay",
        "contractScope": "context",
        "directives": [
            "none"
        ],
        "displayName": "Contract1",
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "filterType": "both-way"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084747.1259918-8188-39984944131884 `" && echo ansible-tmp-1710084747.1259918-8188-39984944131884="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084747.1259918-8188-39984944131884 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_contract_filter.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpe5gdyfyh TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084747.1259918-8188-39984944131884/AnsiballZ_mso_schema_template_contract_filter.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084747.1259918-8188-39984944131884/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084747.1259918-8188-39984944131884/AnsiballZ_mso_schema_template_contract_filter.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084747.1259918-8188-39984944131884/AnsiballZ_mso_schema_template_contract_filter.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084747.1259918-8188-39984944131884/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=Contract2) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "contractFilterType": "bothWay",
        "contractScope": "context",
        "directives": [
            "none"
        ],
        "displayName": "Contract2",
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "filterType": "both-way"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/contracts/-\", \"value\": {\"name\": \"Contract2\", \"displayName\": \"Contract2\", \"filterType\": \"bothWay\", \"scope\": \"context\", \"filterRelationships\": [{\"filterRef\": {\"filterName\": \"Filter1\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"directives\": [\"none\"]}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "action": null,
            "contract": "Contract2",
            "contract_display_name": null,
            "contract_filter_type": "both-way",
            "contract_scope": null,
            "description": null,
            "filter": "Filter1",
            "filter_directives": null,
            "filter_schema": null,
            "filter_template": null,
            "filter_type": "both-way",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "priority": null,
            "qos_level": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "Contract2",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/contracts/-",
            "value": {
                "displayName": "Contract2",
                "filterRelationships": [
                    {
                        "directives": [
                            "none"
                        ],
                        "filterRef": {
                            "filterName": "Filter1",
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "templateName": "ansible_template1"
                        }
                    }
                ],
                "filterType": "bothWay",
                "name": "Contract2",
                "scope": "context"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "directives": [
            "none"
        ],
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        }
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "contractFilterType": "bothWay",
        "contractScope": "context",
        "directives": [
            "none"
        ],
        "displayName": "Contract2",
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "filterType": "both-way"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084753.408609-8188-19458145742404 `" && echo ansible-tmp-1710084753.408609-8188-19458145742404="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084753.408609-8188-19458145742404 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_contract_filter.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpv6c12d3h TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084753.408609-8188-19458145742404/AnsiballZ_mso_schema_template_contract_filter.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084753.408609-8188-19458145742404/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084753.408609-8188-19458145742404/AnsiballZ_mso_schema_template_contract_filter.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084753.408609-8188-19458145742404/AnsiballZ_mso_schema_template_contract_filter.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084753.408609-8188-19458145742404/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=Contract3) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "contractFilterType": "bothWay",
        "contractScope": "context",
        "directives": [
            "none"
        ],
        "displayName": "Contract3",
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "filterType": "both-way"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/contracts/-\", \"value\": {\"name\": \"Contract3\", \"displayName\": \"Contract3\", \"filterType\": \"bothWay\", \"scope\": \"context\", \"filterRelationships\": [{\"filterRef\": {\"filterName\": \"Filter1\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"directives\": [\"none\"]}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "action": null,
            "contract": "Contract3",
            "contract_display_name": null,
            "contract_filter_type": "both-way",
            "contract_scope": null,
            "description": null,
            "filter": "Filter1",
            "filter_directives": null,
            "filter_schema": null,
            "filter_template": null,
            "filter_type": "both-way",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "priority": null,
            "qos_level": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "Contract3",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/contracts/-",
            "value": {
                "displayName": "Contract3",
                "filterRelationships": [
                    {
                        "directives": [
                            "none"
                        ],
                        "filterRef": {
                            "filterName": "Filter1",
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "templateName": "ansible_template1"
                        }
                    }
                ],
                "filterType": "bothWay",
                "name": "Contract3",
                "scope": "context"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "directives": [
            "none"
        ],
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        }
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "contractFilterType": "bothWay",
        "contractScope": "context",
        "directives": [
            "none"
        ],
        "displayName": "Contract3",
        "filterRef": {
            "filterName": "Filter1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "filterType": "both-way"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add a VRF1 to ansible_template1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:158
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084761.0618181-8319-54028353200441 `" && echo ansible-tmp-1710084761.0618181-8319-54028353200441="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084761.0618181-8319-54028353200441 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_vrf.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpcnf5gqln TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084761.0618181-8319-54028353200441/AnsiballZ_mso_schema_template_vrf.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084761.0618181-8319-54028353200441/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084761.0618181-8319-54028353200441/AnsiballZ_mso_schema_template_vrf.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084761.0618181-8319-54028353200441/AnsiballZ_mso_schema_template_vrf.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084761.0618181-8319-54028353200441/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "displayName": "VRF1",
        "name": "VRF1"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/vrfs/-\", \"value\": {\"name\": \"VRF1\", \"displayName\": \"VRF1\"}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "display_name": null,
            "host": "173.36.219.30",
            "ip_data_plane_learning": null,
            "layer3_multicast": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "preferred_group": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false,
            "vrf": "VRF1",
            "vzany": null
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/vrfs/-",
            "value": {
                "displayName": "VRF1",
                "name": "VRF1"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "displayName": "VRF1",
        "name": "VRF1"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "displayName": "VRF1",
        "name": "VRF1"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add BD1 to ansible_template1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:174
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084767.892813-8374-229124996066578 `" && echo ansible-tmp-1710084767.892813-8374-229124996066578="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084767.892813-8374-229124996066578 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_bd.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpiwt59s0j TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084767.892813-8374-229124996066578/AnsiballZ_mso_schema_template_bd.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084767.892813-8374-229124996066578/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084767.892813-8374-229124996066578/AnsiballZ_mso_schema_template_bd.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084767.892813-8374-229124996066578/AnsiballZ_mso_schema_template_bd.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084767.892813-8374-229124996066578/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "displayName": "BD1",
        "l2Stretch": true,
        "name": "BD1",
        "subnets": [],
        "vrfRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1",
            "vrfName": "VRF1"
        }
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/bds/-\", \"value\": {\"name\": \"BD1\", \"displayName\": \"BD1\", \"l2Stretch\": true, \"subnets\": [], \"vrfRef\": {\"vrfName\": \"VRF1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "arp_flooding": null,
            "bd": "BD1",
            "description": null,
            "dhcp_policies": null,
            "dhcp_policy": null,
            "display_name": null,
            "host": "173.36.219.30",
            "intersite_bum_traffic": null,
            "ipv6_unknown_multicast_flooding": null,
            "layer2_stretch": true,
            "layer2_unknown_unicast": null,
            "layer3_multicast": null,
            "login_domain": null,
            "multi_destination_flooding": null,
            "optimize_wan_bandwidth": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "state": "present",
            "subnets": null,
            "template": "ansible_template1",
            "timeout": null,
            "unicast_routing": null,
            "unknown_multicast_flooding": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false,
            "virtual_mac_address": null,
            "vrf": {
                "name": "VRF1",
                "schema": null,
                "template": null
            }
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/bds/-",
            "value": {
                "displayName": "BD1",
                "l2Stretch": true,
                "name": "BD1",
                "subnets": [],
                "vrfRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "templateName": "ansible_template1",
                    "vrfName": "VRF1"
                }
            }
        }
    ],
    "previous": {},
    "proposed": {
        "displayName": "BD1",
        "l2Stretch": true,
        "name": "BD1",
        "subnets": [],
        "vrfRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1",
            "vrfName": "VRF1"
        }
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "displayName": "BD1",
        "l2Stretch": true,
        "name": "BD1",
        "subnets": [],
        "vrfRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1",
            "vrfName": "VRF1"
        }
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add AP1 to ansible_template1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:194
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084774.753668-8431-250480941930615 `" && echo ansible-tmp-1710084774.753668-8431-250480941930615="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084774.753668-8431-250480941930615 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_anp.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp8mc7pjpu TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084774.753668-8431-250480941930615/AnsiballZ_mso_schema_template_anp.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084774.753668-8431-250480941930615/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084774.753668-8431-250480941930615/AnsiballZ_mso_schema_template_anp.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084774.753668-8431-250480941930615/AnsiballZ_mso_schema_template_anp.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084774.753668-8431-250480941930615/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "displayName": "AP1",
        "epgs": [],
        "name": "AP1"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/anps/-\", \"value\": {\"name\": \"AP1\", \"displayName\": \"AP1\", \"epgs\": []}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "anp": "AP1",
            "description": null,
            "display_name": null,
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/anps/-",
            "value": {
                "displayName": "AP1",
                "epgs": [],
                "name": "AP1"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "displayName": "AP1",
        "epgs": [],
        "name": "AP1"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "displayName": "AP1",
        "epgs": [],
        "name": "AP1"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add EPG1 to AP1 in ansible_template1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:202
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084782.0177238-8468-20037011143154 `" && echo ansible-tmp-1710084782.0177238-8468-20037011143154="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084782.0177238-8468-20037011143154 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_anp_epg.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp5n0wmqtj TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084782.0177238-8468-20037011143154/AnsiballZ_mso_schema_template_anp_epg.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084782.0177238-8468-20037011143154/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084782.0177238-8468-20037011143154/AnsiballZ_mso_schema_template_anp_epg.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084782.0177238-8468-20037011143154/AnsiballZ_mso_schema_template_anp_epg.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084782.0177238-8468-20037011143154/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "bdRef": {
            "bdName": "BD1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "displayName": "EPG1",
        "name": "EPG1",
        "vrfRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1",
            "vrfName": "VRF1"
        }
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/anps/AP1/epgs/-\", \"value\": {\"name\": \"EPG1\", \"displayName\": \"EPG1\", \"bdRef\": {\"bdName\": \"BD1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\"}, \"vrfRef\": {\"vrfName\": \"VRF1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "access_type": null,
            "anp": "AP1",
            "bd": {
                "name": "BD1",
                "schema": null,
                "template": null
            },
            "deployment_type": null,
            "description": null,
            "display_name": null,
            "epg": "EPG1",
            "epg_type": null,
            "host": "173.36.219.30",
            "intersite_multicast_source": null,
            "intra_epg_isolation": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "preferred_group": null,
            "proxy_arp": null,
            "qos_level": null,
            "schema": "ans_li_schema",
            "service_type": null,
            "state": "present",
            "subnets": null,
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "useg_epg": null,
            "username": "ansible_github_ci",
            "validate_certs": false,
            "vrf": {
                "name": "VRF1",
                "schema": null,
                "template": null
            }
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/anps/AP1/epgs/-",
            "value": {
                "bdRef": {
                    "bdName": "BD1",
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "templateName": "ansible_template1"
                },
                "displayName": "EPG1",
                "name": "EPG1",
                "vrfRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "templateName": "ansible_template1",
                    "vrfName": "VRF1"
                }
            }
        }
    ],
    "previous": {},
    "proposed": {
        "bdRef": {
            "bdName": "BD1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "displayName": "EPG1",
        "name": "EPG1",
        "vrfRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1",
            "vrfName": "VRF1"
        }
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "bdRef": {
            "bdName": "BD1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "displayName": "EPG1",
        "name": "EPG1",
        "vrfRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1",
            "vrfName": "VRF1"
        }
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Bind Contract1 and 2 with EPG1 provider] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:215
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084788.8376782-8523-181118999201030 `" && echo ansible-tmp-1710084788.8376782-8523-181118999201030="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084788.8376782-8523-181118999201030 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_anp_epg_contract.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp_c16te9v TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084788.8376782-8523-181118999201030/AnsiballZ_mso_schema_template_anp_epg_contract.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084788.8376782-8523-181118999201030/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084788.8376782-8523-181118999201030/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084788.8376782-8523-181118999201030/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084788.8376782-8523-181118999201030/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=Contract1) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "contractRef": {
            "contractName": "Contract1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "provider"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-\", \"value\": {\"relationshipType\": \"provider\", \"contractRef\": {\"contractName\": \"Contract1\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "anp": "AP1",
            "contract": {
                "name": "Contract1",
                "schema": "ans_li_schema",
                "schema_id": "65edd25db4bb6f5a86d3c1a3",
                "template": "ansible_template1",
                "type": "provider"
            },
            "epg": "EPG1",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "Contract1",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-",
            "value": {
                "contractRef": {
                    "contractName": "Contract1",
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "templateName": "ansible_template1"
                },
                "relationshipType": "provider"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "contractRef": {
            "contractName": "Contract1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "provider"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "contractRef": {
            "contractName": "Contract1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "provider"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084795.674737-8523-270094655320767 `" && echo ansible-tmp-1710084795.674737-8523-270094655320767="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084795.674737-8523-270094655320767 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_anp_epg_contract.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpfcqspa4i TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084795.674737-8523-270094655320767/AnsiballZ_mso_schema_template_anp_epg_contract.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084795.674737-8523-270094655320767/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084795.674737-8523-270094655320767/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084795.674737-8523-270094655320767/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084795.674737-8523-270094655320767/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=Contract2) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "contractRef": {
            "contractName": "Contract2",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "provider"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-\", \"value\": {\"relationshipType\": \"provider\", \"contractRef\": {\"contractName\": \"Contract2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "anp": "AP1",
            "contract": {
                "name": "Contract2",
                "schema": "ans_li_schema",
                "schema_id": "65edd25db4bb6f5a86d3c1a3",
                "template": "ansible_template1",
                "type": "provider"
            },
            "epg": "EPG1",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "Contract2",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-",
            "value": {
                "contractRef": {
                    "contractName": "Contract2",
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "templateName": "ansible_template1"
                },
                "relationshipType": "provider"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "contractRef": {
            "contractName": "Contract2",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "provider"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "contractRef": {
            "contractName": "Contract2",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "provider"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Bind Contract1 with EPG1 consumer] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:230
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084803.654735-8631-20102572679684 `" && echo ansible-tmp-1710084803.654735-8631-20102572679684="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084803.654735-8631-20102572679684 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_anp_epg_contract.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp57eskpsi TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084803.654735-8631-20102572679684/AnsiballZ_mso_schema_template_anp_epg_contract.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084803.654735-8631-20102572679684/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084803.654735-8631-20102572679684/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084803.654735-8631-20102572679684/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084803.654735-8631-20102572679684/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=Contract1) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "contractRef": {
            "contractName": "Contract1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-\", \"value\": {\"relationshipType\": \"consumer\", \"contractRef\": {\"contractName\": \"Contract1\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "anp": "AP1",
            "contract": {
                "name": "Contract1",
                "schema": "ans_li_schema",
                "schema_id": "65edd25db4bb6f5a86d3c1a3",
                "template": "ansible_template1",
                "type": "consumer"
            },
            "epg": "EPG1",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "Contract1",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-",
            "value": {
                "contractRef": {
                    "contractName": "Contract1",
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "templateName": "ansible_template1"
                },
                "relationshipType": "consumer"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "contractRef": {
            "contractName": "Contract1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "contractRef": {
            "contractName": "Contract1",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084810.016343-8631-223651861637262 `" && echo ansible-tmp-1710084810.016343-8631-223651861637262="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084810.016343-8631-223651861637262 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_anp_epg_contract.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpg_b6ebkf TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084810.016343-8631-223651861637262/AnsiballZ_mso_schema_template_anp_epg_contract.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084810.016343-8631-223651861637262/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084810.016343-8631-223651861637262/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084810.016343-8631-223651861637262/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084810.016343-8631-223651861637262/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=Contract2) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "contractRef": {
            "contractName": "Contract2",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-\", \"value\": {\"relationshipType\": \"consumer\", \"contractRef\": {\"contractName\": \"Contract2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "anp": "AP1",
            "contract": {
                "name": "Contract2",
                "schema": "ans_li_schema",
                "schema_id": "65edd25db4bb6f5a86d3c1a3",
                "template": "ansible_template1",
                "type": "consumer"
            },
            "epg": "EPG1",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "Contract2",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-",
            "value": {
                "contractRef": {
                    "contractName": "Contract2",
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "templateName": "ansible_template1"
                },
                "relationshipType": "consumer"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "contractRef": {
            "contractName": "Contract2",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "contractRef": {
            "contractName": "Contract2",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084816.4661918-8631-45654894142588 `" && echo ansible-tmp-1710084816.4661918-8631-45654894142588="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084816.4661918-8631-45654894142588 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_anp_epg_contract.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmppydyw3v6 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084816.4661918-8631-45654894142588/AnsiballZ_mso_schema_template_anp_epg_contract.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084816.4661918-8631-45654894142588/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084816.4661918-8631-45654894142588/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084816.4661918-8631-45654894142588/AnsiballZ_mso_schema_template_anp_epg_contract.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084816.4661918-8631-45654894142588/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => (item=Contract3) => {
    "ansible_loop_var": "item",
    "changed": true,
    "current": {
        "contractRef": {
            "contractName": "Contract3",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-\", \"value\": {\"relationshipType\": \"consumer\", \"contractRef\": {\"contractName\": \"Contract3\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "anp": "AP1",
            "contract": {
                "name": "Contract3",
                "schema": "ans_li_schema",
                "schema_id": "65edd25db4bb6f5a86d3c1a3",
                "template": "ansible_template1",
                "type": "consumer"
            },
            "epg": "EPG1",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "item": "Contract3",
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/anps/AP1/epgs/EPG1/contractRelationships/-",
            "value": {
                "contractRef": {
                    "contractName": "Contract3",
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "templateName": "ansible_template1"
                },
                "relationshipType": "consumer"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "contractRef": {
            "contractName": "Contract3",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "contractRef": {
            "contractName": "Contract3",
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "templateName": "ansible_template1"
        },
        "relationshipType": "consumer"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Bind Contract1 with template service graph - ansible_service_graph] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:246
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084824.355573-8779-210486064143436 `" && echo ansible-tmp-1710084824.355573-8779-210486064143436="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084824.355573-8779-210486064143436 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_contract_service_graph.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp6na7q074 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084824.355573-8779-210486064143436/AnsiballZ_mso_schema_template_contract_service_graph.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084824.355573-8779-210486064143436/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084824.355573-8779-210486064143436/AnsiballZ_mso_schema_template_contract_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084824.355573-8779-210486064143436/AnsiballZ_mso_schema_template_contract_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084824.355573-8779-210486064143436/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "consumerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "providerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "providerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/contracts/Contract1/serviceGraphRelationship\", \"value\": {\"serviceGraphRef\": {\"serviceGraphName\": \"ansible_service_graph\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"serviceNodesRelationship\": [{\"serviceNodeRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"serviceGraphName\": \"ansible_service_graph\", \"serviceNodeName\": \"node1\"}, \"providerConnector\": {\"connectorType\": \"general\", \"bdRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"bdName\": \"BD1\"}}, \"consumerConnector\": {\"connectorType\": \"general\", \"bdRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"bdName\": \"BD1\"}}}, {\"serviceNodeRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"serviceGraphName\": \"ansible_service_graph\", \"serviceNodeName\": \"node2\"}, \"providerConnector\": {\"connectorType\": \"general\", \"bdRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"bdName\": \"BD1\"}}, \"consumerConnector\": {\"connectorType\": \"general\", \"bdRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"bdName\": \"BD1\"}}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract1",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "service_graph": "ansible_service_graph",
            "service_graph_schema": null,
            "service_graph_template": null,
            "service_nodes": [
                {
                    "connector_object_type": "bd",
                    "consumer": "BD1",
                    "consumer_schema": null,
                    "consumer_template": null,
                    "provider": "BD1",
                    "provider_schema": null,
                    "provider_template": null
                },
                {
                    "connector_object_type": "bd",
                    "consumer": "BD1",
                    "consumer_schema": null,
                    "consumer_template": null,
                    "provider": "BD1",
                    "provider_schema": null,
                    "provider_template": null
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/contracts/Contract1/serviceGraphRelationship",
            "value": {
                "serviceGraphRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "templateName": "ansible_template1"
                },
                "serviceNodesRelationship": [
                    {
                        "consumerConnector": {
                            "bdRef": {
                                "bdName": "BD1",
                                "schemaId": "65edd25db4bb6f5a86d3c1a3",
                                "templateName": "ansible_template1"
                            },
                            "connectorType": "general"
                        },
                        "providerConnector": {
                            "bdRef": {
                                "bdName": "BD1",
                                "schemaId": "65edd25db4bb6f5a86d3c1a3",
                                "templateName": "ansible_template1"
                            },
                            "connectorType": "general"
                        },
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph",
                            "serviceNodeName": "node1",
                            "templateName": "ansible_template1"
                        }
                    },
                    {
                        "consumerConnector": {
                            "bdRef": {
                                "bdName": "BD1",
                                "schemaId": "65edd25db4bb6f5a86d3c1a3",
                                "templateName": "ansible_template1"
                            },
                            "connectorType": "general"
                        },
                        "providerConnector": {
                            "bdRef": {
                                "bdName": "BD1",
                                "schemaId": "65edd25db4bb6f5a86d3c1a3",
                                "templateName": "ansible_template1"
                            },
                            "connectorType": "general"
                        },
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph",
                            "serviceNodeName": "node2",
                            "templateName": "ansible_template1"
                        }
                    }
                ]
            }
        }
    ],
    "previous": {},
    "proposed": {},
    "response": "OK (unknown bytes)",
    "sent": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "consumerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "providerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "providerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Bind Contract2 with template service graph - ansible_service_graph2] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:260
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084833.818632-8836-137331773437755 `" && echo ansible-tmp-1710084833.818632-8836-137331773437755="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084833.818632-8836-137331773437755 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_contract_service_graph.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp1gb5e7hv TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084833.818632-8836-137331773437755/AnsiballZ_mso_schema_template_contract_service_graph.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084833.818632-8836-137331773437755/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084833.818632-8836-137331773437755/AnsiballZ_mso_schema_template_contract_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084833.818632-8836-137331773437755/AnsiballZ_mso_schema_template_contract_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084833.818632-8836-137331773437755/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "consumerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "providerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "providerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/templates/ansible_template1/contracts/Contract2/serviceGraphRelationship\", \"value\": {\"serviceGraphRef\": {\"serviceGraphName\": \"ansible_service_graph2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"serviceNodesRelationship\": [{\"serviceNodeRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"serviceGraphName\": \"ansible_service_graph2\", \"serviceNodeName\": \"node1\"}, \"providerConnector\": {\"connectorType\": \"general\", \"bdRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"bdName\": \"BD1\"}}, \"consumerConnector\": {\"connectorType\": \"general\", \"bdRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"bdName\": \"BD1\"}}}, {\"serviceNodeRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"serviceGraphName\": \"ansible_service_graph2\", \"serviceNodeName\": \"node2\"}, \"providerConnector\": {\"connectorType\": \"general\", \"bdRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"bdName\": \"BD1\"}}, \"consumerConnector\": {\"connectorType\": \"general\", \"bdRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"templateName\": \"ansible_template1\", \"bdName\": \"BD1\"}}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "service_graph": "ansible_service_graph2",
            "service_graph_schema": null,
            "service_graph_template": null,
            "service_nodes": [
                {
                    "connector_object_type": "bd",
                    "consumer": "BD1",
                    "consumer_schema": null,
                    "consumer_template": null,
                    "provider": "BD1",
                    "provider_schema": null,
                    "provider_template": null
                },
                {
                    "connector_object_type": "bd",
                    "consumer": "BD1",
                    "consumer_schema": null,
                    "consumer_template": null,
                    "provider": "BD1",
                    "provider_schema": null,
                    "provider_template": null
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/templates/ansible_template1/contracts/Contract2/serviceGraphRelationship",
            "value": {
                "serviceGraphRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "templateName": "ansible_template1"
                },
                "serviceNodesRelationship": [
                    {
                        "consumerConnector": {
                            "bdRef": {
                                "bdName": "BD1",
                                "schemaId": "65edd25db4bb6f5a86d3c1a3",
                                "templateName": "ansible_template1"
                            },
                            "connectorType": "general"
                        },
                        "providerConnector": {
                            "bdRef": {
                                "bdName": "BD1",
                                "schemaId": "65edd25db4bb6f5a86d3c1a3",
                                "templateName": "ansible_template1"
                            },
                            "connectorType": "general"
                        },
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph2",
                            "serviceNodeName": "node1",
                            "templateName": "ansible_template1"
                        }
                    },
                    {
                        "consumerConnector": {
                            "bdRef": {
                                "bdName": "BD1",
                                "schemaId": "65edd25db4bb6f5a86d3c1a3",
                                "templateName": "ansible_template1"
                            },
                            "connectorType": "general"
                        },
                        "providerConnector": {
                            "bdRef": {
                                "bdName": "BD1",
                                "schemaId": "65edd25db4bb6f5a86d3c1a3",
                                "templateName": "ansible_template1"
                            },
                            "connectorType": "general"
                        },
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph2",
                            "serviceNodeName": "node2",
                            "templateName": "ansible_template1"
                        }
                    }
                ]
            }
        }
    ],
    "previous": {},
    "proposed": {},
    "response": "OK (unknown bytes)",
    "sent": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "consumerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "providerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "providerConnector": {
                    "bdRef": {
                        "bdName": "BD1",
                        "schemaId": "65edd25db4bb6f5a86d3c1a3",
                        "templateName": "ansible_template1"
                    },
                    "connectorType": "general"
                },
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add site VRF region CIDR to the VRF1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:274
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084842.2077801-8908-107600718969692 `" && echo ansible-tmp-1710084842.2077801-8908-107600718969692="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084842.2077801-8908-107600718969692 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_vrf_region_cidr.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmphtivdvna TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084842.2077801-8908-107600718969692/AnsiballZ_mso_schema_site_vrf_region_cidr.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084842.2077801-8908-107600718969692/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084842.2077801-8908-107600718969692/AnsiballZ_mso_schema_site_vrf_region_cidr.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084842.2077801-8908-107600718969692/AnsiballZ_mso_schema_site_vrf_region_cidr.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084842.2077801-8908-107600718969692/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "ip": "14.14.14.1/24",
        "primary": true
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/vrfs/VRF1/regions/-\", \"value\": {\"name\": \"westus2\", \"cidrs\": [{\"ip\": \"14.14.14.1/24\", \"primary\": true}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "cidr": "14.14.14.1/24",
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "primary": true,
            "region": "westus2",
            "schema": "ans_li_schema",
            "site": "azure_ansible_test_2",
            "state": "present",
            "template": "ansible_template1",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false,
            "vrf": "VRF1"
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/vrfs/VRF1/regions/-",
            "value": {
                "cidrs": [
                    {
                        "ip": "14.14.14.1/24",
                        "primary": true
                    }
                ],
                "name": "westus2"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "cidrs": [
            {
                "ip": "14.14.14.1/24",
                "primary": true
            }
        ],
        "name": "westus2"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "cidrs": [
            {
                "ip": "14.14.14.1/24",
                "primary": true
            }
        ],
        "name": "westus2"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add Service Graph 1 at site level for the Azure site service graph test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:291
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084849.907528-8965-253475436129779 `" && echo ansible-tmp-1710084849.907528-8965-253475436129779="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084849.907528-8965-253475436129779 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_service_graph.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmplxrwqg11 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084849.907528-8965-253475436129779/AnsiballZ_mso_schema_site_service_graph.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084849.907528-8965-253475436129779/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084849.907528-8965-253475436129779/AnsiballZ_mso_schema_site_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084849.907528-8965-253475436129779/AnsiballZ_mso_schema_site_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084849.907528-8965-253475436129779/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_firewall1",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_tplb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"replace\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/serviceGraphs/ansible_service_graph\", \"value\": {\"serviceNodes\": [{\"device\": {\"dn\": \"uni/tn-ans_li_tenant/cld-ans_li_tenant_firewall1\", \"funcType\": \"GoTo\"}, \"serviceNodeRef\": {\"serviceNodeName\": \"node1\", \"serviceGraphName\": \"ansible_service_graph\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"consumerInterface\": null, \"providerInterface\": null, \"providerConnectorType\": null, \"consumerConnectorType\": null}, {\"device\": {\"dn\": \"uni/tn-ans_li_tenant/cld-ans_li_tenant_tplb\", \"funcType\": \"GoTo\"}, \"serviceNodeRef\": {\"serviceNodeName\": \"node2\", \"serviceGraphName\": \"ansible_service_graph\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"consumerInterface\": null, \"providerInterface\": null, \"providerConnectorType\": null, \"consumerConnectorType\": null}], \"serviceGraphRef\": {\"serviceGraphName\": \"ansible_service_graph\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "devices": [
                {
                    "consumer_connector_type": null,
                    "consumer_interface": null,
                    "device_name": "ans_li_tenant_firewall1",
                    "name": "ans_li_tenant_firewall1",
                    "provider_connector_type": null,
                    "provider_interface": null
                },
                {
                    "consumer_connector_type": null,
                    "consumer_interface": null,
                    "device_name": "ans_li_tenant_tplb",
                    "name": "ans_li_tenant_tplb",
                    "provider_connector_type": null,
                    "provider_interface": null
                }
            ],
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "service_graph": "ansible_service_graph",
            "site": "azure_ansible_test_2",
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "replace",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/serviceGraphs/ansible_service_graph",
            "value": {
                "serviceGraphRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "templateName": "ansible_template1"
                },
                "serviceNodes": [
                    {
                        "consumerConnectorType": null,
                        "consumerInterface": null,
                        "device": {
                            "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_firewall1",
                            "funcType": "GoTo"
                        },
                        "providerConnectorType": null,
                        "providerInterface": null,
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph",
                            "serviceNodeName": "node1",
                            "templateName": "ansible_template1"
                        }
                    },
                    {
                        "consumerConnectorType": null,
                        "consumerInterface": null,
                        "device": {
                            "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_tplb",
                            "funcType": "GoTo"
                        },
                        "providerConnectorType": null,
                        "providerInterface": null,
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph",
                            "serviceNodeName": "node2",
                            "templateName": "ansible_template1"
                        }
                    }
                ]
            }
        }
    ],
    "previous": {
        "serviceGraphRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph",
        "serviceNodes": null
    },
    "proposed": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_firewall1",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_tplb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_firewall1",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/cld-ans_li_tenant_tplb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add Service Graph 2 at site level for the Azure site service graph test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:306
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084858.83831-9016-198916210516711 `" && echo ansible-tmp-1710084858.83831-9016-198916210516711="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084858.83831-9016-198916210516711 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_service_graph.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmps0xmrlm8 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084858.83831-9016-198916210516711/AnsiballZ_mso_schema_site_service_graph.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084858.83831-9016-198916210516711/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084858.83831-9016-198916210516711/AnsiballZ_mso_schema_site_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084858.83831-9016-198916210516711/AnsiballZ_mso_schema_site_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084858.83831-9016-198916210516711/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_aplb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"replace\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/serviceGraphs/ansible_service_graph2\", \"value\": {\"serviceNodes\": [{\"device\": {\"dn\": \"uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb\", \"funcType\": \"GoTo\"}, \"serviceNodeRef\": {\"serviceNodeName\": \"node1\", \"serviceGraphName\": \"ansible_service_graph2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"consumerInterface\": null, \"providerInterface\": null, \"providerConnectorType\": null, \"consumerConnectorType\": null}, {\"device\": {\"dn\": \"uni/tn-ans_li_tenant/clb-ans_li_tenant_aplb\", \"funcType\": \"GoTo\"}, \"serviceNodeRef\": {\"serviceNodeName\": \"node2\", \"serviceGraphName\": \"ansible_service_graph2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}, \"consumerInterface\": null, \"providerInterface\": null, \"providerConnectorType\": null, \"consumerConnectorType\": null}], \"serviceGraphRef\": {\"serviceGraphName\": \"ansible_service_graph2\", \"templateName\": \"ansible_template1\", \"schemaId\": \"65edd25db4bb6f5a86d3c1a3\"}}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "devices": [
                {
                    "consumer_connector_type": null,
                    "consumer_interface": null,
                    "device_name": "ans_li_tenant_nlb",
                    "name": "ans_li_tenant_nlb",
                    "provider_connector_type": null,
                    "provider_interface": null
                },
                {
                    "consumer_connector_type": null,
                    "consumer_interface": null,
                    "device_name": "ans_li_tenant_aplb",
                    "name": "ans_li_tenant_aplb",
                    "provider_connector_type": null,
                    "provider_interface": null
                }
            ],
            "host": "173.36.219.30",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "service_graph": "ansible_service_graph2",
            "site": "azure_ansible_test_2",
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "replace",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/serviceGraphs/ansible_service_graph2",
            "value": {
                "serviceGraphRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "templateName": "ansible_template1"
                },
                "serviceNodes": [
                    {
                        "consumerConnectorType": null,
                        "consumerInterface": null,
                        "device": {
                            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb",
                            "funcType": "GoTo"
                        },
                        "providerConnectorType": null,
                        "providerInterface": null,
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph2",
                            "serviceNodeName": "node1",
                            "templateName": "ansible_template1"
                        }
                    },
                    {
                        "consumerConnectorType": null,
                        "consumerInterface": null,
                        "device": {
                            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_aplb",
                            "funcType": "GoTo"
                        },
                        "providerConnectorType": null,
                        "providerInterface": null,
                        "serviceNodeRef": {
                            "schemaId": "65edd25db4bb6f5a86d3c1a3",
                            "serviceGraphName": "ansible_service_graph2",
                            "serviceNodeName": "node2",
                            "templateName": "ansible_template1"
                        }
                    }
                ]
            }
        }
    ],
    "previous": {
        "serviceGraphRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2",
        "serviceNodes": null
    },
    "proposed": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_aplb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodes": [
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node1",
                    "templateName": "ansible_template1"
                }
            },
            {
                "consumerConnectorType": null,
                "consumerInterface": null,
                "device": {
                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_aplb",
                    "funcType": "GoTo"
                },
                "providerConnectorType": null,
                "providerInterface": null,
                "serviceNodeRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "serviceNodeName": "node2",
                    "templateName": "ansible_template1"
                }
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Bind the Contract1 with site service graph - ansible_service_graph] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:321
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084867.62449-9091-279554966840507 `" && echo ansible-tmp-1710084867.62449-9091-279554966840507="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084867.62449-9091-279554966840507 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp64rg2n80 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084867.62449-9091-279554966840507/AnsiballZ_mso_schema_site_contract_service_graph.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084867.62449-9091-279554966840507/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084867.62449-9091-279554966840507/AnsiballZ_mso_schema_site_contract_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084867.62449-9091-279554966840507/AnsiballZ_mso_schema_site_contract_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084867.62449-9091-279554966840507/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1"
            },
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2"
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract1/serviceGraphRelationship\", \"value\": {\"serviceGraphRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"serviceGraphName\": \"ansible_service_graph\", \"templateName\": \"ansible_template1\"}, \"serviceNodesRelationship\": [{\"serviceNodeRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1\"}, {\"serviceNodeRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2\"}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract1",
            "host": "173.36.219.30",
            "login_domain": null,
            "node_relationship": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "service_graph": "ansible_service_graph",
            "service_graph_schema": "ans_li_schema",
            "service_graph_template": "ansible_template1",
            "site": "azure_ansible_test_2",
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract1/serviceGraphRelationship",
            "value": {
                "serviceGraphRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph",
                    "templateName": "ansible_template1"
                },
                "serviceNodesRelationship": [
                    {
                        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1"
                    },
                    {
                        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2"
                    }
                ]
            }
        }
    ],
    "previous": {},
    "proposed": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1"
            },
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2"
            }
        ]
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node1"
            },
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph/serviceNodes/node2"
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Bind the Contract2 with site service graph - ansible_service_graph2] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:336
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084877.366428-9148-194968341370420 `" && echo ansible-tmp-1710084877.366428-9148-194968341370420="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084877.366428-9148-194968341370420 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpcd4j8crz TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084877.366428-9148-194968341370420/AnsiballZ_mso_schema_site_contract_service_graph.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084877.366428-9148-194968341370420/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084877.366428-9148-194968341370420/AnsiballZ_mso_schema_site_contract_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084877.366428-9148-194968341370420/AnsiballZ_mso_schema_site_contract_service_graph.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084877.366428-9148-194968341370420/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
            },
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
            }
        ]
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship\", \"value\": {\"serviceGraphRef\": {\"schemaId\": \"65edd25db4bb6f5a86d3c1a3\", \"serviceGraphName\": \"ansible_service_graph2\", \"templateName\": \"ansible_template1\"}, \"serviceNodesRelationship\": [{\"serviceNodeRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1\"}, {\"serviceNodeRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2\"}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "host": "173.36.219.30",
            "login_domain": null,
            "node_relationship": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "schema": "ans_li_schema",
            "service_graph": "ansible_service_graph2",
            "service_graph_schema": "ans_li_schema",
            "service_graph_template": "ansible_template1",
            "site": "azure_ansible_test_2",
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship",
            "value": {
                "serviceGraphRef": {
                    "schemaId": "65edd25db4bb6f5a86d3c1a3",
                    "serviceGraphName": "ansible_service_graph2",
                    "templateName": "ansible_template1"
                },
                "serviceNodesRelationship": [
                    {
                        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
                    },
                    {
                        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
                    }
                ]
            }
        }
    ],
    "previous": {},
    "proposed": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
            },
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
            }
        ]
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "serviceGraphRef": {
            "schemaId": "65edd25db4bb6f5a86d3c1a3",
            "serviceGraphName": "ansible_service_graph2",
            "templateName": "ansible_template1"
        },
        "serviceNodesRelationship": [
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
            },
            {
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
            }
        ]
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nlb_li_tcp without device when the parent is not present] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:357
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084887.0936031-9205-27821054564294 `" && echo ansible-tmp-1710084887.0936031-9205-27821054564294="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084887.0936031-9205-27821054564294 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp4l11bxke TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084887.0936031-9205-27821054564294/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084887.0936031-9205-27821054564294/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084887.0936031-9205-27821054564294/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084887.0936031-9205-27821054564294/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084887.0936031-9205-27821054564294/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_tcp",
            "listener_port": 80,
            "listener_protocol": "tcp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "tcp",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": 2,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "The 'device' name is required to initialize the parent object.",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Add listener - nlb_li_tcp - check_mode] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:386
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084895.799257-9278-80330603836634 `" && echo ansible-tmp-1710084895.799257-9278-80330603836634="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084895.799257-9278-80330603836634 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpxo0yo54w TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084895.799257-9278-80330603836634/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084895.799257-9278-80330603836634/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084895.799257-9278-80330603836634/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084895.799257-9278-80330603836634/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084895.799257-9278-80330603836634/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "name": "nlb_li_tcp",
                        "nlbDevIp": {
                            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                            "name": "10.10.10.10"
                        },
                        "port": 80,
                        "protocol": "tcp",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 5,
                                    "path": null,
                                    "port": 80,
                                    "protocol": "tcp",
                                    "successCode": "200-399",
                                    "timeout": null,
                                    "unhealthyThreshold": 2,
                                    "useHostFromRule": null
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "tcp",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": null,
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_tcp",
            "listener_port": 80,
            "listener_protocol": "tcp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "tcp",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": 2,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "previous": {},
    "proposed": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "name": "nlb_li_tcp",
                        "nlbDevIp": {
                            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                            "name": "10.10.10.10"
                        },
                        "port": 80,
                        "protocol": "tcp",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 5,
                                    "path": null,
                                    "port": 80,
                                    "protocol": "tcp",
                                    "successCode": "200-399",
                                    "timeout": null,
                                    "unhealthyThreshold": 2,
                                    "useHostFromRule": null
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "tcp",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": null,
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
    },
    "response": "OK (1095 bytes)",
    "sent": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "name": "nlb_li_tcp",
                        "nlbDevIp": {
                            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                            "name": "10.10.10.10"
                        },
                        "port": 80,
                        "protocol": "tcp",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 5,
                                    "path": null,
                                    "port": 80,
                                    "protocol": "tcp",
                                    "successCode": "200-399",
                                    "timeout": null,
                                    "unhealthyThreshold": 2,
                                    "useHostFromRule": null
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "tcp",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": null,
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices"
}

TASK [mso_schema_site_contract_service_graph_listener : Add listener - nlb_li_tcp - normal_mode] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:417
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084905.3558269-9335-143100345061581 `" && echo ansible-tmp-1710084905.3558269-9335-143100345061581="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084905.3558269-9335-143100345061581 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpbfgxxzw8 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084905.3558269-9335-143100345061581/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084905.3558269-9335-143100345061581/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084905.3558269-9335-143100345061581/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084905.3558269-9335-143100345061581/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084905.3558269-9335-143100345061581/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "name": "nlb_li_tcp",
                        "nlbDevIp": {
                            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                            "name": "10.10.10.10"
                        },
                        "port": 80,
                        "protocol": "tcp",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 5,
                                    "path": null,
                                    "port": 80,
                                    "protocol": "tcp",
                                    "successCode": "200-399",
                                    "timeout": null,
                                    "unhealthyThreshold": 2,
                                    "useHostFromRule": null
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "tcp",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": null,
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"replace\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/0\", \"value\": {\"deviceConfiguration\": {\"cloudLoadBalancer\": {\"listeners\": [{\"name\": \"nlb_li_tcp\", \"protocol\": \"tcp\", \"port\": 80, \"secPolicy\": \"default\", \"nlbDevIp\": {\"name\": \"10.10.10.10\", \"dn\": \"uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10\"}, \"rules\": [{\"name\": \"rule1\", \"floatingIp\": null, \"index\": 1, \"host\": null, \"path\": null, \"action\": null, \"actionType\": \"forward\", \"contentType\": null, \"port\": 80, \"protocol\": \"tcp\", \"urlType\": null, \"customURL\": null, \"redirectHostName\": null, \"redirectPath\": null, \"redirectQuery\": null, \"responseCode\": null, \"responseBody\": null, \"redirectProtocol\": null, \"redirectPort\": null, \"redirectCode\": null, \"targetIpType\": null, \"healthCheck\": {\"port\": 80, \"protocol\": \"tcp\", \"path\": null, \"interval\": 5, \"timeout\": null, \"unhealthyThreshold\": 2, \"successCode\": \"200-399\", \"useHostFromRule\": null, \"host\": null}}]}]}}, \"serviceNodeRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1\"}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_tcp",
            "listener_port": 80,
            "listener_protocol": "tcp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "tcp",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": 2,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "replace",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/0",
            "value": {
                "deviceConfiguration": {
                    "cloudLoadBalancer": {
                        "listeners": [
                            {
                                "name": "nlb_li_tcp",
                                "nlbDevIp": {
                                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                                    "name": "10.10.10.10"
                                },
                                "port": 80,
                                "protocol": "tcp",
                                "rules": [
                                    {
                                        "action": null,
                                        "actionType": "forward",
                                        "contentType": null,
                                        "customURL": null,
                                        "floatingIp": null,
                                        "healthCheck": {
                                            "host": null,
                                            "interval": 5,
                                            "path": null,
                                            "port": 80,
                                            "protocol": "tcp",
                                            "successCode": "200-399",
                                            "timeout": null,
                                            "unhealthyThreshold": 2,
                                            "useHostFromRule": null
                                        },
                                        "host": null,
                                        "index": 1,
                                        "name": "rule1",
                                        "path": null,
                                        "port": 80,
                                        "protocol": "tcp",
                                        "redirectCode": null,
                                        "redirectHostName": null,
                                        "redirectPath": null,
                                        "redirectPort": null,
                                        "redirectProtocol": null,
                                        "redirectQuery": null,
                                        "responseBody": null,
                                        "responseCode": null,
                                        "targetIpType": null,
                                        "urlType": null
                                    }
                                ],
                                "secPolicy": "default"
                            }
                        ]
                    }
                },
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "name": "nlb_li_tcp",
                        "nlbDevIp": {
                            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                            "name": "10.10.10.10"
                        },
                        "port": 80,
                        "protocol": "tcp",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 5,
                                    "path": null,
                                    "port": 80,
                                    "protocol": "tcp",
                                    "successCode": "200-399",
                                    "timeout": null,
                                    "unhealthyThreshold": 2,
                                    "useHostFromRule": null
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "tcp",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": null,
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "name": "nlb_li_tcp",
                        "nlbDevIp": {
                            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                            "name": "10.10.10.10"
                        },
                        "port": 80,
                        "protocol": "tcp",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 5,
                                    "path": null,
                                    "port": 80,
                                    "protocol": "tcp",
                                    "successCode": "200-399",
                                    "timeout": null,
                                    "unhealthyThreshold": 2,
                                    "useHostFromRule": null
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "tcp",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": null,
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node1"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add listener - nlb_li_tcp normal_mode again] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:447
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084916.6221461-9421-261075561540311 `" && echo ansible-tmp-1710084916.6221461-9421-261075561540311="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084916.6221461-9421-261075561540311 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpus7nokjz TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084916.6221461-9421-261075561540311/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084916.6221461-9421-261075561540311/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084916.6221461-9421-261075561540311/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084916.6221461-9421-261075561540311/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084916.6221461-9421-261075561540311/ > /dev/null 2>&1 && sleep 0'
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "current": {
        "certificates": null,
        "name": "nlb_li_tcp",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "tcp",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": null,
                    "interval": 5,
                    "path": null,
                    "port": 80,
                    "protocol": "tcp",
                    "successCode": "200-399",
                    "timeout": null,
                    "unhealthyThreshold": 2,
                    "useHostFromRule": null
                },
                "host": null,
                "index": 1,
                "name": "rule1",
                "path": null,
                "port": 80,
                "protocol": "tcp",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": null,
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"replace\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/0/deviceConfiguration/cloudLoadBalancer/listeners/nlb_li_tcp\", \"value\": {\"name\": \"nlb_li_tcp\", \"port\": 80, \"protocol\": \"tcp\", \"nlbDevIp\": {\"name\": \"10.10.10.10\", \"dn\": \"uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10\"}, \"secPolicy\": \"default\", \"certificates\": null, \"rules\": [{\"name\": \"rule1\", \"floatingIp\": null, \"index\": 1, \"host\": null, \"path\": null, \"action\": null, \"actionType\": \"forward\", \"contentType\": null, \"port\": 80, \"protocol\": \"tcp\", \"urlType\": null, \"customURL\": null, \"redirectHostName\": null, \"redirectPath\": null, \"redirectQuery\": null, \"responseCode\": null, \"responseBody\": null, \"redirectProtocol\": null, \"redirectPort\": null, \"redirectCode\": null, \"targetIpType\": null, \"healthCheck\": {\"port\": 80, \"protocol\": \"tcp\", \"path\": null, \"interval\": 5, \"timeout\": null, \"unhealthyThreshold\": 2, \"successCode\": \"200-399\", \"useHostFromRule\": null, \"host\": null}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_tcp",
            "listener_port": 80,
            "listener_protocol": "tcp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "tcp",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": 2,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "replace",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/0/deviceConfiguration/cloudLoadBalancer/listeners/nlb_li_tcp",
            "value": {
                "certificates": null,
                "name": "nlb_li_tcp",
                "nlbDevIp": {
                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                    "name": "10.10.10.10"
                },
                "port": 80,
                "protocol": "tcp",
                "rules": [
                    {
                        "action": null,
                        "actionType": "forward",
                        "contentType": null,
                        "customURL": null,
                        "floatingIp": null,
                        "healthCheck": {
                            "host": null,
                            "interval": 5,
                            "path": null,
                            "port": 80,
                            "protocol": "tcp",
                            "successCode": "200-399",
                            "timeout": null,
                            "unhealthyThreshold": 2,
                            "useHostFromRule": null
                        },
                        "host": null,
                        "index": 1,
                        "name": "rule1",
                        "path": null,
                        "port": 80,
                        "protocol": "tcp",
                        "redirectCode": null,
                        "redirectHostName": null,
                        "redirectPath": null,
                        "redirectPort": null,
                        "redirectProtocol": null,
                        "redirectQuery": null,
                        "responseBody": null,
                        "responseCode": null,
                        "targetIpType": null,
                        "urlType": null
                    }
                ],
                "secPolicy": "default"
            }
        }
    ],
    "previous": {
        "certificates": null,
        "name": "nlb_li_tcp",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "tcp",
        "rules": [
            {
                "action": [
                    "Forward To "
                ],
                "actionType": "forward",
                "contentType": "textPlain",
                "healthCheck": {
                    "interval": 5,
                    "port": 80,
                    "protocol": "tcp",
                    "successCode": "200-399",
                    "unhealthyThreshold": 2,
                    "useHostFromRule": "no"
                },
                "index": 1,
                "name": "rule1",
                "port": 80,
                "protocol": "tcp",
                "redirectCode": "permMoved",
                "redirectProtocol": "inherit",
                "targetIpType": "unspecified",
                "urlType": "original"
            }
        ],
        "secPolicy": "default"
    },
    "proposed": {
        "certificates": null,
        "name": "nlb_li_tcp",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "tcp",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": null,
                    "interval": 5,
                    "path": null,
                    "port": 80,
                    "protocol": "tcp",
                    "successCode": "200-399",
                    "timeout": null,
                    "unhealthyThreshold": 2,
                    "useHostFromRule": null
                },
                "host": null,
                "index": 1,
                "name": "rule1",
                "path": null,
                "port": 80,
                "protocol": "tcp",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": null,
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "certificates": null,
        "name": "nlb_li_tcp",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "tcp",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": null,
                    "interval": 5,
                    "path": null,
                    "port": 80,
                    "protocol": "tcp",
                    "successCode": "200-399",
                    "timeout": null,
                    "unhealthyThreshold": 2,
                    "useHostFromRule": null
                },
                "host": null,
                "index": 1,
                "name": "rule1",
                "path": null,
                "port": 80,
                "protocol": "tcp",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": null,
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add listener - nlb_li_udp without device when the parent is present] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:477
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084926.663771-9478-116591405792630 `" && echo ansible-tmp-1710084926.663771-9478-116591405792630="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084926.663771-9478-116591405792630 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpjz6vi0er TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084926.663771-9478-116591405792630/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084926.663771-9478-116591405792630/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084926.663771-9478-116591405792630/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084926.663771-9478-116591405792630/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084926.663771-9478-116591405792630/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_udp",
            "listener_port": 80,
            "listener_protocol": "udp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "tcp",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": 2,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule2",
                    "path": null,
                    "port": 80,
                    "priority": 2,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'frontend_ip' is '10.10.10.10', the ['device'] attributes must be set and the object name: nlb_li_udp"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Add listener - ans_li_common - udp] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:506
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084935.138369-9534-70525729046875 `" && echo ansible-tmp-1710084935.138369-9534-70525729046875="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084935.138369-9534-70525729046875 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp2mhwafoo TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084935.138369-9534-70525729046875/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084935.138369-9534-70525729046875/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084935.138369-9534-70525729046875/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084935.138369-9534-70525729046875/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084935.138369-9534-70525729046875/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "name": "ans_li_common",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "udp",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": null,
                    "interval": 5,
                    "path": "health_check_path",
                    "port": 80,
                    "protocol": "http",
                    "successCode": "200-399",
                    "timeout": null,
                    "unhealthyThreshold": 2,
                    "useHostFromRule": null
                },
                "host": null,
                "index": 3,
                "name": "common3",
                "path": null,
                "port": 80,
                "protocol": "tcp",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": null,
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/0/deviceConfiguration/cloudLoadBalancer/listeners/-\", \"value\": {\"name\": \"ans_li_common\", \"protocol\": \"udp\", \"port\": 80, \"secPolicy\": \"default\", \"nlbDevIp\": {\"name\": \"10.10.10.10\", \"dn\": \"uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10\"}, \"rules\": [{\"name\": \"common3\", \"floatingIp\": null, \"index\": 3, \"host\": null, \"path\": null, \"action\": null, \"actionType\": \"forward\", \"contentType\": null, \"port\": 80, \"protocol\": \"tcp\", \"urlType\": null, \"customURL\": null, \"redirectHostName\": null, \"redirectPath\": null, \"redirectQuery\": null, \"responseCode\": null, \"responseBody\": null, \"redirectProtocol\": null, \"redirectPort\": null, \"redirectCode\": null, \"targetIpType\": null, \"healthCheck\": {\"port\": 80, \"protocol\": \"http\", \"path\": \"health_check_path\", \"interval\": 5, \"timeout\": null, \"unhealthyThreshold\": 2, \"successCode\": \"200-399\", \"useHostFromRule\": null, \"host\": null}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": 80,
            "listener_protocol": "udp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": 2,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "common3",
                    "path": null,
                    "port": 80,
                    "priority": 3,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/0/deviceConfiguration/cloudLoadBalancer/listeners/-",
            "value": {
                "name": "ans_li_common",
                "nlbDevIp": {
                    "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                    "name": "10.10.10.10"
                },
                "port": 80,
                "protocol": "udp",
                "rules": [
                    {
                        "action": null,
                        "actionType": "forward",
                        "contentType": null,
                        "customURL": null,
                        "floatingIp": null,
                        "healthCheck": {
                            "host": null,
                            "interval": 5,
                            "path": "health_check_path",
                            "port": 80,
                            "protocol": "http",
                            "successCode": "200-399",
                            "timeout": null,
                            "unhealthyThreshold": 2,
                            "useHostFromRule": null
                        },
                        "host": null,
                        "index": 3,
                        "name": "common3",
                        "path": null,
                        "port": 80,
                        "protocol": "tcp",
                        "redirectCode": null,
                        "redirectHostName": null,
                        "redirectPath": null,
                        "redirectPort": null,
                        "redirectProtocol": null,
                        "redirectQuery": null,
                        "responseBody": null,
                        "responseCode": null,
                        "targetIpType": null,
                        "urlType": null
                    }
                ],
                "secPolicy": "default"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "name": "ans_li_common",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "udp",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": null,
                    "interval": 5,
                    "path": "health_check_path",
                    "port": 80,
                    "protocol": "http",
                    "successCode": "200-399",
                    "timeout": null,
                    "unhealthyThreshold": 2,
                    "useHostFromRule": null
                },
                "host": null,
                "index": 3,
                "name": "common3",
                "path": null,
                "port": 80,
                "protocol": "tcp",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": null,
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "name": "ans_li_common",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "udp",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": null,
                    "interval": 5,
                    "path": "health_check_path",
                    "port": 80,
                    "protocol": "http",
                    "successCode": "200-399",
                    "timeout": null,
                    "unhealthyThreshold": 2,
                    "useHostFromRule": null
                },
                "host": null,
                "index": 3,
                "name": "common3",
                "path": null,
                "port": 80,
                "protocol": "tcp",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": null,
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add listener - aplb_li_https] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:537
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084945.250651-9607-37060280291590 `" && echo ansible-tmp-1710084945.250651-9607-37060280291590="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084945.250651-9607-37060280291590 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpl4cvm4rr TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084945.250651-9607-37060280291590/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084945.250651-9607-37060280291590/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084945.250651-9607-37060280291590/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084945.250651-9607-37060280291590/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084945.250651-9607-37060280291590/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "certificates": [
                            {
                                "default": true,
                                "name": "ans_li_tenant_keyring",
                                "store": "default",
                                "tDn": "uni/tn-ans_li_tenant/certstore"
                            }
                        ],
                        "name": "aplb_li_https",
                        "port": 443,
                        "protocol": "https",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 30,
                                    "path": "health_check_path",
                                    "port": 80,
                                    "protocol": "http",
                                    "successCode": "200",
                                    "timeout": 30,
                                    "unhealthyThreshold": 3,
                                    "useHostFromRule": "yes"
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "http",
                                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": "unspecified",
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"replace\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/1\", \"value\": {\"deviceConfiguration\": {\"cloudLoadBalancer\": {\"listeners\": [{\"name\": \"aplb_li_https\", \"protocol\": \"https\", \"port\": 443, \"secPolicy\": \"default\", \"certificates\": [{\"name\": \"ans_li_tenant_keyring\", \"tDn\": \"uni/tn-ans_li_tenant/certstore\", \"default\": true, \"store\": \"default\"}], \"rules\": [{\"name\": \"rule1\", \"floatingIp\": null, \"index\": 1, \"host\": null, \"path\": null, \"action\": null, \"actionType\": \"forward\", \"contentType\": null, \"port\": 80, \"protocol\": \"http\", \"urlType\": null, \"customURL\": null, \"redirectHostName\": null, \"redirectPath\": null, \"redirectQuery\": null, \"responseCode\": null, \"responseBody\": null, \"redirectProtocol\": null, \"redirectPort\": null, \"redirectCode\": null, \"targetIpType\": \"unspecified\", \"providerEpgRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1\", \"healthCheck\": {\"port\": 80, \"protocol\": \"http\", \"path\": \"health_check_path\", \"interval\": 30, \"timeout\": 30, \"unhealthyThreshold\": 3, \"successCode\": \"200\", \"useHostFromRule\": \"yes\", \"host\": null}}]}]}}, \"serviceNodeRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2\"}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "replace",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/1",
            "value": {
                "deviceConfiguration": {
                    "cloudLoadBalancer": {
                        "listeners": [
                            {
                                "certificates": [
                                    {
                                        "default": true,
                                        "name": "ans_li_tenant_keyring",
                                        "store": "default",
                                        "tDn": "uni/tn-ans_li_tenant/certstore"
                                    }
                                ],
                                "name": "aplb_li_https",
                                "port": 443,
                                "protocol": "https",
                                "rules": [
                                    {
                                        "action": null,
                                        "actionType": "forward",
                                        "contentType": null,
                                        "customURL": null,
                                        "floatingIp": null,
                                        "healthCheck": {
                                            "host": null,
                                            "interval": 30,
                                            "path": "health_check_path",
                                            "port": 80,
                                            "protocol": "http",
                                            "successCode": "200",
                                            "timeout": 30,
                                            "unhealthyThreshold": 3,
                                            "useHostFromRule": "yes"
                                        },
                                        "host": null,
                                        "index": 1,
                                        "name": "rule1",
                                        "path": null,
                                        "port": 80,
                                        "protocol": "http",
                                        "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                        "redirectCode": null,
                                        "redirectHostName": null,
                                        "redirectPath": null,
                                        "redirectPort": null,
                                        "redirectProtocol": null,
                                        "redirectQuery": null,
                                        "responseBody": null,
                                        "responseCode": null,
                                        "targetIpType": "unspecified",
                                        "urlType": null
                                    }
                                ],
                                "secPolicy": "default"
                            }
                        ]
                    }
                },
                "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "certificates": [
                            {
                                "default": true,
                                "name": "ans_li_tenant_keyring",
                                "store": "default",
                                "tDn": "uni/tn-ans_li_tenant/certstore"
                            }
                        ],
                        "name": "aplb_li_https",
                        "port": 443,
                        "protocol": "https",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 30,
                                    "path": "health_check_path",
                                    "port": 80,
                                    "protocol": "http",
                                    "successCode": "200",
                                    "timeout": 30,
                                    "unhealthyThreshold": 3,
                                    "useHostFromRule": "yes"
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "http",
                                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": "unspecified",
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "deviceConfiguration": {
            "cloudLoadBalancer": {
                "listeners": [
                    {
                        "certificates": [
                            {
                                "default": true,
                                "name": "ans_li_tenant_keyring",
                                "store": "default",
                                "tDn": "uni/tn-ans_li_tenant/certstore"
                            }
                        ],
                        "name": "aplb_li_https",
                        "port": 443,
                        "protocol": "https",
                        "rules": [
                            {
                                "action": null,
                                "actionType": "forward",
                                "contentType": null,
                                "customURL": null,
                                "floatingIp": null,
                                "healthCheck": {
                                    "host": null,
                                    "interval": 30,
                                    "path": "health_check_path",
                                    "port": 80,
                                    "protocol": "http",
                                    "successCode": "200",
                                    "timeout": 30,
                                    "unhealthyThreshold": 3,
                                    "useHostFromRule": "yes"
                                },
                                "host": null,
                                "index": 1,
                                "name": "rule1",
                                "path": null,
                                "port": 80,
                                "protocol": "http",
                                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                                "redirectCode": null,
                                "redirectHostName": null,
                                "redirectPath": null,
                                "redirectPort": null,
                                "redirectProtocol": null,
                                "redirectQuery": null,
                                "responseBody": null,
                                "responseCode": null,
                                "targetIpType": "unspecified",
                                "urlType": null
                            }
                        ],
                        "secPolicy": "default"
                    }
                ]
            }
        },
        "serviceNodeRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/serviceGraphs/ansible_service_graph2/serviceNodes/node2"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add listener - aplb_li_http] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:577
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084956.59078-9664-203847697572871 `" && echo ansible-tmp-1710084956.59078-9664-203847697572871="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084956.59078-9664-203847697572871 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpgxfefx3m TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084956.59078-9664-203847697572871/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084956.59078-9664-203847697572871/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084956.59078-9664-203847697572871/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084956.59078-9664-203847697572871/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084956.59078-9664-203847697572871/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "name": "aplb_li_http",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 30,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 2,
                "name": "rule2",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/1/deviceConfiguration/cloudLoadBalancer/listeners/-\", \"value\": {\"name\": \"aplb_li_http\", \"protocol\": \"http\", \"port\": 80, \"secPolicy\": \"default\", \"rules\": [{\"name\": \"rule2\", \"floatingIp\": null, \"index\": 2, \"host\": null, \"path\": null, \"action\": null, \"actionType\": \"forward\", \"contentType\": null, \"port\": 443, \"protocol\": \"https\", \"urlType\": null, \"customURL\": null, \"redirectHostName\": null, \"redirectPath\": null, \"redirectQuery\": null, \"responseCode\": null, \"responseBody\": null, \"redirectProtocol\": null, \"redirectPort\": null, \"redirectCode\": null, \"targetIpType\": \"unspecified\", \"providerEpgRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1\", \"healthCheck\": {\"port\": 443, \"protocol\": \"https\", \"path\": \"/\", \"interval\": 30, \"timeout\": 30, \"unhealthyThreshold\": 3, \"successCode\": \"200\", \"useHostFromRule\": \"no\", \"host\": \"use_host_from_rule\"}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "aplb_li_http",
            "listener_port": 80,
            "listener_protocol": "http",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": "use_host_from_rule",
                        "interval": 30,
                        "path": "/",
                        "port": 443,
                        "protocol": "https",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": false
                    },
                    "host": null,
                    "name": "rule2",
                    "path": null,
                    "port": 443,
                    "priority": 2,
                    "protocol": "https",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/1/deviceConfiguration/cloudLoadBalancer/listeners/-",
            "value": {
                "name": "aplb_li_http",
                "port": 80,
                "protocol": "http",
                "rules": [
                    {
                        "action": null,
                        "actionType": "forward",
                        "contentType": null,
                        "customURL": null,
                        "floatingIp": null,
                        "healthCheck": {
                            "host": "use_host_from_rule",
                            "interval": 30,
                            "path": "/",
                            "port": 443,
                            "protocol": "https",
                            "successCode": "200",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "useHostFromRule": "no"
                        },
                        "host": null,
                        "index": 2,
                        "name": "rule2",
                        "path": null,
                        "port": 443,
                        "protocol": "https",
                        "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                        "redirectCode": null,
                        "redirectHostName": null,
                        "redirectPath": null,
                        "redirectPort": null,
                        "redirectProtocol": null,
                        "redirectQuery": null,
                        "responseBody": null,
                        "responseCode": null,
                        "targetIpType": "unspecified",
                        "urlType": null
                    }
                ],
                "secPolicy": "default"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "name": "aplb_li_http",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 30,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 2,
                "name": "rule2",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "name": "aplb_li_http",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 30,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 2,
                "name": "rule2",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Add listener - ans_li_common - http] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:614
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084966.624202-9757-238168494645736 `" && echo ansible-tmp-1710084966.624202-9757-238168494645736="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084966.624202-9757-238168494645736 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpitxp4o2d TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084966.624202-9757-238168494645736/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084966.624202-9757-238168494645736/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084966.624202-9757-238168494645736/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084966.624202-9757-238168494645736/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084966.624202-9757-238168494645736/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "name": "ans_li_common",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 30,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 3,
                "name": "rule3",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"add\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/1/deviceConfiguration/cloudLoadBalancer/listeners/-\", \"value\": {\"name\": \"ans_li_common\", \"protocol\": \"http\", \"port\": 80, \"secPolicy\": \"default\", \"rules\": [{\"name\": \"rule3\", \"floatingIp\": null, \"index\": 3, \"host\": null, \"path\": null, \"action\": null, \"actionType\": \"forward\", \"contentType\": null, \"port\": 443, \"protocol\": \"https\", \"urlType\": null, \"customURL\": null, \"redirectHostName\": null, \"redirectPath\": null, \"redirectQuery\": null, \"responseCode\": null, \"responseBody\": null, \"redirectProtocol\": null, \"redirectPort\": null, \"redirectCode\": null, \"targetIpType\": \"unspecified\", \"providerEpgRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1\", \"healthCheck\": {\"port\": 443, \"protocol\": \"https\", \"path\": \"/\", \"interval\": 30, \"timeout\": 30, \"unhealthyThreshold\": 3, \"successCode\": \"200\", \"useHostFromRule\": \"no\", \"host\": \"use_host_from_rule\"}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": 80,
            "listener_protocol": "http",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": "use_host_from_rule",
                        "interval": 30,
                        "path": "/",
                        "port": 443,
                        "protocol": "https",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": false
                    },
                    "host": null,
                    "name": "rule3",
                    "path": null,
                    "port": 443,
                    "priority": 3,
                    "protocol": "https",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "add",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/1/deviceConfiguration/cloudLoadBalancer/listeners/-",
            "value": {
                "name": "ans_li_common",
                "port": 80,
                "protocol": "http",
                "rules": [
                    {
                        "action": null,
                        "actionType": "forward",
                        "contentType": null,
                        "customURL": null,
                        "floatingIp": null,
                        "healthCheck": {
                            "host": "use_host_from_rule",
                            "interval": 30,
                            "path": "/",
                            "port": 443,
                            "protocol": "https",
                            "successCode": "200",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "useHostFromRule": "no"
                        },
                        "host": null,
                        "index": 3,
                        "name": "rule3",
                        "path": null,
                        "port": 443,
                        "protocol": "https",
                        "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                        "redirectCode": null,
                        "redirectHostName": null,
                        "redirectPath": null,
                        "redirectPort": null,
                        "redirectProtocol": null,
                        "redirectQuery": null,
                        "responseBody": null,
                        "responseCode": null,
                        "targetIpType": "unspecified",
                        "urlType": null
                    }
                ],
                "secPolicy": "default"
            }
        }
    ],
    "previous": {},
    "proposed": {
        "name": "ans_li_common",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 30,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 3,
                "name": "rule3",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "name": "ans_li_common",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 30,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 3,
                "name": "rule3",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Assertions check for the add listeners test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:653
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: add_nlb_li_tcp_cm.current.deviceConfi
guration.cloudLoadBalancer.listeners.0.nlbDevIp.dn == "uni/tn-{{ mso_tenant |
default("ansible_test") }}/clb-{{ mso_tenant | default("ansible_test")
}}_nlb/vip-10.10.10.10"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: add_nlb_li_tcp_cm.proposed.deviceConf
iguration.cloudLoadBalancer.listeners.0.nlbDevIp.dn == "uni/tn-{{ mso_tenant |
default("ansible_test") }}/clb-{{ mso_tenant | default("ansible_test")
}}_nlb/vip-10.10.10.10"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: add_nlb_li_tcp_nm.current.deviceConfi
guration.cloudLoadBalancer.listeners.0.nlbDevIp.dn == "uni/tn-{{ mso_tenant |
default("ansible_test") }}/clb-{{ mso_tenant | default("ansible_test")
}}_nlb/vip-10.10.10.10"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found:
add_nlb_li_tcp_nm_again.current.nlbDevIp.dn == "uni/tn-{{ mso_tenant |
default("ansible_test") }}/clb-{{ mso_tenant | default("ansible_test")
}}_nlb/vip-10.10.10.10"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: add_nlb_li_udp.msg == "When the
'frontend_ip' is '10.10.10.10', the ['device'] attributes must be set and the
object name{{':'}} nlb_li_udp"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found:
add_ans_li_common_udp.current.nlbDevIp.dn == "uni/tn-{{ mso_tenant |
default("ansible_test") }}/clb-{{ mso_tenant | default("ansible_test")
}}_nlb/vip-10.10.10.10"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: add_aplb_li_https.current.deviceConfi
guration.cloudLoadBalancer.listeners.0.certificates.0.tDn == "uni/tn-{{
mso_tenant | default("ansible_test") }}/certstore"
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [mso_schema_site_contract_service_graph_listener : Update listener - ans_li_common rule health_check property - timeout value 30 to 60] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:746
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084980.148306-9847-29692997226517 `" && echo ansible-tmp-1710084980.148306-9847-29692997226517="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084980.148306-9847-29692997226517 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp6ao5ftml TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084980.148306-9847-29692997226517/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084980.148306-9847-29692997226517/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084980.148306-9847-29692997226517/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084980.148306-9847-29692997226517/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084980.148306-9847-29692997226517/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {
        "certificates": null,
        "name": "ans_li_common",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 60,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 3,
                "name": "rule3",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"replace\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/1/deviceConfiguration/cloudLoadBalancer/listeners/ans_li_common\", \"value\": {\"name\": \"ans_li_common\", \"port\": 80, \"protocol\": \"http\", \"secPolicy\": \"default\", \"certificates\": null, \"rules\": [{\"name\": \"rule3\", \"floatingIp\": null, \"index\": 3, \"host\": null, \"path\": null, \"action\": null, \"actionType\": \"forward\", \"contentType\": null, \"port\": 443, \"protocol\": \"https\", \"urlType\": null, \"customURL\": null, \"redirectHostName\": null, \"redirectPath\": null, \"redirectQuery\": null, \"responseCode\": null, \"responseBody\": null, \"redirectProtocol\": null, \"redirectPort\": null, \"redirectCode\": null, \"targetIpType\": \"unspecified\", \"providerEpgRef\": \"/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1\", \"healthCheck\": {\"port\": 443, \"protocol\": \"https\", \"path\": \"/\", \"interval\": 30, \"timeout\": 60, \"unhealthyThreshold\": 3, \"successCode\": \"200\", \"useHostFromRule\": \"no\", \"host\": \"use_host_from_rule\"}}]}}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": 80,
            "listener_protocol": "http",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": "use_host_from_rule",
                        "interval": 30,
                        "path": "/",
                        "port": 443,
                        "protocol": "https",
                        "success_code": "200",
                        "timeout": 60,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": false
                    },
                    "host": null,
                    "name": "rule3",
                    "path": null,
                    "port": 443,
                    "priority": 3,
                    "protocol": "https",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "replace",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/1/deviceConfiguration/cloudLoadBalancer/listeners/ans_li_common",
            "value": {
                "certificates": null,
                "name": "ans_li_common",
                "port": 80,
                "protocol": "http",
                "rules": [
                    {
                        "action": null,
                        "actionType": "forward",
                        "contentType": null,
                        "customURL": null,
                        "floatingIp": null,
                        "healthCheck": {
                            "host": "use_host_from_rule",
                            "interval": 30,
                            "path": "/",
                            "port": 443,
                            "protocol": "https",
                            "successCode": "200",
                            "timeout": 60,
                            "unhealthyThreshold": 3,
                            "useHostFromRule": "no"
                        },
                        "host": null,
                        "index": 3,
                        "name": "rule3",
                        "path": null,
                        "port": 443,
                        "protocol": "https",
                        "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                        "redirectCode": null,
                        "redirectHostName": null,
                        "redirectPath": null,
                        "redirectPort": null,
                        "redirectProtocol": null,
                        "redirectQuery": null,
                        "responseBody": null,
                        "responseCode": null,
                        "targetIpType": "unspecified",
                        "urlType": null
                    }
                ],
                "secPolicy": "default"
            }
        }
    ],
    "previous": {
        "certificates": null,
        "name": "ans_li_common",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": [
                    "Forward To EPG1"
                ],
                "actionType": "forward",
                "contentType": "textPlain",
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 30,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "index": 3,
                "name": "rule3",
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": "permMoved",
                "redirectProtocol": "inherit",
                "targetIpType": "unspecified",
                "urlType": "original"
            }
        ],
        "secPolicy": "default"
    },
    "proposed": {
        "certificates": null,
        "name": "ans_li_common",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 60,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 3,
                "name": "rule3",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "response": "OK (unknown bytes)",
    "sent": {
        "certificates": null,
        "name": "ans_li_common",
        "port": 80,
        "protocol": "http",
        "rules": [
            {
                "action": null,
                "actionType": "forward",
                "contentType": null,
                "customURL": null,
                "floatingIp": null,
                "healthCheck": {
                    "host": "use_host_from_rule",
                    "interval": 30,
                    "path": "/",
                    "port": 443,
                    "protocol": "https",
                    "successCode": "200",
                    "timeout": 60,
                    "unhealthyThreshold": 3,
                    "useHostFromRule": "no"
                },
                "host": null,
                "index": 3,
                "name": "rule3",
                "path": null,
                "port": 443,
                "protocol": "https",
                "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                "redirectCode": null,
                "redirectHostName": null,
                "redirectPath": null,
                "redirectPort": null,
                "redirectProtocol": null,
                "redirectQuery": null,
                "responseBody": null,
                "responseCode": null,
                "targetIpType": "unspecified",
                "urlType": null
            }
        ],
        "secPolicy": "default"
    },
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Update listener - ans_li_common with invalid service_node_index 5] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:783
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084990.573222-9920-90136680580319 `" && echo ansible-tmp-1710084990.573222-9920-90136680580319="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084990.573222-9920-90136680580319 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp0g0zr33v TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084990.573222-9920-90136680580319/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084990.573222-9920-90136680580319/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084990.573222-9920-90136680580319/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084990.573222-9920-90136680580319/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710084990.573222-9920-90136680580319/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": 80,
            "listener_protocol": "http",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": "use_host_from_rule",
                        "interval": 30,
                        "path": "/",
                        "port": 443,
                        "protocol": "https",
                        "success_code": "200",
                        "timeout": 60,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": false
                    },
                    "host": null,
                    "name": "rule3",
                    "path": null,
                    "port": 443,
                    "priority": 3,
                    "protocol": "https",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 5,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "The service_node_index: 5 is out of range.",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Assertions check for the update listeners test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:822
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_update_ans_li_common.msg == "The
service_node_index{{':'}} 5 is out of range."
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [mso_schema_site_contract_service_graph_listener : Query all listeners] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:840
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085001.852692-9979-163088515032931 `" && echo ansible-tmp-1710085001.852692-9979-163088515032931="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085001.852692-9979-163088515032931 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp7x_j2x7y TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085001.852692-9979-163088515032931/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085001.852692-9979-163088515032931/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085001.852692-9979-163088515032931/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085001.852692-9979-163088515032931/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085001.852692-9979-163088515032931/ > /dev/null 2>&1 && sleep 0'
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "current": [
        {
            "certificates": null,
            "name": "nlb_li_tcp",
            "nlbDevIp": {
                "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                "name": "10.10.10.10"
            },
            "port": 80,
            "protocol": "tcp",
            "rules": [
                {
                    "action": [
                        "Forward To "
                    ],
                    "actionType": "forward",
                    "contentType": "textPlain",
                    "healthCheck": {
                        "interval": 5,
                        "port": 80,
                        "protocol": "tcp",
                        "successCode": "200-399",
                        "unhealthyThreshold": 2,
                        "useHostFromRule": "no"
                    },
                    "index": 1,
                    "name": "rule1",
                    "port": 80,
                    "protocol": "tcp",
                    "redirectCode": "permMoved",
                    "redirectProtocol": "inherit",
                    "targetIpType": "unspecified",
                    "urlType": "original"
                }
            ],
            "secPolicy": "default"
        },
        {
            "certificates": null,
            "name": "ans_li_common",
            "nlbDevIp": {
                "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                "name": "10.10.10.10"
            },
            "port": 80,
            "protocol": "udp",
            "rules": [
                {
                    "action": [
                        "Forward To "
                    ],
                    "actionType": "forward",
                    "contentType": "textPlain",
                    "healthCheck": {
                        "interval": 5,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "successCode": "200-399",
                        "unhealthyThreshold": 2,
                        "useHostFromRule": "no"
                    },
                    "index": 3,
                    "name": "common3",
                    "port": 80,
                    "protocol": "tcp",
                    "redirectCode": "permMoved",
                    "redirectProtocol": "inherit",
                    "targetIpType": "unspecified",
                    "urlType": "original"
                }
            ],
            "secPolicy": "default"
        },
        {
            "certificates": [
                {
                    "default": true,
                    "name": "ans_li_tenant_keyring",
                    "store": "default",
                    "tDn": "uni/tn-ans_li_tenant/certstore"
                }
            ],
            "name": "aplb_li_https",
            "port": 443,
            "protocol": "https",
            "rules": [
                {
                    "action": [
                        "Forward To EPG1"
                    ],
                    "actionType": "forward",
                    "contentType": "textPlain",
                    "healthCheck": {
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "successCode": "200",
                        "timeout": 30,
                        "unhealthyThreshold": 3,
                        "useHostFromRule": "yes"
                    },
                    "index": 1,
                    "name": "rule1",
                    "port": 80,
                    "protocol": "http",
                    "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                    "redirectCode": "permMoved",
                    "redirectProtocol": "inherit",
                    "targetIpType": "unspecified",
                    "urlType": "original"
                }
            ],
            "secPolicy": "default"
        },
        {
            "certificates": null,
            "name": "aplb_li_http",
            "port": 80,
            "protocol": "http",
            "rules": [
                {
                    "action": [
                        "Forward To EPG1"
                    ],
                    "actionType": "forward",
                    "contentType": "textPlain",
                    "healthCheck": {
                        "host": "use_host_from_rule",
                        "interval": 30,
                        "path": "/",
                        "port": 443,
                        "protocol": "https",
                        "successCode": "200",
                        "timeout": 30,
                        "unhealthyThreshold": 3,
                        "useHostFromRule": "no"
                    },
                    "index": 2,
                    "name": "rule2",
                    "port": 443,
                    "protocol": "https",
                    "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                    "redirectCode": "permMoved",
                    "redirectProtocol": "inherit",
                    "targetIpType": "unspecified",
                    "urlType": "original"
                }
            ],
            "secPolicy": "default"
        },
        {
            "certificates": null,
            "name": "ans_li_common",
            "port": 80,
            "protocol": "http",
            "rules": [
                {
                    "action": [
                        "Forward To EPG1"
                    ],
                    "actionType": "forward",
                    "contentType": "textPlain",
                    "healthCheck": {
                        "host": "use_host_from_rule",
                        "interval": 30,
                        "path": "/",
                        "port": 443,
                        "protocol": "https",
                        "successCode": "200",
                        "timeout": 60,
                        "unhealthyThreshold": 3,
                        "useHostFromRule": "no"
                    },
                    "index": 3,
                    "name": "rule3",
                    "port": 443,
                    "protocol": "https",
                    "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                    "redirectCode": "permMoved",
                    "redirectProtocol": "inherit",
                    "targetIpType": "unspecified",
                    "urlType": "original"
                }
            ],
            "secPolicy": "default"
        }
    ],
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": null,
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": null,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "query",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "response": "OK (559 bytes)",
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}

TASK [mso_schema_site_contract_service_graph_listener : Query all listeners with name ans_li_common] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:851
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085010.685979-10036-19165933081125 `" && echo ansible-tmp-1710085010.685979-10036-19165933081125="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085010.685979-10036-19165933081125 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpn91m7kfj TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085010.685979-10036-19165933081125/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085010.685979-10036-19165933081125/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085010.685979-10036-19165933081125/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085010.685979-10036-19165933081125/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085010.685979-10036-19165933081125/ > /dev/null 2>&1 && sleep 0'
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "current": [
        {
            "certificates": null,
            "name": "ans_li_common",
            "nlbDevIp": {
                "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
                "name": "10.10.10.10"
            },
            "port": 80,
            "protocol": "udp",
            "rules": [
                {
                    "action": [
                        "Forward To "
                    ],
                    "actionType": "forward",
                    "contentType": "textPlain",
                    "healthCheck": {
                        "interval": 5,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "successCode": "200-399",
                        "unhealthyThreshold": 2,
                        "useHostFromRule": "no"
                    },
                    "index": 3,
                    "name": "common3",
                    "port": 80,
                    "protocol": "tcp",
                    "redirectCode": "permMoved",
                    "redirectProtocol": "inherit",
                    "targetIpType": "unspecified",
                    "urlType": "original"
                }
            ],
            "secPolicy": "default"
        },
        {
            "certificates": null,
            "name": "ans_li_common",
            "port": 80,
            "protocol": "http",
            "rules": [
                {
                    "action": [
                        "Forward To EPG1"
                    ],
                    "actionType": "forward",
                    "contentType": "textPlain",
                    "healthCheck": {
                        "host": "use_host_from_rule",
                        "interval": 30,
                        "path": "/",
                        "port": 443,
                        "protocol": "https",
                        "successCode": "200",
                        "timeout": 60,
                        "unhealthyThreshold": 3,
                        "useHostFromRule": "no"
                    },
                    "index": 3,
                    "name": "rule3",
                    "port": 443,
                    "protocol": "https",
                    "providerEpgRef": "/schemas/65edd25db4bb6f5a86d3c1a3/templates/ansible_template1/anps/AP1/epgs/EPG1",
                    "redirectCode": "permMoved",
                    "redirectProtocol": "inherit",
                    "targetIpType": "unspecified",
                    "urlType": "original"
                }
            ],
            "secPolicy": "default"
        }
    ],
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": null,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "query",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "response": "OK (559 bytes)",
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}

TASK [mso_schema_site_contract_service_graph_listener : Query an invalid listener with name invalid_ans_li_common - under Contract2] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:863
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085019.405262-10091-234520944101149 `" && echo ansible-tmp-1710085019.405262-10091-234520944101149="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085019.405262-10091-234520944101149 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpdlrm90d_ TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085019.405262-10091-234520944101149/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085019.405262-10091-234520944101149/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085019.405262-10091-234520944101149/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085019.405262-10091-234520944101149/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085019.405262-10091-234520944101149/ > /dev/null 2>&1 && sleep 0'
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "invalid_ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": null,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "query",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "response": "OK (559 bytes)",
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}

TASK [mso_schema_site_contract_service_graph_listener : Query an invalid listener with name invalid_ans_li_common - under Contract2 with service_node_index 1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:875
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085028.13274-10148-200986193906564 `" && echo ansible-tmp-1710085028.13274-10148-200986193906564="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085028.13274-10148-200986193906564 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp5nl38swa TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085028.13274-10148-200986193906564/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085028.13274-10148-200986193906564/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085028.13274-10148-200986193906564/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085028.13274-10148-200986193906564/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085028.13274-10148-200986193906564/ > /dev/null 2>&1 && sleep 0'
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "invalid_ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "query",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "response": "OK (559 bytes)",
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}

TASK [mso_schema_site_contract_service_graph_listener : Assertions check for the query listeners test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:890
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [mso_schema_site_contract_service_graph_listener : Query all listeners under Contract1 - Negative test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:915
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085039.476428-10219-211005254907902 `" && echo ansible-tmp-1710085039.476428-10219-211005254907902="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085039.476428-10219-211005254907902 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp5elesbmn TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085039.476428-10219-211005254907902/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085039.476428-10219-211005254907902/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085039.476428-10219-211005254907902/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085039.476428-10219-211005254907902/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085039.476428-10219-211005254907902/ > /dev/null 2>&1 && sleep 0'
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract1",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "invalid_ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": null,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "query",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "response": "OK (559 bytes)",
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}

TASK [mso_schema_site_contract_service_graph_listener : Query all listeners under Contract1 with service_node_index 1 - Negative test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:927
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085048.253014-10292-249140556736876 `" && echo ansible-tmp-1710085048.253014-10292-249140556736876="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085048.253014-10292-249140556736876 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpnqw8g4jk TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085048.253014-10292-249140556736876/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085048.253014-10292-249140556736876/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085048.253014-10292-249140556736876/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085048.253014-10292-249140556736876/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085048.253014-10292-249140556736876/ > /dev/null 2>&1 && sleep 0'
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract1",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "invalid_ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "query",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "response": "OK (559 bytes)",
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}

TASK [mso_schema_site_contract_service_graph_listener : Assertions check for the query listeners negative test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:942
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [mso_schema_site_contract_service_graph_listener : Negative test - query all listeners with the non-cloud site] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:957
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085059.656045-10360-235160451684018 `" && echo ansible-tmp-1710085059.656045-10360-235160451684018="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085059.656045-10360-235160451684018 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpwycw46nx TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085059.656045-10360-235160451684018/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085059.656045-10360-235160451684018/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085059.656045-10360-235160451684018/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085059.656045-10360-235160451684018/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085059.656045-10360-235160451684018/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract1",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": null,
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": 0,
            "site": "ansible_test",
            "ssl_certificates": null,
            "state": "query",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "The Site Contract Service Graph Listener is not supported for the site: ansible_test.",
    "response": "OK (559 bytes)",
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_aplb_li_https - ssl cert missing] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:969
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085063.906143-10389-17035920293749 `" && echo ansible-tmp-1710085063.906143-10389-17035920293749="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085063.906143-10389-17035920293749 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpsumom4p7 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085063.906143-10389-17035920293749/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085063.906143-10389-17035920293749/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085063.906143-10389-17035920293749/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085063.906143-10389-17035920293749/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085063.906143-10389-17035920293749/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'listener_protocol' is 'https', the ['security_policy', 'ssl_certificates'] attributes must be set and the object name: nt_aplb_li_https"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_aplb_li_https - Contract3 SG Ref missing] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1005
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085069.306467-10443-273234124670551 `" && echo ansible-tmp-1710085069.306467-10443-273234124670551="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085069.306467-10443-273234124670551 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpff5i01g7 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085069.306467-10443-273234124670551/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085069.306467-10443-273234124670551/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085069.306467-10443-273234124670551/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085069.306467-10443-273234124670551/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085069.306467-10443-273234124670551/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract3",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "The site contract: Contract3 is not associated with a service graph.",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_aplb_li_https - with invalid device] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1045
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085078.353055-10500-243736432431219 `" && echo ansible-tmp-1710085078.353055-10500-243736432431219="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085078.353055-10500-243736432431219 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp_80liurf TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085078.353055-10500-243736432431219/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085078.353055-10500-243736432431219/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085078.353055-10500-243736432431219/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085078.353055-10500-243736432431219/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085078.353055-10500-243736432431219/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract3",
            "device": "ans_li_tenant_aplb_invalid",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "The site contract: Contract3 is not associated with a service graph.",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_fw_li_https to the Third-Party Firewall] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1085
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085087.063649-10558-81525880624255 `" && echo ansible-tmp-1710085087.063649-10558-81525880624255="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085087.063649-10558-81525880624255 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpuo75uzhf TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085087.063649-10558-81525880624255/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085087.063649-10558-81525880624255/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085087.063649-10558-81525880624255/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085087.063649-10558-81525880624255/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085087.063649-10558-81525880624255/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract1",
            "device": "ans_li_tenant_firewall1",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_fw_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "Listener is not supported for the 'service_node_index': 0 is associated with the Third-Party Firewall device.",
    "previous": {},
    "proposed": {},
    "response": "OK (1095 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_tplb_li_https to the Third-Party load-balancer] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1125
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085097.322956-10642-89800700048050 `" && echo ansible-tmp-1710085097.322956-10642-89800700048050="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085097.322956-10642-89800700048050 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpivp6oufe TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085097.322956-10642-89800700048050/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085097.322956-10642-89800700048050/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085097.322956-10642-89800700048050/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085097.322956-10642-89800700048050/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085097.322956-10642-89800700048050/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract1",
            "device": "ans_li_tenant_tplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_tplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "Listener is not supported for the 'service_node_index': 1 is associated with the Third-Party Load Balancer device.",
    "previous": {},
    "proposed": {},
    "response": "OK (1095 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites/65deb9cebcb66752c31ba316/aci/tenants/ans_li_tenant/cloud/devices"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_aplb_li_https - with same listener and rule protocol - https] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1165
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085107.232908-10698-241009979343983 `" && echo ansible-tmp-1710085107.232908-10698-241009979343983="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085107.232908-10698-241009979343983 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpnien5ss_ TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085107.232908-10698-241009979343983/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085107.232908-10698-241009979343983/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085107.232908-10698-241009979343983/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085107.232908-10698-241009979343983/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085107.232908-10698-241009979343983/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "https",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "When the 'listener_protocol' is 'https', the rule 'protocol' must be 'https'",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_aplb_li_https - with same listener and rule protocol - http] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1205
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085115.5993128-10754-175058918691113 `" && echo ansible-tmp-1710085115.5993128-10754-175058918691113="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085115.5993128-10754-175058918691113 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpwhs5epc8 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085115.5993128-10754-175058918691113/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085115.5993128-10754-175058918691113/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085115.5993128-10754-175058918691113/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085115.5993128-10754-175058918691113/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085115.5993128-10754-175058918691113/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "http",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "When the 'listener_protocol' is 'http', the rule 'protocol' must be 'http'",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_aplb_li_https - rule action_type is redirect] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1241
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085123.890362-10808-247347291812494 `" && echo ansible-tmp-1710085123.890362-10808-247347291812494="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085123.890362-10808-247347291812494 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp2zk4kd79 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085123.890362-10808-247347291812494/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085123.890362-10808-247347291812494/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085123.890362-10808-247347291812494/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085123.890362-10808-247347291812494/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085123.890362-10808-247347291812494/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "redirect",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'action_type' is 'redirect', the ['redirect_protocol', 'redirect_port', 'url_type', 'redirect_code'] attributes must be set at the object position: 0 and the object name: rule1"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_aplb_li_https - rule action_type is forward] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1281
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085132.3064861-10862-90854073756824 `" && echo ansible-tmp-1710085132.3064861-10862-90854073756824="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085132.3064861-10862-90854073756824 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpdvzn7l40 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085132.3064861-10862-90854073756824/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085132.3064861-10862-90854073756824/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085132.3064861-10862-90854073756824/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085132.3064861-10862-90854073756824/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085132.3064861-10862-90854073756824/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": null,
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'action_type' is 'forward', the ['health_check'] attributes must be set at the object position: 0 and the object name: rule1"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nt_aplb_li_https - rule url_type is custom] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1312
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085140.536285-10918-135685258344706 `" && echo ansible-tmp-1710085140.536285-10918-135685258344706="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085140.536285-10918-135685258344706 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp_az1i5lg TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085140.536285-10918-135685258344706/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085140.536285-10918-135685258344706/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085140.536285-10918-135685258344706/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085140.536285-10918-135685258344706/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085140.536285-10918-135685258344706/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_aplb",
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "nt_aplb_li_https",
            "listener_port": 443,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 30,
                        "path": "health_check_path",
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200",
                        "timeout": 30,
                        "unhealthy_threshold": 3,
                        "use_host_from_rule": true
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "http",
                    "provider_epg_ref": {
                        "anp_name": "AP1",
                        "epg_name": "EPG1",
                        "schema": null,
                        "template": null
                    },
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": "unspecified",
                    "url_type": "custom"
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'url_type' is 'custom', the ['redirect_host_name', 'redirect_path', 'redirect_query', 'response_code'] attributes must be set at the object position: 0 and the object name: rule1"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nlb_li_tcp - listener protocol is tcp/udp - health_check missing] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1353
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085148.972627-10973-182423305596331 `" && echo ansible-tmp-1710085148.972627-10973-182423305596331="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085148.972627-10973-182423305596331 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmptcakouh4 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085148.972627-10973-182423305596331/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085148.972627-10973-182423305596331/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085148.972627-10973-182423305596331/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085148.972627-10973-182423305596331/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085148.972627-10973-182423305596331/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_tcp",
            "listener_port": 80,
            "listener_protocol": "tcp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": null,
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'action_type' is 'forward', the ['health_check'] attributes must be set at the object position: 0 and the object name: rule1"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nlb_li_tcp - listener protocol is tcp/udp - health_check protocol tcp - unhealthy_threshold missing] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1377
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085157.137391-11030-62129332975281 `" && echo ansible-tmp-1710085157.137391-11030-62129332975281="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085157.137391-11030-62129332975281 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpehtlusxe TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085157.137391-11030-62129332975281/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085157.137391-11030-62129332975281/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085157.137391-11030-62129332975281/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085157.137391-11030-62129332975281/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085157.137391-11030-62129332975281/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_tcp",
            "listener_port": 80,
            "listener_protocol": "tcp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "tcp",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": null,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'health_check - 'protocol'' is 'tcp', the ['unhealthy_threshold'] attributes must be set"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nlb_li_tcp - listener protocol is tcp/udp - health_check protocol http/https - unhealthy_threshold missing] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1406
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085165.820735-11097-227500710520570 `" && echo ansible-tmp-1710085165.820735-11097-227500710520570="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085165.820735-11097-227500710520570 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp6tomyt66 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085165.820735-11097-227500710520570/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085165.820735-11097-227500710520570/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085165.820735-11097-227500710520570/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085165.820735-11097-227500710520570/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085165.820735-11097-227500710520570/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_tcp",
            "listener_port": 80,
            "listener_protocol": "tcp",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": null,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'health_check - 'protocol'' is 'http/https', the ['path', 'unhealthy_threshold'] attributes must be set"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nlb_li_http - listener protocol is http - health_check protocol https - unhealthy_threshold missing] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1435
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085174.6122198-11154-150665940772332 `" && echo ansible-tmp-1710085174.6122198-11154-150665940772332="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085174.6122198-11154-150665940772332 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpbp_vjkjb TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085174.6122198-11154-150665940772332/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085174.6122198-11154-150665940772332/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085174.6122198-11154-150665940772332/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085174.6122198-11154-150665940772332/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085174.6122198-11154-150665940772332/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_http",
            "listener_port": 80,
            "listener_protocol": "http",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "https",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": null,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "msg": "When the 'health_check - 'protocol'' is 'http/https', the ['path', 'unhealthy_threshold', 'timeout'] attributes must be set"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nlb_li_http - listener protocol is http - health_check protocol http] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1464
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085183.068562-11210-148145781432015 `" && echo ansible-tmp-1710085183.068562-11210-148145781432015="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085183.068562-11210-148145781432015 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp24wmoqi6 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085183.068562-11210-148145781432015/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085183.068562-11210-148145781432015/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085183.068562-11210-148145781432015/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085183.068562-11210-148145781432015/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085183.068562-11210-148145781432015/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_http",
            "listener_port": 80,
            "listener_protocol": "http",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "http",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": null,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "The 'listener_protocol': http and the health_check protocol: http is not a valid configuration at the object position: 0 and the object name: rule1",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - add listener - nlb_li_https - listener protocol is https - health_check protocol https] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1494
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085191.84001-11264-186249490855829 `" && echo ansible-tmp-1710085191.84001-11264-186249490855829="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085191.84001-11264-186249490855829 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpj7a82p9v TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085191.84001-11264-186249490855829/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085191.84001-11264-186249490855829/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085191.84001-11264-186249490855829/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085191.84001-11264-186249490855829/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085191.84001-11264-186249490855829/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": "ans_li_tenant_nlb",
            "frontend_ip": "10.10.10.10",
            "host": "173.36.219.30",
            "listener": "nlb_li_https",
            "listener_port": 80,
            "listener_protocol": "https",
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": [
                {
                    "action": null,
                    "action_type": "forward",
                    "content_type": null,
                    "custom_url": null,
                    "floating_ip": null,
                    "health_check": {
                        "host": null,
                        "interval": 5,
                        "path": null,
                        "port": 80,
                        "protocol": "https",
                        "success_code": "200-399",
                        "timeout": null,
                        "unhealthy_threshold": null,
                        "use_host_from_rule": null
                    },
                    "host": null,
                    "name": "rule1",
                    "path": null,
                    "port": 80,
                    "priority": 1,
                    "protocol": "tcp",
                    "provider_epg_ref": null,
                    "redirect_code": null,
                    "redirect_host_name": null,
                    "redirect_path": null,
                    "redirect_port": null,
                    "redirect_protocol": null,
                    "redirect_query": null,
                    "response_body": null,
                    "response_code": null,
                    "target_ip_type": null,
                    "url_type": null
                }
            ],
            "schema": "ans_li_schema",
            "security_policy": "default",
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": [
                {
                    "certificate_store": "default",
                    "name": "ans_li_tenant_keyring"
                }
            ],
            "state": "present",
            "template": "ansible_template1",
            "tenant": "ans_li_tenant",
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "The 'listener_protocol': https and the health_check protocol: https is not a valid configuration at the object position: 0 and the object name: rule1",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Negative test - remove a listener - ans_li_common - with invalid service_node_index is -1] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1526
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085200.409684-11336-58660703877760 `" && echo ansible-tmp-1710085200.409684-11336-58660703877760="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085200.409684-11336-58660703877760 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmp8sgcqz4i TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085200.409684-11336-58660703877760/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085200.409684-11336-58660703877760/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085200.409684-11336-58660703877760/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085200.409684-11336-58660703877760/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085200.409684-11336-58660703877760/ > /dev/null 2>&1 && sleep 0'
fatal: [lh-dmz1-pod1-ndo-v421]: FAILED! => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": -1,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "absent",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "msg": "The service_node_index: -1 is not valid.",
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}
...ignoring

TASK [mso_schema_site_contract_service_graph_listener : Assertions check for the listeners negative test] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1539
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_non_cloud_site.msg == "The Site
Contract Service Graph Listener is not supported for the site{{':'}}
ansible_test."
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_lp_https_ssl_cert_missing.msg ==
"When the 'listener_protocol' is 'https', the ['security_policy',
'ssl_certificates'] attributes must be set and the object name{{':'}}
nt_aplb_li_https"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_invalid_contract3.msg == "The site
contract{{':'}} Contract3 is not associated with a service graph."
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_invalid_device.msg == "The site
contract{{':'}} Contract3 is not associated with a service graph."
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_tp_fw_listener.msg == "Listener is
not supported for the 'service_node_index'{{':'}} 0 is associated with the
Third-Party Firewall device."
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_tp_lb_listener.msg ==  "Listener
is not supported for the 'service_node_index'{{':'}} 1 is associated with the
Third-Party Load Balancer device."
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_action_type_redirect.msg == "When
the 'action_type' is 'redirect', the ['redirect_protocol', 'redirect_port',
'url_type', 'redirect_code'] attributes must be set at the object
position{{':'}} 0 and the object name{{':'}} rule1"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_action_type_forward.msg == "When
the 'action_type' is 'forward', the ['health_check'] attributes must be set at
the object position{{':'}} 0 and the object name{{':'}} rule1"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_url_type_custom.msg == "When the
'url_type' is 'custom', the ['redirect_host_name', 'redirect_path',
'redirect_query', 'response_code'] attributes must be set at the object
position{{':'}} 0 and the object name{{':'}} rule1"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_lp_tcp_udp_hp_missing.msg == "When
the 'action_type' is 'forward', the ['health_check'] attributes must be set at
the object position{{':'}} 0 and the object name{{':'}} rule1"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_lp_http_hp_http.msg == "The
'listener_protocol'{{':'}} http and the health_check protocol{{':'}} http is
not a valid configuration at the object position{{':'}} 0 and the object
name{{':'}} rule1"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: nt_lp_https_hp_https.msg == "The
'listener_protocol'{{':'}} https and the health_check protocol{{':'}} https is
not a valid configuration at the object position{{':'}} 0 and the object
name{{':'}} rule1"
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: rm_ans_li_common_nm_again.msg == "The
service_node_index{{':'}} -1 is not valid."
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [mso_schema_site_contract_service_graph_listener : Remove an existing listener - ans_li_common - check_mode] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1632
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085212.063922-11394-224865954200722 `" && echo ansible-tmp-1710085212.063922-11394-224865954200722="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085212.063922-11394-224865954200722 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmplmd1o9tn TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085212.063922-11394-224865954200722/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085212.063922-11394-224865954200722/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085212.063922-11394-224865954200722/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085212.063922-11394-224865954200722/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085212.063922-11394-224865954200722/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "absent",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "GET",
    "previous": {
        "certificates": null,
        "name": "ans_li_common",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "udp",
        "rules": [
            {
                "action": [
                    "Forward To "
                ],
                "actionType": "forward",
                "contentType": "textPlain",
                "healthCheck": {
                    "interval": 5,
                    "path": "health_check_path",
                    "port": 80,
                    "protocol": "http",
                    "successCode": "200-399",
                    "unhealthyThreshold": 2,
                    "useHostFromRule": "no"
                },
                "index": 3,
                "name": "common3",
                "port": 80,
                "protocol": "tcp",
                "redirectCode": "permMoved",
                "redirectProtocol": "inherit",
                "targetIpType": "unspecified",
                "urlType": "original"
            }
        ],
        "secPolicy": "default"
    },
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}

TASK [mso_schema_site_contract_service_graph_listener : Remove an existing listener - ans_li_common - normal_mode] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1646
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085220.545653-11480-190710605584538 `" && echo ansible-tmp-1710085220.545653-11480-190710605584538="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085220.545653-11480-190710605584538 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpf7o24sk7 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085220.545653-11480-190710605584538/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085220.545653-11480-190710605584538/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085220.545653-11480-190710605584538/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085220.545653-11480-190710605584538/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085220.545653-11480-190710605584538/ > /dev/null 2>&1 && sleep 0'
changed: [lh-dmz1-pod1-ndo-v421] => {
    "changed": true,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false, [{\"op\": \"remove\", \"path\": \"/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/0/deviceConfiguration/cloudLoadBalancer/listeners/ans_li_common\"}], PATCH, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "absent",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": [
        {
            "op": "remove",
            "path": "/sites/65deb9cebcb66752c31ba316-ansible_template1/contracts/Contract2/serviceGraphRelationship/serviceNodesRelationship/0/deviceConfiguration/cloudLoadBalancer/listeners/ans_li_common"
        }
    ],
    "previous": {
        "certificates": null,
        "name": "ans_li_common",
        "nlbDevIp": {
            "dn": "uni/tn-ans_li_tenant/clb-ans_li_tenant_nlb/vip-10.10.10.10",
            "name": "10.10.10.10"
        },
        "port": 80,
        "protocol": "udp",
        "rules": [
            {
                "action": [
                    "Forward To "
                ],
                "actionType": "forward",
                "contentType": "textPlain",
                "healthCheck": {
                    "interval": 5,
                    "path": "health_check_path",
                    "port": 80,
                    "protocol": "http",
                    "successCode": "200-399",
                    "unhealthyThreshold": 2,
                    "useHostFromRule": "no"
                },
                "index": 3,
                "name": "common3",
                "port": 80,
                "protocol": "tcp",
                "redirectCode": "permMoved",
                "redirectProtocol": "inherit",
                "targetIpType": "unspecified",
                "urlType": "original"
            }
        ],
        "secPolicy": "default"
    },
    "proposed": {},
    "response": "OK (unknown bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 204,
    "url": "https://173.36.219.30:443/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3?validate=false"
}

TASK [mso_schema_site_contract_service_graph_listener : Remove an existing listener - ans_li_common - normal_mode again] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1659
<173.36.219.30> ESTABLISH LOCAL CONNECTION FOR USER: sajagana
<173.36.219.30> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c `"&& mkdir "` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085230.752547-11537-100212822976726 `" && echo ansible-tmp-1710085230.752547-11537-100212822976726="` echo /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085230.752547-11537-100212822976726 `" ) && sleep 0'
Using module file /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/plugins/modules/mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> PUT /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/tmpdvzt56q5 TO /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085230.752547-11537-100212822976726/AnsiballZ_mso_schema_site_contract_service_graph_listener.py
<173.36.219.30> EXEC /bin/sh -c 'chmod u+x /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085230.752547-11537-100212822976726/ /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085230.752547-11537-100212822976726/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c '/Users/sajagana/envs/python3.9/bin/python3 /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085230.752547-11537-100212822976726/AnsiballZ_mso_schema_site_contract_service_graph_listener.py && sleep 0'
<173.36.219.30> EXEC /bin/sh -c 'rm -f -r /Users/sajagana/.ansible/tmp/ansible-local-7556cr1wtd7c/ansible-tmp-1710085230.752547-11537-100212822976726/ > /dev/null 2>&1 && sleep 0'
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "current": {},
    "httpapi_logs": [
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/65edd25db4bb6f5a86d3c1a3, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/schemas/list-identity, null, GET, {'Content-Type': 'application/json'})"
        ],
        [
            "info",
            "send_request() - send_request method called"
        ],
        [
            "info",
            "send_request() - connection.send(/mso/api/v1/sites, null, GET, {'Content-Type': 'application/json'})"
        ]
    ],
    "invocation": {
        "module_args": {
            "contract": "Contract2",
            "device": null,
            "frontend_ip": null,
            "host": "173.36.219.30",
            "listener": "ans_li_common",
            "listener_port": null,
            "listener_protocol": null,
            "login_domain": null,
            "output_level": "debug",
            "password": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
            "port": null,
            "rules": null,
            "schema": "ans_li_schema",
            "security_policy": null,
            "service_node_index": 0,
            "site": "azure_ansible_test_2",
            "ssl_certificates": null,
            "state": "absent",
            "template": "ansible_template1",
            "tenant": null,
            "timeout": null,
            "use_proxy": false,
            "use_ssl": true,
            "username": "ansible_github_ci",
            "validate_certs": false
        }
    },
    "method": "PATCH",
    "patch_operation": null,
    "previous": {},
    "proposed": {},
    "response": "OK (559 bytes)",
    "sent": {},
    "socket": "/Users/sajagana/.ansible/pc/6040c8a44b",
    "status": 200,
    "url": "https://173.36.219.30:443/mso/api/v1/sites"
}

TASK [mso_schema_site_contract_service_graph_listener : Assertions check for remove listeners] ***
task path: /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/.tmp/integration/mso_schema_site_contract_service_graph_listener-x1ra98cm-ÅÑŚÌβŁÈ/tests/integration/targets/mso_schema_site_contract_service_graph_listener/tasks/main.yml:1672
ok: [lh-dmz1-pod1-ndo-v421] => {
    "changed": false,
    "msg": "All assertions passed"
}

PLAY RECAP *********************************************************************
lh-dmz1-pod1-ndo-v421      : ok=68   changed=32   unreachable=0    failed=0    skipped=1    rescued=0    ignored=21  

Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9350.869757 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9350.869757
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9621.955786 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9621.955786
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9435.066693 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9435.066693
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8350.696957 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8350.696957
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10123.563522 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10123.563522
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11242.228150 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11242.228150
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8754.081598 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8754.081598
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.7814.735823 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.7814.735823
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11551.007408 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11551.007408
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8868.461977 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8868.461977
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9236.478650 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9236.478650
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8811.436494 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8811.436494
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10475.613923 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10475.613923
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.7633.430618 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.7633.430618
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.7986.528897 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.7986.528897
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10572.873453 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10572.873453
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10840.498836 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10840.498836
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8606.241256 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8606.241256
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.7742.640838 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.7742.640838
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8041.922368 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8041.922368
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10949.330752 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10949.330752
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10878.107980 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10878.107980
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10712.352300 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10712.352300
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8240.685979 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8240.685979
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9123.697819 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9123.697819
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9995.999990 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9995.999990
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9678.256274 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9678.256274
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9492.489162 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9492.489162
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9048.179486 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9048.179486
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9162.656705 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9162.656705
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8149.569571 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8149.569571
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10656.415858 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10656.415858
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9861.147209 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9861.147209
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8990.984085 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8990.984085
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11494.661101 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11494.661101
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.7703.278618 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.7703.278618
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10533.611903 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10533.611903
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11186.065344 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11186.065344
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10784.707520 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10784.707520
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8406.874280 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8406.874280
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8445.115989 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8445.115989
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11130.533530 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11130.533530
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8700.171463 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8700.171463
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.7853.514170 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.7853.514170
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8566.066986 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8566.066986
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9548.842521 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9548.842521
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8296.058347 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8296.058347
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10050.162066 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10050.162066
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10324.382016 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10324.382016
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8203.260230 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8203.260230
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11055.893791 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11055.893791
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8091.051224 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8091.051224
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11296.722351 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11296.722351
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10267.857731 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10267.857731
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11411.977653 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11411.977653
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8663.287469 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8663.287469
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8484.894956 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8484.894956
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11350.692898 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11350.692898
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10383.722166 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10383.722166
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9934.204408 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9934.204408
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9292.385552 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9292.385552
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.8924.189196 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.8924.189196
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.11005.442984 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.11005.442984
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.9771.327869 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.9771.327869
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10433.139990 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10433.139990
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.10180.793404 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.10180.793404
Coverage file for platform "origin": network-integration=mso_schema_site_contract_service_graph_listener=platform=python-3.9=coverage.SAJAGANA-M-C63C.7930.339452 -> network-integration=mso_schema_site_contract_service_graph_listener=origin=python-3.9=coverage.SAJAGANA-M-C63C.7930.339452
Cleaning up temporary python directory: /tmp/python-x687ihza-ansible
(python3.9) [sajagana@SAJAGANA-M-C63C cisco/mso]$ anshrep
Wrote HTML report to /Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/reports/coverage/index.html
HTML report generated: file:////Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/reports/coverage/index.html
(python3.9) [sajagana@SAJAGANA-M-C63C cisco/mso]$ open file:////Users/sajagana/.ansible/collections/ansible_collections/cisco/mso/tests/output/reports/coverage/index.html