# Test code for the MSO modules
# Copyright: (c) 2020, Shreyas Srish (@shrsr) <ssrish@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: "Please define the following variables: mso_hostname, mso_username and mso_password."
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: "{{ mso_hostname }}"
      username: "{{ mso_username }}"
      password: "{{ mso_password }}"
      validate_certs: "{{ mso_validate_certs | default(false) }}"
      use_ssl: "{{ mso_use_ssl | default(true) }}"
      use_proxy: "{{ mso_use_proxy | default(false) }}"
      output_level: '{{ mso_output_level | default("info") }}'
    aci_info: &aci_info
      host: "{{ apic_hostname }}"
      username: "{{ apic_username }}"
      password: "{{ apic_password }}"
      validate_certs: "{{ apic_validate_certs | default(false) }}"
      use_ssl: "{{ apic_use_ssl | default(true) }}"
      use_proxy: "{{ apic_use_proxy | default(true) }}"
      output_level: '{{ mso_output_level | default("debug") }}'
# # Working code for the query objects begins

# - name: Query all listener under a contract - 4
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: Template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     state: query

# - name: Query all listener under a contract service node - 1
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: Template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     state: query

# - name: Query a listener under a contract service node - 1
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: Template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 1
#     listener: ans_li_c1
#     state: query

# - name: Query all listener - nlb_li_tcp under a contract - 2
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: Template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     listener: nlb_li_tcp
#     state: query

# - name: Query a listener invalid_ans_li_c1 - under a contract service node - 0
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: Template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 1
#     listener: invalid_ans_li_c1
#     state: query
# # Working code for the query objects ends

# - name: Add listener - aplb_li_ans_http
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: Template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     listener: nlb_li_tcp
#     state: query
#     device: ansible_tenant_xyz_other
#     tenant: ansible_tenant_xyz
#     # listener_port: 80
#     # listener_protocol: http
#     # security_policy: default
#     # rules:
#     #   - name: default
#     #     priority: 1
#     #     # action:
#     #     #   - Redirect To Original
#     #     action_type: redirect
#     #     content_type: text_plain
#     #     port: 80
#     #     protocol: https
#     #     url_type: original
#     #     response_code: "200"
#     #     redirect_protocol: inherit
#     #     redirect_port: 443
#     #     redirect_code: permanently_moved
#     #     target_ip_type: unspecified
#   ignore_errors: true
# # # ADD schema
# # - name: Update site contract service graph object
# #   cisco.mso.mso_rest:
# #     <<: *mso_info
# #     path: /mso/api/v1/schemas/65debd04b4bb6f5a86ce0283?validate=false
# #     method: patch
# #     content: |
# #       [
# #         {
# #             "op":"add",
# #             "path":"/sites/65deb9cebcb66752c31ba316-Template1/contracts/Contract1/serviceGraphRelationship",
# #             "value":{
# #               "serviceNodesRelationship":[
# #                   {
# #                     "serviceNodeRef":"/schemas/65debd04b4bb6f5a86ce0283/templates/Template1/serviceGraphs/SG1/serviceNodes/node1",
# #                     "deviceConfiguration":{
# #                         "cloudLoadBalancer":{
# #                           "listeners":[
# #                               {
# #                                 "name":"UI_li",
# #                                 "port":80,
# #                                 "protocol":"http",
# #                                 "secPolicy":"default",
# #                                 "certificates":[

# #                                 ],
# #                                 "rules":[
# #                                     {
# #                                       "name":"default",
# #                                       "index":1,
# #                                       "action":[
# #                                           "Redirect To Original"
# #                                       ],
# #                                       "actionType":"redirect",
# #                                       "contentType":"textPlain",
# #                                       "port":80,
# #                                       "protocol":"http",
# #                                       "urlType":"original",
# #                                       "responseCode":"200",
# #                                       "redirectProtocol":"https",
# #                                       "redirectPort":443,
# #                                       "redirectCode":"permMoved",
# #                                       "targetIpType":"unspecified"
# #                                     }
# #                                 ]
# #                               }
# #                           ]
# #                         }
# #                     }
# #                   }
# #               ]
# #             }
# #         }
# #       ]

# #   register: add_schema

# # - name: Associate Azure site to a schema Template2 for the Azure site service graph test # Azure Task
# #   cisco.mso.mso_schema_site:
# #     <<: *mso_info
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     template: Template2
# #     state: present

# # - name: Add site SG1 device details for the application load-balancer
# #   cisco.mso.mso_schema_site_service_graph:
# #     <<: *mso_info
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template2
# #     service_graph: SG1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     tenant: ansible_tenant_xyz
# #     devices:
# #       - name: ansible_tenant_xyz_app_lb
# #     state: present
# #     output_level: debug
# #   register: az_sg1_cm_present

# # - name: Bind the site contract with site service graphs
# #   cisco.mso.mso_schema_site_contract_service_graph:
# #     <<: *mso_info
# #     tenant: ansible_tenant_xyz
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template2
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     contract: "{{ item.contract }}"
# #     service_graph_schema: '{{ mso_schema | default("ansible_test") }}'
# #     service_graph_template: Template2
# #     service_graph: "{{ item.service_graph }}"
# #     state: present
# #     output_level: debug
# #   register: add_sg_cm
# #   loop:
# #     - contract: Contract1
# #       service_graph: SG1

# # - name: Add listener - aplb_li_ans_http
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template2
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0
# #     listener: aplb_li_ans_http
# #     listener_port: 80
# #     listener_protocol: http
# #     security_policy: default
# #     rules:
# #       - name: default
# #         priority: 1
# #         # action:
# #         #   - Redirect To Original
# #         action_type: redirect
# #         content_type: text_plain
# #         port: 80
# #         protocol: https
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: inherit
# #         redirect_port: 443
# #         redirect_code: permanently_moved
# #         target_ip_type: unspecified
# #   ignore_errors: true
# # # - name: Query MSO version
# # #   cisco.mso.mso_version:
# # #     <<: *mso_info
# # #     state: query
# # #   register: version
# # - name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
# #   ansible.builtin.set_fact:
# #     ansible_connection: local
# #     ansible_network_os: cisco.aci.aci
# # - name: Reset the ansible_connection to access the APIC
# #   ansible.builtin.meta: reset_connection
# # - name: Include tasks for L4-L7 devices
# #   ansible.builtin.include_tasks: l4_l7_devices.yml
# # - name: Set ansible_network_os to cisco.nd.nd and ansible_connection to ansible.netcommon.httpapi
# #   ansible.builtin.set_fact:
# #     ansible_connection: ansible.netcommon.httpapi
# #     ansible_network_os: cisco.nd.nd
# # - name: Reset the ansible_connection to access the MSO/NDO
# #   ansible.builtin.meta: reset_connection
# # # ----------------- site contract service graph code begins -----------------
# - name: Remove ansible_schema_xyz to start the test - setup part
#   cisco.mso.mso_schema:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     state: absent
#   ignore_errors: true
# # - name: Remove ansible_tenant_xyz tenant to start the test - setup part
# #   cisco.mso.mso_tenant:
# #     <<: *mso_info
# #     tenant: ansible_tenant_xyz
# #     state: absent
# #   ignore_errors: true
# # - name: Add ansible_tenant_xyz tenant
# #   cisco.mso.mso_tenant:
# #     <<: *mso_info
# #     tenant: ansible_tenant_xyz
# #     users: ["{{ mso_username }}"]
# #     # sites: ["azure_ansible_test_2"]
# #     state: present
# #   ignore_errors: true
# # - name: Associate Azure site with ansible_tenant_xyz # Azure Task
# #   cisco.mso.mso_tenant_site:
# #     <<: *mso_info
# #     tenant: ansible_tenant_xyz
# #     site: azure_ansible_test_2
# #     cloud_account: "{{ azure_cloud_account | default('uni/tn-ansible_tenant_xyz/act-[0]-vendor-azure') }}"
# #     state: present
# # when:
# #   - query_cloud.current | length > 0
# #   - query_cloud.current.0.cloudProvP.attributes.vendor == "azure"
# - name: Ensure ansible_schema_xyz with Template1 and Template2 exist
#   cisco.mso.mso_schema_template:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     tenant: "ansible_tenant_xyz"
#     template: "{{ item }}"
#     state: present
#   loop:
#     - "Template1"
#     # - "Template2"

# - name: Create SG1 schema template service graph - for the application load-balancer
#   cisco.mso.mso_schema_template_service_graph:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     service_graph: "SG1"
#     display_name: "SG1"
#     service_nodes:
#       - type: load-balancer
#     filter_after_first_node: allow_all
#     state: present

# # - name: Create SG2 schema template service graph - for the network load-balancer
# #   cisco.mso.mso_schema_template_service_graph:
# #     <<: *mso_info
# #     schema: "ansible_schema_xyz"
# #     template: "Template1"
# #     service_graph: "SG2"
# #     display_name: "SG2"
# #     service_nodes:
# #       - type: load-balancer
# #     filter_after_first_node: allow_all
# #     state: present

# # - name: Create SG3 schema template service graph - for the firewall
# #   cisco.mso.mso_schema_template_service_graph:
# #     <<: *mso_info
# #     schema: "ansible_schema_xyz"
# #     template: "Template1"
# #     service_graph: "SG3"
# #     display_name: "SG3"
# #     service_nodes:
# #       - type: firewall
# #     filter_after_first_node: allow_all
# #     state: present

# # - name: Create SG4 schema template service graph - for the third party load-balancer
# #   cisco.mso.mso_schema_template_service_graph:
# #     <<: *mso_info
# #     schema: "ansible_schema_xyz"
# #     template: "Template1"
# #     service_graph: "SG4"
# #     display_name: "SG4"
# #     service_nodes:
# #       - type: other
# #     filter_after_first_node: allow_all
# #     state: present

# - name: Add Filter1 to Template1
#   cisco.mso.mso_schema_template_filter_entry: &filter_present
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     filter: Filter1
#     entry: Filter1Entry
#     state: present
# - name: Add Contracts to the Template1
#   cisco.mso.mso_schema_template_contract_filter:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     contract: "{{ item }}"
#     filter: Filter1
#     state: present
#   loop:
#     - Contract1
#     # - Contract2
#     # - Contract3
#     # - Contract4
# - name: Add a VRF1 to Template1
#   cisco.mso.mso_schema_template_vrf:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     vrf: VRF1
#     state: present
# - name: Add BD1 to Template1
#   cisco.mso.mso_schema_template_bd:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     bd: BD1
#     vrf:
#       name: VRF1
#     state: present
# - name: Add BD2 to Template1
#   cisco.mso.mso_schema_template_bd:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     bd: BD2
#     vrf:
#       name: VRF1
#     state: present
# - name: Add AP1 to Template1
#   cisco.mso.mso_schema_template_anp:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     anp: AP1
#     state: present
# - name: Add EPG1 to AP1 in Template1
#   cisco.mso.mso_schema_template_anp_epg:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     anp: AP1
#     epg: EPG1
#     bd:
#       name: BD1
#     vrf:
#       name: VRF1
#     state: present
# - name: Bind Contract1, 2, 3 and 4 with EPG1 provider
#   cisco.mso.mso_schema_template_anp_epg_contract:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     anp: AP1
#     epg: EPG1
#     contract:
#       name: "{{ item }}"
#       type: provider
#     state: present
#   loop:
#     - Contract1
#     # - Contract2
#     # - Contract3
#     # - Contract4
# - name: Bind Contract1, 2, 3 and 4 with EPG1 consumer
#   cisco.mso.mso_schema_template_anp_epg_contract:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     anp: AP1
#     epg: EPG1
#     contract:
#       name: "{{  item }}"
#       type: consumer
#     state: present
#   loop:
#     - Contract1
#     # - Contract2
#     # - Contract3
#     # - Contract4
# - name: Bind Contract1, 2, 3 and 4 with template service graph
#   cisco.mso.mso_schema_template_contract_service_graph:
#     <<: *mso_info
#     schema: "ansible_schema_xyz"
#     template: "Template1"
#     contract: "{{ item.contract }}"
#     service_graph: "{{ item.service_graph }}"
#     service_nodes:
#       - provider: BD1
#         consumer: BD2
#     state: present
#   loop:
#     - contract: Contract1
#       service_graph: SG1
#     # - contract: Contract2
#     #   service_graph: SG2
#     # - contract: Contract3
#     #   service_graph: SG3
#     # - contract: Contract4
#     #   service_graph: SG4
# # # --------

# - name: Associate Azure site to a schema Template1 for the Azure site service graph test # Azure Task
#   cisco.mso.mso_schema_site:
#     <<: *mso_info
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     site: '{{ mso_site | default("ansible_test") }}'
#     template: Template1
#     state: present

# - name: Add Cloud Context Profile (CIDR) to Region for the VRF1
#   cisco.mso.mso_schema_site_vrf_region_cidr:
#     <<: *mso_info
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     site: '{{ mso_site | default("ansible_test") }}'
#     template: Template1
#     vrf: VRF1
#     region: westus2
#     cidr: 14.14.14.1/24
#     state: present

# - name: Add site SG1 device details for the application load-balancer
#   cisco.mso.mso_schema_site_service_graph:
#     <<: *mso_info
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: Template1
#     service_graph: SG1
#     site: '{{ mso_site | default("ansible_test") }}'
#     tenant: ansible_tenant_xyz
#     devices:
#       - name: ansible_tenant_xyz_app_lb
#     state: present
#     output_level: debug
#   register: az_sg1_cm_present

# # - name: Add site SG2 device details for the network load-balancer
# #   cisco.mso.mso_schema_site_service_graph:
# #     <<: *mso_info
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     service_graph: SG2
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     tenant: ansible_tenant_xyz
# #     devices:
# #       - name: ansible_tenant_xyz_other
# #     state: present
# #     output_level: debug
# #   register: az_sg1_cm_present

# # - name: Add site SG3 device details for the third party firewall
# #   cisco.mso.mso_schema_site_service_graph:
# #     <<: *mso_info
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     service_graph: SG3
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     tenant: ansible_tenant_xyz
# #     devices:
# #       - name: ansible_tenant_xyz_firewall1
# #         provider_connector_type: source_nat
# #         provider_interface: TP_FW_Inf1
# #         consumer_connector_type: redirect
# #         consumer_interface: TP_FW_Inf1

# #     state: present
# #     output_level: debug
# #   register: az_sg1_cm_present

# # - name: Add site SG4 device details for the third party load-balancer
# #   cisco.mso.mso_schema_site_service_graph:
# #     <<: *mso_info
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     service_graph: SG4
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     tenant: ansible_tenant_xyz
# #     devices:
# #       - name: ansible_tenant_xyz_adc
# #         provider_interface: TP_LB_Inf
# #         consumer_interface: TP_LB_Inf

# #     state: present
# #     output_level: debug
# #   register: az_sg1_cm_present
# - name: Bind the site contract with site service graphs
#   cisco.mso.mso_schema_site_contract_service_graph:
#     <<: *mso_info
#     tenant: ansible_tenant_xyz
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: Template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     contract: "{{ item.contract }}"
#     service_graph_schema: '{{ mso_schema | default("ansible_test") }}'
#     service_graph_template: Template1
#     service_graph: "{{ item.service_graph }}"
#     state: present
#     output_level: debug
#   register: add_sg_cm
#   loop:
#     - contract: Contract1
#       service_graph: SG1
#     # - contract: Contract2
#     #   service_graph: SG2
#     # - contract: Contract3
#     #   service_graph: SG3
#     # - contract: Contract4
#     #   service_graph: SG4
# # - name: Remove listener - nlb_li_ans_udp
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0
# #     name: nlb_li_ans_udp
# #     listener_port: 80
# #     listener_protocol: udp
# #     tenant: ansible_tenant_xyz
# #     frontend_ip: "3.3.3.3"
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     state: absent
# #     # ssl_certificates: []
# #     rules:
# #       - name: default
# #         priority: 0
# #         # action:
# #         #   - Forward To EPG1
# #         # condition:
# #         #   - Request otherwise not routed
# #         action_type: forward
# #         content_type: text_plain
# #         port: 80
# #         protocol: udp
# #         provider_epg_ref:
# #           anp_name: AP1
# #           epg_name: EPG1

# #         url_type: original
# #         redirect_protocol: inherit
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 80
# #           protocol: tcp
# #           interval: 5
# #           unhealthy_threshold: 2
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: 200-399
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # - name: Query an non-existing listener - nlb_li_ans_udp
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0
# #     name: nlb_li_ans_udp
# #     listener_port: 80
# #     listener_protocol: udp
# #     tenant: ansible_tenant_xyz
# #     frontend_ip: "3.3.3.3"
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     state: query
# #   ignore_errors: true

# # - name: Add listener - nlb_li_ans_udp
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     name: nlb_li_ans_udp
# #     listener_port: 80
# #     listener_protocol: udp
# #     tenant: ansible_tenant_xyz
# #     frontend_ip: "3.3.3.3"
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     # ssl_certificates: []
# #     rules:
# #       - name: default
# #         priority: 0
# #         # action:
# #         #   - Forward To EPG1
# #         # condition:
# #         #   - Request otherwise not routed
# #         action_type: forward
# #         content_type: text_plain
# #         port: 80
# #         protocol: udp
# #         provider_epg_ref:
# #           anp_name: AP1
# #           epg_name: EPG1

# #         url_type: original
# #         redirect_protocol: inherit
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 80
# #           protocol: tcp
# #           interval: 5
# #           unhealthy_threshold: 2
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: 200-399
# #         target_ip_type: unspecified
# #   ignore_errors: true
# # - name: Add listener - nlb_li_ans_udp - again
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     name: nlb_li_ans_udp
# #     listener_port: 80
# #     listener_protocol: udp
# #     tenant: ansible_tenant_xyz
# #     frontend_ip: "3.3.3.3"
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     # ssl_certificates: []
# #     rules:
# #       - name: default
# #         priority: 0
# #         # action:
# #         #   - Forward To EPG1
# #         # condition:
# #         #   - Request otherwise not routed
# #         action_type: forward
# #         content_type: text_plain
# #         port: 80
# #         protocol: udp
# #         provider_epg_ref:
# #           anp_name: AP1
# #           epg_name: EPG1

# #         url_type: original
# #         redirect_protocol: inherit
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 80
# #           protocol: tcp
# #           interval: 5
# #           unhealthy_threshold: 2
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: 200-399
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # - name: Update listener - nlb_li_ans_udp - health_check properties
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0
# #     name: nlb_li_ans_udp
# #     listener_port: 80
# #     listener_protocol: udp
# #     tenant: ansible_tenant_xyz
# #     frontend_ip: "3.3.3.3"
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     # ssl_certificates: []
# #     rules:
# #       - name: default
# #         priority: 0
# #         # action:
# #         #   - Forward To EPG1
# #         # condition:
# #         #   - Request otherwise not routed
# #         action_type: forward
# #         content_type: text_plain
# #         port: 80
# #         protocol: udp
# #         provider_epg_ref:
# #           anp_name: AP1
# #           epg_name: EPG1

# #         url_type: original
# #         redirect_protocol: inherit
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 80
# #           protocol: tcp
# #           interval: 10
# #           unhealthy_threshold: 4
# #           use_host_from_rule: true # "no"(unchecked) - host should be specified in the rule
# #           host: "1.1.1.1"
# #           success_code: 200-299
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # - name: Query an listener - nlb_li_ans_udp
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0
# #     name: nlb_li_ans_udp
# #     listener_port: 80
# #     listener_protocol: udp
# #     tenant: ansible_tenant_xyz
# #     frontend_ip: "3.3.3.3"
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     state: query

# # - name: Add listener - nlb_li_ans_tcp
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     name: nlb_li_ans_tcp
# #     listener_port: 80
# #     listener_protocol: tcp
# #     frontend_ip: "3.3.3.3"
# #     tenant: ansible_tenant_xyz
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     # ssl_certificates: []
# #     rules:
# #       - name: default
# #         priority: 0
# #         # action:
# #         #   - Forward To EPG1
# #         # condition:
# #         #   - Request otherwise not routed
# #         action_type: forward
# #         content_type: text_plain
# #         port: 80
# #         protocol: tcp
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         redirect_protocol: inherit
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 80
# #           protocol: tcp
# #           interval: 5
# #           unhealthy_threshold: 2
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: 200-399
# #         target_ip_type: unspecified
# #   ignore_errors: true
# # - name: Add listener - aplb_li_ans_https
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     name: aplb_li_ans_https
# #     listener_port: 443
# #     listener_protocol: https
# #     security_policy: default
# #     ssl_certificates:
# #       - name: ansible_tenant_xyz_keyring
# #         certificate_store: default
# #         # tDn: uni/tn-sab_ansible_test_123/certstore
# #         # default: true
# #     rules:
# #       - name: default
# #         priority: 1
# #         # action:
# #         #   - Forward To EPG1
# #         action_type: forward
# #         content_type: text_plain
# #         port: 80
# #         protocol: http
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: inherit
# #         redirect_port: 443
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 80
# #           protocol: http
# #           path: "/"
# #           interval: 30
# #           timeout: 30
# #           unhealthy_threshold: 3
# #           use_host_from_rule: true # "yes" - host should be empty in the rule
# #           success_code: "200"
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # - name: Add listener - aplb_li_ans_http
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     listener: aplb_li_ans_http
# #     listener_port: 80
# #     listener_protocol: http
# #     security_policy: default
# #     rules:
# #       - name: rule_2
# #         priority: 2
# #         host: rule_host
# #         path: rule_path
# #         # action:
# #         #   - Forward To EPG1
# #         # condition:
# #         #   - Host is rule_host
# #         #   - Path is rule_path
# #         action_type: forward
# #         content_type: text_plain
# #         port: 443
# #         protocol: https
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: http
# #         redirect_port: 80
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 443
# #           protocol: https
# #           path: "/"
# #           interval: 30
# #           timeout: 30
# #           unhealthy_threshold: 3
# #           host: use_host_from_rule
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: "200"
# #         target_ip_type: unspecified

# #       - name: default
# #         priority: 1
# #         # action:
# #         #   - Redirect To Original
# #         action_type: redirect
# #         content_type: text_plain
# #         port: 80
# #         protocol: https
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: inherit
# #         redirect_port: 443
# #         redirect_code: permanently_moved
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # - name: Query all listeners under the Contract1 - service_node_index - 0
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0
# #     state: query
# #   ignore_errors: true

# # # # ------------------------------------------------
# # # mso.fail_json(msg="The Site Contract Service Graph Listener is not supported for the on-premise site.")

# # - name: Negative test - add listener - nlb_li_ans_tcp - url_type is custom
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     name: nlb_li_ans_tcp
# #     listener_port: 80
# #     listener_protocol: tcp
# #     frontend_ip: "3.3.3.3"
# #     tenant: ansible_tenant_xyz
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     # ssl_certificates: []
# #     rules:
# #       - name: default
# #         priority: 0
# #         # action:
# #         #   - Forward To EPG1
# #         # condition:
# #         #   - Request otherwise not routed
# #         action_type: forward
# #         content_type: text_plain
# #         port: 80
# #         protocol: tcp
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: custom
# #         redirect_protocol: inherit
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 80
# #           protocol: https
# #           # interval: 5
# #           # unhealthy_threshold: 2
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: 200-399
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # - name: Negative test - add listener - nlb_li_ans_tcp
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     name: nlb_li_ans_tcp
# #     listener_port: 80
# #     listener_protocol: tcp
# #     frontend_ip: "3.3.3.3"
# #     tenant: ansible_tenant_xyz
# #     device: ansible_tenant_xyz_other
# #     security_policy: default
# #     # ssl_certificates: []
# #     rules:
# #       - name: default
# #         priority: 0
# #         # action:
# #         #   - Forward To EPG1
# #         # condition:
# #         #   - Request otherwise not routed
# #         action_type: forward
# #         content_type: text_plain
# #         port: 80
# #         protocol: tcp
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         redirect_protocol: inherit
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 80
# #           protocol: https
# #           # interval: 5
# #           # unhealthy_threshold: 2
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: 200-399
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # # Add listener without rules
# # - name: Negative test - add listener - Contract4 - tlb_li_ans_http
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract4"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0
# #     listener: tlb_li_ans_http
# #     listener_port: 80
# #     listener_protocol: http
# #     security_policy: default
# #   ignore_errors: true

# # # mso.fail_json(msg="The deviceConfiguration object is not configured for the service_node_index: {0}.".format(service_node_index))

# # - name: Negative test - add listener - Contract4 - tlb_li_ans_http
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract4"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     listener: tlb_li_ans_http
# #     listener_port: 80
# #     listener_protocol: http
# #     security_policy: default
# #     rules:
# #       - name: rule_2
# #         priority: 2
# #         host: rule_host
# #         path: rule_path
# #         action_type: forward
# #         content_type: text_plain
# #         port: 443
# #         protocol: http
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: http
# #         redirect_port: 80
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 443
# #           protocol: http
# #           path: "/"
# #           interval: 30
# #           timeout: 30
# #           unhealthy_threshold: 3
# #           host: use_host_from_rule
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: "200"
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # # mso.fail_json(msg="The service_node_index: {0} is out of range.".format(service_node_index))

# # - name: Negative test - add listener - nt_aplb_li_ans_http
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 10

# #     listener: nt_aplb_li_ans_http
# #     listener_port: 80
# #     listener_protocol: http
# #     security_policy: default
# #     rules:
# #       - name: rule_2
# #         priority: 2
# #         host: rule_host
# #         path: rule_path
# #         action_type: forward
# #         content_type: text_plain
# #         port: 443
# #         protocol: http
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: http
# #         redirect_port: 80
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 443
# #           protocol: http
# #           path: "/"
# #           interval: 30
# #           timeout: 30
# #           unhealthy_threshold: 3
# #           host: use_host_from_rule
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: "200"
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # # mso.fail_json(msg="When the 'listener_protocol' is 'http', the rule 'protocol' must be 'https'")

# # - name: Negative test - add listener - nt_aplb_li_ans_http
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     listener: nt_aplb_li_ans_http
# #     listener_port: 80
# #     listener_protocol: http
# #     security_policy: default
# #     rules:
# #       - name: rule_2
# #         priority: 2
# #         host: rule_host
# #         path: rule_path
# #         action_type: forward
# #         content_type: text_plain
# #         port: 443
# #         protocol: http
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: http
# #         redirect_port: 80
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 443
# #           protocol: http
# #           path: "/"
# #           interval: 30
# #           timeout: 30
# #           unhealthy_threshold: 3
# #           host: use_host_from_rule
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: "200"
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # # mso.fail_json(msg="When the 'listener_protocol' is 'https', the rule 'protocol' must be 'http'")

# # - name: Negative test - add listener - nt_aplb_li_ans_https
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0
# #     listener: nt_aplb_li_ans_https
# #     listener_port: 80
# #     listener_protocol: https
# #     security_policy: default
# #     ssl_certificates:
# #       - name: ansible_tenant_xyz_keyring
# #         certificate_store: default
# #         # tDn: uni/tn-sab_ansible_test_123/certstore
# #         # default: true

# #     rules:
# #       - name: rule_2
# #         priority: 2
# #         host: rule_host
# #         path: rule_path
# #         action_type: forward
# #         content_type: text_plain
# #         port: 443
# #         protocol: https
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: http
# #         redirect_port: 80
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 443
# #           protocol: http
# #           path: "/"
# #           interval: 30
# #           timeout: 30
# #           unhealthy_threshold: 3
# #           host: use_host_from_rule
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: "200"
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # # mso.fail_json(
# # #     msg="When the 'listener_protocol' is http, the health_check protocol must be https at the object position: {0} and the object name: {1}".format(
# # #         position, rule.get("name")
# # #     )
# # # )

# # - name: Negative test - add listener - nt_aplb_li_ans_http
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     listener: nt_aplb_li_ans_http
# #     listener_port: 80
# #     listener_protocol: http
# #     security_policy: default
# #     rules:
# #       - name: rule_2
# #         priority: 2
# #         host: rule_host
# #         path: rule_path
# #         action_type: forward
# #         content_type: text_plain
# #         port: 443
# #         protocol: https
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: http
# #         redirect_port: 80
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 443
# #           protocol: http
# #           path: "/"
# #           interval: 30
# #           timeout: 30
# #           unhealthy_threshold: 3
# #           host: use_host_from_rule
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: "200"
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # # mso.fail_json(
# # #     msg="When the 'listener_protocol' is https, the health_check protocol must be http at the object position: {0} and the object name: {1}".format(
# # #         position, rule.get("name")
# # #     )
# # # )

# # - name: Negative test - add listener - nt_aplb_li_ans_https
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract1"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: '{{ mso_site | default("ansible_test") }}'
# #     service_node_index: 0

# #     listener: nt_aplb_li_ans_https
# #     listener_port: 80
# #     listener_protocol: https
# #     security_policy: default
# #     ssl_certificates:
# #       - name: ansible_tenant_xyz_keyring
# #         certificate_store: default
# #         # tDn: uni/tn-sab_ansible_test_123/certstore
# #         # default: true

# #     rules:
# #       - name: rule_2
# #         priority: 2
# #         host: rule_host
# #         path: rule_path
# #         action_type: forward
# #         content_type: text_plain
# #         port: 443
# #         protocol: http
# #         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
# #           anp_name: AP1
# #           epg_name: EPG1
# #         url_type: original
# #         response_code: "200"
# #         redirect_protocol: http
# #         redirect_port: 80
# #         redirect_code: permanently_moved
# #         health_check:
# #           port: 443
# #           protocol: https
# #           path: "/"
# #           interval: 30
# #           timeout: 30
# #           unhealthy_threshold: 3
# #           host: use_host_from_rule
# #           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
# #           success_code: "200"
# #         target_ip_type: unspecified
# #   ignore_errors: true

# # - name: Negative test - query all listeners with the non-cloud site
# #   cisco.mso.mso_schema_site_contract_service_graph_listener:
# #     <<: *mso_info
# #     contract: "Contract2"
# #     schema: '{{ mso_schema | default("ansible_test") }}'
# #     template: Template1
# #     site: "ansible_test"
# #     service_node_index: 0
# #     state: query
# # # # ------ do not delete the above code --------------------------------------

# # # ---
# # # - name: Add Service Graph 1 at site level for the Azure site service graph test - check_mode # Azure Task
# # #   cisco.mso.mso_schema_site_service_graph:
# # #     <<: *mso_info
# # #     schema: '{{ mso_schema | default("ansible_test") }}'
# # #     template: Template1
# # #     service_graph: SG1
# # #     site: '{{ mso_site | default("ansible_test") }}'
# # #     tenant: ansible_tenant_xyz
# # #     devices:
# # #       - name: ansible_tenant_xyz_firewall1
# # #         provider_connector_type: source_nat
# # #         provider_interface: TP_FW_Inf1
# # #         consumer_connector_type: redirect
# # #         consumer_interface: TP_FW_Inf1
# # #       - name: ansible_tenant_xyz_app_lb
# # #       - name: ansible_tenant_xyz_other
# # #         provider_connector_type: destination_nat
# # #         consumer_connector_type: redirect
# # #     state: present
# # #     output_level: debug
# # #   register: az_sg1_cm_present
# # # check_mode: true
# # # # To clear the ACI Config
# # # - name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
# # #   ansible.builtin.set_fact:
# # #     ansible_connection: local
# # #     ansible_network_os: cisco.aci.aci

# # # - name: Reset the ansible_connection to access the APIC
# # #   ansible.builtin.meta: reset_connection
# # # - name: Remove the ansible_test tenant from APIC
# # #   cisco.aci.aci_tenant:
# # #     <<: *aci_info
# # #     name: ansible_test
# # #     state: absent
# # # # --------

# # # - name: Remove the site contract Contract1 - service graph from the Template1 - normal_mode
# # #   cisco.mso.mso_schema_site_contract_service_graph:
# # #     <<: *mso_info
# # #     schema: ansible_schema_xyz
# # #     template: Template1
# # #     site: ansible_test
# # #     contract: Contract1
# # #     state: absent
# # #   register: site_con_sg_absent_nm
# # # ------------------- site contract service graph code ends -------------------
# # # ------------------- site service graph code begins -------------------
# # # Service Graph at Site Level is blocked by validations in MSO/NDO before v3.3.
# # # It is supported after v3.3 by using validate=false.
# # # - name: Execute tasks only for MSO version >= 3.3
# # #   when: version.current.version is version('3.3', '>=')
# # #   block:
# # #     # - name: Ensure schema 1 with Template1, 2 and 3 exist
# # #     #   cisco.mso.mso_schema_template:
# # #     #     <<: *mso_info
# # #     #     schema: '{{ mso_schema | default("ansible_test") }}'
# # #     #     tenant: ansible_tenant_xyz
# # #     #     template: "{{ item }}"
# # #     #     state: present
# # #     #   loop:
# # #     #     - "Template1"
# # #     #     - "Template2"
# # #     #     - "Template3" # Azure Task

# # #     # - name: Ensure schema 2 with Template1 exists
# # #     #   cisco.mso.mso_schema_template:
# # #     #     <<: *mso_info
# # #     #     schema: '{{ mso_schema | default("ansible_test") }}_2'
# # #     #     tenant: ansible_tenant_xyz
# # #     #     template: Template1
# # #     #     state: present

# # #     - name: Create service graph 3 at Template level
# # #       cisco.mso.mso_schema_template_service_graph:
# # #         <<: *mso_info
# # #         schema: '{{ mso_schema | default("ansible_test") }}'
# # #         template: Template1
# # #         service_graph: SG3
# # #         display_name: sg3
# # #         service_nodes:
# # #           - type: firewall
# # #           - type: load-balancer
# # #           - type: other
# # #         filter_after_first_node: allow_all
# # #         state: present
# # #       register: sg1_again

# # #     # Azure tests part
# # #     - name: Execute tasks only for cloud sites
# # #       when:
# # #         - query_cloud.current | length > 0
# # #         - query_cloud.current.0.cloudProvP.attributes.vendor == "azure"
# # #       block:
# # #         - name: Create a service graph 1 at Template3 for the Azure site service graph test # Azure Task
# # #           cisco.mso.mso_schema_template_service_graph:
# # #             <<: *mso_info
# # #             schema: '{{ mso_schema | default("ansible_test") }}'
# # #             template: Template3
# # #             service_graph: SG1
# # #             display_name: sg1
# # #             service_nodes:
# # #               - type: firewall
# # #               - type: load-balancer
# # #               - type: other
# # #             filter_after_first_node: allow_all
# # #             state: present

# # #         - name: Add Azure site to a schema Template3 for the Azure site service graph test # Azure Task
# # #           cisco.mso.mso_schema_site:
# # #             <<: *mso_info
# # #             schema: '{{ mso_schema | default("ansible_test") }}'
# # #             site: '{{ mso_site | default("ansible_test") }}'
# # #             template: Template3
# # #             state: present

# # #         - name: Add Service Graph 1 at site level for the Azure site service graph test - check_mode # Azure Task
# # #           cisco.mso.mso_schema_site_service_graph:
# # #             <<: *mso_info
# # #             schema: '{{ mso_schema | default("ansible_test") }}'
# # #             template: Template3
# # #             service_graph: SG1
# # #             site: '{{ mso_site | default("ansible_test") }}'
# # #             tenant: ansible_tenant_xyz
# # #             devices:
# # #               - name: ansible_test_firewall1
# # #                 provider_connector_type: source_nat
# # #                 provider_interface: TP_FW_Inf1
# # #                 consumer_connector_type: redirect
# # #                 consumer_interface: TP_FW_Inf1
# # #               - name: ansible_test_app_lb
# # #               - name: ansible_test_other
# # #                 provider_connector_type: destination_nat
# # #                 consumer_connector_type: redirect
# # #             state: present
# # #             output_level: debug
# # #           register: az_sg1_cm_present
# # #           # check_mode: true

# # #     # To clear the ACI Config
# # #     - name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
# # #       ansible.builtin.set_fact:
# # #         ansible_connection: local
# # #         ansible_network_os: cisco.aci.aci

# # #     - name: Reset the ansible_connection to access the APIC
# # #       ansible.builtin.meta: reset_connection

# # #     - name: Remove the ansible_test tenant from APIC
# # #       cisco.aci.aci_tenant:
# # #         <<: *aci_info
# # #         name: ansible_test
# # #         state: absent
