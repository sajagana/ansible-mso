# Test code for the MSO modules
# Copyright: (c) 2024, Sabari Jaganathan (@sajagana) <sajagana@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: "Please define the following variables: mso_hostname, mso_username and mso_password."
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: "{{ mso_hostname }}"
      username: "{{ mso_username }}"
      password: "{{ mso_password }}"
      validate_certs: "{{ mso_validate_certs | default(false) }}"
      use_ssl: "{{ mso_use_ssl | default(true) }}"
      use_proxy: "{{ mso_use_proxy | default(false) }}"
      output_level: '{{ mso_output_level | default("info") }}'
    aci_info: &aci_info
      host: "{{ apic_hostname }}"
      username: "{{ apic_username }}"
      password: "{{ apic_password }}"
      validate_certs: "{{ apic_validate_certs | default(false) }}"
      use_ssl: "{{ apic_use_ssl | default(true) }}"
      use_proxy: "{{ apic_use_proxy | default(true) }}"
      output_level: '{{ mso_output_level | default("info") }}'

# # Setup part begins
# - name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
#   ansible.builtin.set_fact:
#     ansible_connection: local
#     ansible_network_os: cisco.aci.aci

# - name: Reset the ansible_connection to access the APIC
#   ansible.builtin.meta: reset_connection

# - name: Include tasks for L4-L7 devices
#   ansible.builtin.include_tasks: l4_l7_devices.yml

# - name: Set ansible_network_os to cisco.nd.nd and ansible_connection to ansible.netcommon.httpapi
#   ansible.builtin.set_fact:
#     ansible_connection: ansible.netcommon.httpapi
#     ansible_network_os: cisco.nd.nd

# - name: Reset the ansible_connection to access the MSO/NDO
#   ansible.builtin.meta: reset_connection

- name: Remove ansible_schema to start the test - setup part
  cisco.mso.mso_schema:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    state: absent

- name: Remove {{ mso_tenant | default("ansible_test") }} tenant to start the test - setup part
  cisco.mso.mso_tenant:
    <<: *mso_info
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    state: absent

- name: Add {{ mso_tenant | default("ansible_test") }} tenant
  cisco.mso.mso_tenant:
    <<: *mso_info
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    users: ["{{ mso_username }}"]
    state: present

- name: Associate Azure site with '{{ mso_tenant | default("ansible_test") }}' # Azure Task
  cisco.mso.mso_tenant_site:
    <<: *mso_info
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    site: azure_ansible_test_2
    cloud_account: "uni/tn-{{ mso_tenant | default('ansible_test') }}/act-[{{ azure_cloud_account | default(123) }}]-vendor-azure"
    state: present
  # when: # Need to enable the comment
  #   - query_cloud.current | length > 0
  #   - query_cloud.current.0.cloudProvP.attributes.vendor == "azure"

- name: Ensure ansible_schema with ansible_template1 and ansible_template2 exist
  cisco.mso.mso_schema_template:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    template: "{{ item }}"
    state: present
  loop:
    - "ansible_template1"
    - "ansible_template2"

- name: Create ansible_service_graph schema template service graph
  cisco.mso.mso_schema_template_service_graph:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    service_graph: "ansible_service_graph"
    display_name: "ansible_service_graph"
    service_nodes:
      - type: firewall
      - type: load-balancer
    filter_after_first_node: allow_all
    state: present

- name: Create ansible_service_graph2 schema template service graph
  cisco.mso.mso_schema_template_service_graph:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    service_graph: "ansible_service_graph2"
    display_name: "ansible_service_graph2"
    service_nodes:
      - type: load-balancer
      - type: load-balancer
    filter_after_first_node: allow_all
    state: present

- name: Bind ansible_test site with ansible_template1 and ansible_template2
  cisco.mso.mso_schema_site:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "{{ item }}"
    site: '{{ mso_site | default("ansible_test") }}'
    state: present
  loop:
    - "ansible_template1"
    # - "ansible_template2"

- name: Add Filter1 to ansible_template1
  cisco.mso.mso_schema_template_filter_entry: &filter_present
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    filter: Filter1
    entry: Filter1Entry
    state: present

# - name: Add Filter2 to ansible_template1
#   cisco.mso.mso_schema_template_filter_entry:
#     <<: *filter_present
#     filter: Filter2
#     entry: Filter2Entry
#     state: present

- name: Add Contracts to the ansible_template1
  cisco.mso.mso_schema_template_contract_filter:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    contract: "{{ item }}"
    filter: Filter1
    state: present
  loop:
    - Contract1
    - Contract2
    - Contract3

- name: Add a VRF1 to ansible_template1
  cisco.mso.mso_schema_template_vrf:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    vrf: VRF1
    state: present

# - name: Add a VRF2 to ansible_template1
#   cisco.mso.mso_schema_template_vrf:
#     <<: *mso_info
#     schema: '{{ mso_schema | default("ansible_schema") }}'
#     template: "ansible_template1"
#     vrf: VRF2
#     state: present

- name: Add BD1 to ansible_template1
  cisco.mso.mso_schema_template_bd:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    bd: BD1
    vrf:
      name: VRF1
    state: present

# - name: Add BD2 to ansible_template1
#   cisco.mso.mso_schema_template_bd:
#     <<: *mso_info
#     schema: '{{ mso_schema | default("ansible_schema") }}'
#     template: "ansible_template1"
#     bd: BD2
#     vrf:
#       name: VRF2
#     state: present

- name: Add AP1 to ansible_template1
  cisco.mso.mso_schema_template_anp:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    anp: AP1
    state: present

- name: Add EPG1 to AP1 in ansible_template1
  cisco.mso.mso_schema_template_anp_epg:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    anp: AP1
    epg: EPG1
    bd:
      name: BD1
    vrf:
      name: VRF1
    state: present

- name: Bind Contract1 and 2 with EPG1 provider
  cisco.mso.mso_schema_template_anp_epg_contract:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    anp: AP1
    epg: EPG1
    contract:
      name: "{{ item }}"
      type: provider
    state: present
  loop:
    - Contract1
    - Contract2

- name: Bind Contract1 with EPG1 consumer
  cisco.mso.mso_schema_template_anp_epg_contract:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    anp: AP1
    epg: EPG1
    contract:
      name: "{{  item }}"
      type: consumer
    state: present
  loop:
    - Contract1
    - Contract2
    - Contract3

- name: Bind Contract1 with template service graph - ansible_service_graph
  cisco.mso.mso_schema_template_contract_service_graph:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    contract: Contract1
    service_graph: ansible_service_graph
    service_nodes:
      - provider: BD1
        consumer: BD1
      - provider: BD1
        consumer: BD1
    state: present

- name: Bind Contract2 with template service graph - ansible_service_graph2
  cisco.mso.mso_schema_template_contract_service_graph:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: "ansible_template1"
    contract: Contract2
    service_graph: ansible_service_graph2
    service_nodes:
      - provider: BD1
        consumer: BD1
      - provider: BD1
        consumer: BD1
    state: present

- name: Add site VRF region CIDR to the VRF1
  cisco.mso.mso_schema_site_vrf_region_cidr:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_schema") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    vrf: VRF1
    region: westus2
    cidr: 14.14.14.1/24
    state: present

- name: Execute tasks only for cloud sites
  when:
    - 1 == 1
    # - query_cloud.current | length > 0
    # - query_cloud.current.0.cloudProvP.attributes.vendor == "azure"
  block:
    - name: Add Service Graph 1 at site level for the Azure site service graph test # Azure Task
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_schema") }}'
        template: ansible_template1
        service_graph: ansible_service_graph
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        devices:
          - name: '{{ mso_tenant | default("ansible_test") }}_firewall1' # Third-Party Firewall - Listener not supported
          - name: '{{ mso_tenant | default("ansible_test") }}_tplb' # Third-Party Load Balancer - Listener not supported
        state: present
        output_level: debug
      register: az_sg1_cm_present

    - name: Add Service Graph 2 at site level for the Azure site service graph test # Azure Task
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_schema") }}'
        template: ansible_template1
        service_graph: ansible_service_graph2
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        devices:
          - name: '{{ mso_tenant | default("ansible_test") }}_nlb' # Network Load Balancer - Listener supported
          - name: '{{ mso_tenant | default("ansible_test") }}_aplb' # Application Load Balancer - Listener supported
        state: present
        output_level: debug
      register: az_sg1_cm_present

    - name: Bind the Contract1 with site service graph - ansible_service_graph # Azure Task
      cisco.mso.mso_schema_site_contract_service_graph:
        <<: *mso_info
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        schema: '{{ mso_schema | default("ansible_schema") }}'
        template: ansible_template1
        site: '{{ mso_site | default("ansible_test") }}'
        contract: Contract1
        service_graph_schema: '{{ mso_schema | default("ansible_schema") }}'
        service_graph_template: ansible_template1
        service_graph: ansible_service_graph
        state: present
        output_level: debug
      register: az_add_site_con_sg_cm

    - name: Bind the Contract2 with site service graph - ansible_service_graph2 # Azure Task
      cisco.mso.mso_schema_site_contract_service_graph:
        <<: *mso_info
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        schema: '{{ mso_schema | default("ansible_schema") }}'
        template: ansible_template1
        site: '{{ mso_site | default("ansible_test") }}'
        contract: Contract2
        service_graph_schema: '{{ mso_schema | default("ansible_schema") }}'
        service_graph_template: ansible_template1
        service_graph: ansible_service_graph2
        state: present
        output_level: debug
      register: az_add_site_con_sg_cm
# Test part
# Azure tests part

# Start with the negative tests

# listener task starts -----------

- name: Negative test - add listener - nlb_li_tcp without device # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_tcp
    listener_port: 80
    listener_protocol: tcp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: tcp
          interval: 5
          unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Add listener - nlb_li_tcp - check_mode # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_tcp
    listener_port: 80
    listener_protocol: tcp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: tcp
          interval: 5
          unhealthy_threshold: 2
          success_code: 200-399
  check_mode: true
  ignore_errors: true

- name: Add listener - nlb_li_tcp - normal_mode # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_tcp
    listener_port: 80
    listener_protocol: tcp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: tcp
          interval: 5
          unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true
- name: Add listener - nlb_li_tcp normal_mode again # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_tcp
    listener_port: 80
    listener_protocol: tcp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: tcp
          interval: 5
          unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Add listener - nlb_li_udp # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_udp
    listener_port: 80
    listener_protocol: udp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule2
        priority: 2
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: tcp
          interval: 5
          unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Add listener - ans_li_common # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: ans_li_common
    listener_port: 80
    listener_protocol: udp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: common3
        priority: 3
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: http
          path: health_check_path
          interval: 5
          unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Add listener - aplb_li_https
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Add listener - aplb_li_http
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'

    service_node_index: 1
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'

    listener: aplb_li_http
    listener_port: 80
    listener_protocol: http
    security_policy: default
    rules:
      - name: rule2
        priority: 2
        # host: rule_host
        # path: rule_path
        # action:
        #   - Forward To EPG1
        # condition:
        #   - Host is rule_host
        #   - Path is rule_path
        action_type: forward
        # content_type: text_plain
        port: 443
        protocol: https
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: http
        # redirect_port: 80
        # redirect_code: permanently_moved
        health_check:
          port: 443
          protocol: https
          path: "/"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          host: use_host_from_rule
          use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
          success_code: "200"
        target_ip_type: unspecified
  ignore_errors: true

- name: Add listener - ans_li_common
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'

    service_node_index: 1
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'

    listener: ans_li_common
    listener_port: 80
    listener_protocol: http
    security_policy: default
    rules:
      - name: rule3
        priority: 3
        # host: rule_host
        # path: rule_path
        # action:
        #   - Forward To EPG1
        # condition:
        #   - Host is rule_host
        #   - Path is rule_path
        action_type: forward
        # content_type: text_plain
        port: 443
        protocol: https
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: http
        # redirect_port: 80
        # redirect_code: permanently_moved
        health_check:
          port: 443
          protocol: https
          path: "/"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          host: use_host_from_rule
          use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
          success_code: "200"
        target_ip_type: unspecified
  ignore_errors: true

- name: Update listener - ans_li_common rule health_check property - timeout value 30 to 60
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'

    service_node_index: 1
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'

    listener: ans_li_common
    listener_port: 80
    listener_protocol: http
    security_policy: default
    rules:
      - name: rule3
        priority: 3
        # host: rule_host
        # path: rule_path
        # action:
        #   - Forward To EPG1
        # condition:
        #   - Host is rule_host
        #   - Path is rule_path
        action_type: forward
        # content_type: text_plain
        port: 443
        protocol: https
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: http
        # redirect_port: 80
        # redirect_code: permanently_moved
        health_check:
          port: 443
          protocol: https
          path: "/"
          interval: 30
          timeout: 60
          unhealthy_threshold: 3
          host: use_host_from_rule
          use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
          success_code: "200"
        target_ip_type: unspecified
  ignore_errors: true

- name: Query all listeners
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    # service_node_index: 1
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    # listener: ans_li_common
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: query
  ignore_errors: true

- name: Query all listeners with name ans_li_common
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    listener: ans_li_common

    # service_node_index: 1
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: query
  ignore_errors: true

- name: Query an invalid listener with name invalid_ans_li_common - under Contract2
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    listener: invalid_ans_li_common

    # service_node_index: 1
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: query
  ignore_errors: true

- name: Query an invalid listener with name invalid_ans_li_common - under Contract2 with service_node_index 1
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    listener: invalid_ans_li_common
    service_node_index: 1
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: query
  ignore_errors: true

- name: Query all listeners under Contract1 - Negative test
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract1"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    listener: invalid_ans_li_common
    # service_node_index: 1
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: query
  ignore_errors: true

- name: Query all listeners under Contract1 with service_node_index 1 - Negative test
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    listener: invalid_ans_li_common
    service_node_index: 1
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: query
  ignore_errors: true

# "msg": "The Site Contract Service Graph Listener is not supported for the site: ansible_test.", - Valid
- name: Negative test - query all listeners with the non-cloud site # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract1"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: "ansible_test"
    service_node_index: 0
    state: query
  ignore_errors: true

- name: Negative test - add listener - nt_aplb_li_https - ssl cert missing
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener_port: 443
    listener_protocol: https
    # security_policy: default
    # ssl_certificates:
    #   - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
    #     certificate_store: default
    #     # tDn: uni/tn-sab_ansible_test_123/certstore
    #     # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_aplb_li_https - Contract3 SG Ref missing
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract3"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_aplb_li_https - with invalid device
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract3"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb_invalid'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_fw_li_https to the Third-Party Firewall
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract1"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nt_fw_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_firewall1'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_tplb_li_https to the Third-Party load-balancer
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract1"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_tplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_tplb'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_aplb_li_https - with same listener and rule protocol - https
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: https
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_aplb_li_https - with same listener and rule protocol - http
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener_port: 443
    listener_protocol: http
    # security_policy: default
    # ssl_certificates:
    #   - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
    #     certificate_store: default
    #     # tDn: uni/tn-sab_ansible_test_123/certstore
    #     # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_aplb_li_https - rule action_type is redirect
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: redirect
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_aplb_li_https - rule action_type is forward
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        # url_type: original
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        # health_check:
        #   port: 80
        #   protocol: http
        #   path: "health_check_path"
        #   interval: 30
        #   timeout: 30
        #   unhealthy_threshold: 3
        #   use_host_from_rule: true # "yes" - host should be empty in the rule
        #   success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nt_aplb_li_https - rule url_type is custom
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 1
    listener: nt_aplb_li_https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener_port: 443
    listener_protocol: https
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true
    rules:
      - name: rule1
        priority: 1
        # action:
        #   - Forward To EPG1
        action_type: forward
        # content_type: text_plain
        port: 80
        protocol: http
        provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
          anp_name: AP1
          epg_name: EPG1
        url_type: custom
        # response_code: "200"
        # redirect_protocol: inherit
        # redirect_port: 443
        # redirect_code: permanently_moved
        health_check:
          port: 80
          protocol: http
          path: "health_check_path"
          interval: 30
          timeout: 30
          unhealthy_threshold: 3
          use_host_from_rule: true # "yes" - host should be empty in the rule
          success_code: "200"
        target_ip_type: unspecified
    output_level: debug
  ignore_errors: true

- name: Negative test - add listener - nlb_li_tcp - listener protocol is tcp/udp - health_check missing # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_tcp
    listener_port: 80
    listener_protocol: tcp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        # health_check:
        #   port: 80
        #   protocol: tcp
        #   interval: 5
        #   unhealthy_threshold: 2
        #   success_code: 200-399
  ignore_errors: true

- name: Negative test - add listener - nlb_li_tcp - listener protocol is tcp/udp - health_check protocol tcp - unhealthy_threshold missing # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_tcp
    listener_port: 80
    listener_protocol: tcp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: tcp
          interval: 5
          # unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Negative test - add listener - nlb_li_tcp - listener protocol is tcp/udp - health_check protocol http/https - unhealthy_threshold missing # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_tcp
    listener_port: 80
    listener_protocol: tcp
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: http
          interval: 5
          # unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Negative test - add listener - nlb_li_http - listener protocol is http - health_check protocol https - unhealthy_threshold missing # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_http
    listener_port: 80
    listener_protocol: http
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: https
          interval: 5
          # unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Negative test - add listener - nlb_li_http - listener protocol is http - health_check protocol http # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_http
    listener_port: 80
    listener_protocol: http
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: http
          interval: 5
          # unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Negative test - add listener - nlb_li_https - listener protocol is https - health_check protocol https # working - required
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    listener: nlb_li_https
    listener_port: 80
    listener_protocol: https
    tenant: '{{ mso_tenant | default("ansible_test") }}'
    frontend_ip: "10.10.10.10"
    device: '{{ mso_tenant | default("ansible_test") }}_nlb'
    security_policy: default
    ssl_certificates:
      - name: '{{ mso_tenant | default("ansible_test") }}_keyring'
        certificate_store: default
        # tDn: uni/tn-sab_ansible_test_123/certstore
        # default: true

    rules:
      - name: rule1
        priority: 1
        action_type: forward
        port: 80
        protocol: tcp
        health_check:
          port: 80
          protocol: https
          interval: 5
          # unhealthy_threshold: 2
          success_code: 200-399
  ignore_errors: true

- name: Remove an existing listener - ans_li_common - check_mode
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener: ans_li_common
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: absent
  check_mode: true
  ignore_errors: true

- name: Remove an existing listener - ans_li_common - normal_mode
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener: ans_li_common
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: absent
  ignore_errors: true

- name: Remove an existing listener - ans_li_common - normal_mode again
  cisco.mso.mso_schema_site_contract_service_graph_listener:
    <<: *mso_info
    contract: "Contract2"
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: ansible_template1
    site: '{{ mso_site | default("ansible_test") }}'
    service_node_index: 0
    # tenant: '{{ mso_tenant | default("ansible_test") }}'
    # device: '{{ mso_tenant | default("ansible_test") }}_aplb'
    listener: ans_li_common
    # listener_port: 80
    # listener_protocol: http
    # security_policy: default
    state: absent
  ignore_errors: true
# --------- working above -------
# - name: Add listener - nlb_li_ans_udp - again
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     name: nlb_li_ans_udp
#     listener_port: 80
#     listener_protocol: udp
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     frontend_ip: "3.3.3.3"
#     device: '{{ mso_tenant | default("ansible_test") }}_other'
#     security_policy: default
#     # ssl_certificates: []
#     rules:
#       - name: default
#         priority: 0
#         # action:
#         #   - Forward To EPG1
#         # condition:
#         #   - Request otherwise not routed
#         action_type: forward
#         content_type: text_plain
#         port: 80
#         protocol: udp
#         provider_epg_ref:
#           anp_name: AP1
#           epg_name: EPG1

#         url_type: original
#         redirect_protocol: inherit
#         redirect_code: permanently_moved
#         health_check:
#           port: 80
#           protocol: tcp
#           interval: 5
#           unhealthy_threshold: 2
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: 200-399
#         target_ip_type: unspecified
#   ignore_errors: true

# - name: Update listener - nlb_li_ans_udp - health_check properties
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     name: nlb_li_ans_udp
#     listener_port: 80
#     listener_protocol: udp
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     frontend_ip: "3.3.3.3"
#     device: '{{ mso_tenant | default("ansible_test") }}_other'
#     security_policy: default
#     # ssl_certificates: []
#     rules:
#       - name: default
#         priority: 0
#         # action:
#         #   - Forward To EPG1
#         # condition:
#         #   - Request otherwise not routed
#         action_type: forward
#         content_type: text_plain
#         port: 80
#         protocol: udp
#         provider_epg_ref:
#           anp_name: AP1
#           epg_name: EPG1

#         url_type: original
#         redirect_protocol: inherit
#         redirect_code: permanently_moved
#         health_check:
#           port: 80
#           protocol: tcp
#           interval: 10
#           unhealthy_threshold: 4
#           use_host_from_rule: true # "no"(unchecked) - host should be specified in the rule
#           host: "1.1.1.1"
#           success_code: 200-299
#         target_ip_type: unspecified
#   ignore_errors: true

# - name: Query an listener - nlb_li_ans_udp
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     name: nlb_li_ans_udp
#     listener_port: 80
#     listener_protocol: udp
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     frontend_ip: "3.3.3.3"
#     device: '{{ mso_tenant | default("ansible_test") }}_other'
#     security_policy: default
#     state: query

# - name: Add listener - nlb_li_ans_tcp
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     name: nlb_li_ans_tcp
#     listener_port: 80
#     listener_protocol: tcp
#     frontend_ip: "3.3.3.3"
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     device: '{{ mso_tenant | default("ansible_test") }}_other'
#     security_policy: default
#     # ssl_certificates: []
#     rules:
#       - name: default
#         priority: 0
#         # action:
#         #   - Forward To EPG1
#         # condition:
#         #   - Request otherwise not routed
#         action_type: forward
#         content_type: text_plain
#         port: 80
#         protocol: tcp
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         redirect_protocol: inherit
#         redirect_code: permanently_moved
#         health_check:
#           port: 80
#           protocol: tcp
#           interval: 5
#           unhealthy_threshold: 2
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: 200-399
#         target_ip_type: unspecified
#   ignore_errors: true

# - name: Add listener - aplb_li_ans_https
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     name: aplb_li_ans_https
#     listener_port: 443
#     listener_protocol: https
#     security_policy: default
#     ssl_certificates:
#       - name: ansible_tenant_xyz_keyring
#         certificate_store: default
#         # tDn: uni/tn-sab_ansible_test_123/certstore
#         # default: true
#     rules:
#       - name: default
#         priority: 1
#         # action:
#         #   - Forward To EPG1
#         action_type: forward
#         content_type: text_plain
#         port: 80
#         protocol: http
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         response_code: "200"
#         redirect_protocol: inherit
#         redirect_port: 443
#         redirect_code: permanently_moved
#         health_check:
#           port: 80
#           protocol: http
#           path: "/"
#           interval: 30
#           timeout: 30
#           unhealthy_threshold: 3
#           use_host_from_rule: true # "yes" - host should be empty in the rule
#           success_code: "200"
#         target_ip_type: unspecified
#   ignore_errors: true

# - name: Add listener - aplb_li_ans_http
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     listener: aplb_li_ans_http
#     listener_port: 80
#     listener_protocol: http
#     security_policy: default
#     rules:
#       - name: rule_2
#         priority: 2
#         host: rule_host
#         path: rule_path
#         # action:
#         #   - Forward To EPG1
#         # condition:
#         #   - Host is rule_host
#         #   - Path is rule_path
#         action_type: forward
#         content_type: text_plain
#         port: 443
#         protocol: https
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         response_code: "200"
#         redirect_protocol: http
#         redirect_port: 80
#         redirect_code: permanently_moved
#         health_check:
#           port: 443
#           protocol: https
#           path: "/"
#           interval: 30
#           timeout: 30
#           unhealthy_threshold: 3
#           host: use_host_from_rule
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: "200"
#         target_ip_type: unspecified

#       - name: default
#         priority: 1
#         # action:
#         #   - Redirect To Original
#         action_type: redirect
#         content_type: text_plain
#         port: 80
#         protocol: https
#         url_type: original
#         response_code: "200"
#         redirect_protocol: inherit
#         redirect_port: 443
#         redirect_code: permanently_moved
#         target_ip_type: unspecified
#   ignore_errors: true

# - name: Query all listeners under the Contract1 - service_node_index - 0
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     state: query
#   ignore_errors: true

# # Need to copy the above copy of listener_tasks
# # # ------------------------------------------------
# # mso.fail_json(msg="The Site Contract Service Graph Listener is not supported for the on-premise site.")

# - name: Negative test - add listener - nlb_li_ans_tcp - url_type is custom
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     name: nlb_li_ans_tcp
#     listener_port: 80
#     listener_protocol: tcp
#     frontend_ip: "3.3.3.3"
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     device: '{{ mso_tenant | default("ansible_test") }}_other'
#     security_policy: default
#     # ssl_certificates: []
#     rules:
#       - name: default
#         priority: 0
#         # action:
#         #   - Forward To EPG1
#         # condition:
#         #   - Request otherwise not routed
#         action_type: forward
#         content_type: text_plain
#         port: 80
#         protocol: tcp
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: custom
#         redirect_protocol: inherit
#         redirect_code: permanently_moved
#         health_check:
#           port: 80
#           protocol: https
#           # interval: 5
#           # unhealthy_threshold: 2
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: 200-399
#         target_ip_type: unspecified
#   ignore_errors: true

# - name: Negative test - add listener - nlb_li_ans_tcp
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     name: nlb_li_ans_tcp
#     listener_port: 80
#     listener_protocol: tcp
#     frontend_ip: "3.3.3.3"
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     device: '{{ mso_tenant | default("ansible_test") }}_other'
#     security_policy: default
#     # ssl_certificates: []
#     rules:
#       - name: default
#         priority: 0
#         # action:
#         #   - Forward To EPG1
#         # condition:
#         #   - Request otherwise not routed
#         action_type: forward
#         content_type: text_plain
#         port: 80
#         protocol: tcp
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         redirect_protocol: inherit
#         redirect_code: permanently_moved
#         health_check:
#           port: 80
#           protocol: https
#           # interval: 5
#           # unhealthy_threshold: 2
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: 200-399
#         target_ip_type: unspecified
#   ignore_errors: true

# # Add listener without rules
# - name: Negative test - add listener - Contract4 - tlb_li_ans_http
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract4"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     listener: tlb_li_ans_http
#     listener_port: 80
#     listener_protocol: http
#     security_policy: default
#   ignore_errors: true

# # mso.fail_json(msg="The deviceConfiguration object is not configured for the service_node_index: {0}.".format(service_node_index))

# - name: Negative test - add listener - Contract4 - tlb_li_ans_http
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract4"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     listener: tlb_li_ans_http
#     listener_port: 80
#     listener_protocol: http
#     security_policy: default
#     rules:
#       - name: rule_2
#         priority: 2
#         host: rule_host
#         path: rule_path
#         action_type: forward
#         content_type: text_plain
#         port: 443
#         protocol: http
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         response_code: "200"
#         redirect_protocol: http
#         redirect_port: 80
#         redirect_code: permanently_moved
#         health_check:
#           port: 443
#           protocol: http
#           path: "/"
#           interval: 30
#           timeout: 30
#           unhealthy_threshold: 3
#           host: use_host_from_rule
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: "200"
#         target_ip_type: unspecified
#   ignore_errors: true

# # mso.fail_json(msg="The service_node_index: {0} is out of range.".format(service_node_index))

# - name: Negative test - add listener - nt_aplb_li_ans_http
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 10

#     listener: nt_aplb_li_ans_http
#     listener_port: 80
#     listener_protocol: http
#     security_policy: default
#     rules:
#       - name: rule_2
#         priority: 2
#         host: rule_host
#         path: rule_path
#         action_type: forward
#         content_type: text_plain
#         port: 443
#         protocol: http
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         response_code: "200"
#         redirect_protocol: http
#         redirect_port: 80
#         redirect_code: permanently_moved
#         health_check:
#           port: 443
#           protocol: http
#           path: "/"
#           interval: 30
#           timeout: 30
#           unhealthy_threshold: 3
#           host: use_host_from_rule
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: "200"
#         target_ip_type: unspecified
#   ignore_errors: true

# # mso.fail_json(msg="When the 'listener_protocol' is 'http', the rule 'protocol' must be 'https'")

# - name: Negative test - add listener - nt_aplb_li_ans_http
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     listener: nt_aplb_li_ans_http
#     listener_port: 80
#     listener_protocol: http
#     security_policy: default
#     rules:
#       - name: rule_2
#         priority: 2
#         host: rule_host
#         path: rule_path
#         action_type: forward
#         content_type: text_plain
#         port: 443
#         protocol: http
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         response_code: "200"
#         redirect_protocol: http
#         redirect_port: 80
#         redirect_code: permanently_moved
#         health_check:
#           port: 443
#           protocol: http
#           path: "/"
#           interval: 30
#           timeout: 30
#           unhealthy_threshold: 3
#           host: use_host_from_rule
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: "200"
#         target_ip_type: unspecified
#   ignore_errors: true

# # mso.fail_json(msg="When the 'listener_protocol' is 'https', the rule 'protocol' must be 'http'")

# - name: Negative test - add listener - nt_aplb_li_ans_https
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     listener: nt_aplb_li_ans_https
#     listener_port: 80
#     listener_protocol: https
#     security_policy: default
#     ssl_certificates:
#       - name: ansible_tenant_xyz_keyring
#         certificate_store: default
#         # tDn: uni/tn-sab_ansible_test_123/certstore
#         # default: true

#     rules:
#       - name: rule_2
#         priority: 2
#         host: rule_host
#         path: rule_path
#         action_type: forward
#         content_type: text_plain
#         port: 443
#         protocol: https
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         response_code: "200"
#         redirect_protocol: http
#         redirect_port: 80
#         redirect_code: permanently_moved
#         health_check:
#           port: 443
#           protocol: http
#           path: "/"
#           interval: 30
#           timeout: 30
#           unhealthy_threshold: 3
#           host: use_host_from_rule
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: "200"
#         target_ip_type: unspecified
#   ignore_errors: true

# # mso.fail_json(
# #     msg="When the 'listener_protocol' is http, the health_check protocol must be https at the object position: {0} and the object name: {1}".format(
# #         position, rule.get("name")
# #     )
# # )

# - name: Negative test - add listener - nt_aplb_li_ans_http
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     listener: nt_aplb_li_ans_http
#     listener_port: 80
#     listener_protocol: http
#     security_policy: default
#     rules:
#       - name: rule_2
#         priority: 2
#         host: rule_host
#         path: rule_path
#         action_type: forward
#         content_type: text_plain
#         port: 443
#         protocol: https
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         response_code: "200"
#         redirect_protocol: http
#         redirect_port: 80
#         redirect_code: permanently_moved
#         health_check:
#           port: 443
#           protocol: http
#           path: "/"
#           interval: 30
#           timeout: 30
#           unhealthy_threshold: 3
#           host: use_host_from_rule
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: "200"
#         target_ip_type: unspecified
#   ignore_errors: true

# # mso.fail_json(
# #     msg="When the 'listener_protocol' is https, the health_check protocol must be http at the object position: {0} and the object name: {1}".format(
# #         position, rule.get("name")
# #     )
# # )

# - name: Negative test - add listener - nt_aplb_li_ans_https
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract1"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0

#     listener: nt_aplb_li_ans_https
#     listener_port: 80
#     listener_protocol: https
#     security_policy: default
#     ssl_certificates:
#       - name: ansible_tenant_xyz_keyring
#         certificate_store: default
#         # tDn: uni/tn-sab_ansible_test_123/certstore
#         # default: true

#     rules:
#       - name: rule_2
#         priority: 2
#         host: rule_host
#         path: rule_path
#         action_type: forward
#         content_type: text_plain
#         port: 443
#         protocol: http
#         provider_epg_ref: # "/schemas/65d6b44fa88f0a41485fd7b5/templates/T1/anps/AP1/epgs/EPG1"
#           anp_name: AP1
#           epg_name: EPG1
#         url_type: original
#         response_code: "200"
#         redirect_protocol: http
#         redirect_port: 80
#         redirect_code: permanently_moved
#         health_check:
#           port: 443
#           protocol: https
#           path: "/"
#           interval: 30
#           timeout: 30
#           unhealthy_threshold: 3
#           host: use_host_from_rule
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: "200"
#         target_ip_type: unspecified
#   ignore_errors: true

# - name: Negative test - query all listeners with the non-cloud site
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: "ansible_test"
#     service_node_index: 0
#     state: query
# listener task unwanted code starts -------------

# # Need to copy the below copy of listener_tasks
# - name: Remove listener - nlb_li_ans_udp
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     name: nlb_li_ans_udp
#     listener_port: 80
#     listener_protocol: udp
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     frontend_ip: "3.3.3.3"
#     device: '{{ mso_tenant | default("ansible_test") }}_other'
#     security_policy: default
#     state: absent
#     # ssl_certificates: []
#     rules:
#       - name: default
#         priority: 0
#         # action:
#         #   - Forward To EPG1
#         # condition:
#         #   - Request otherwise not routed
#         action_type: forward
#         content_type: text_plain
#         port: 80
#         protocol: udp
#         provider_epg_ref:
#           anp_name: AP1
#           epg_name: EPG1

#         url_type: original
#         redirect_protocol: inherit
#         redirect_code: permanently_moved
#         health_check:
#           port: 80
#           protocol: tcp
#           interval: 5
#           unhealthy_threshold: 2
#           use_host_from_rule: false # "no"(unchecked) - host should be specified in the rule
#           success_code: 200-399
#         target_ip_type: unspecified
#   ignore_errors: true

# - name: Query an non-existing listener - nlb_li_ans_udp
#   cisco.mso.mso_schema_site_contract_service_graph_listener:
#     <<: *mso_info
#     contract: "Contract2"
#     schema: '{{ mso_schema | default("ansible_test") }}'
#     template: ansible_template1
#     site: '{{ mso_site | default("ansible_test") }}'
#     service_node_index: 0
#     name: nlb_li_ans_udp
#     listener_port: 80
#     listener_protocol: udp
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     frontend_ip: "3.3.3.3"
#     device: '{{ mso_tenant | default("ansible_test") }}_other'
#     security_policy: default
#     state: query

# listener task ends -------------

# Cleanup part

# - name: Remove the site association for the ansible_schema templates
#   cisco.mso.mso_schema_site:
#     <<: *mso_info
#     schema: '{{ mso_schema | default("ansible_schema") }}'
#     template: "{{ item }}"
#     site: '{{ mso_site | default("ansible_test") }}'
#     state: present
#   loop:
#     - "ansible_template1"
#     - "ansible_template2"

# - name: Remove the ansible_schema schema
#   cisco.mso.mso_schema:
#     <<: *mso_info
#     schema: '{{ mso_schema | default("ansible_schema") }}'
#     state: absent

# - name: Remove the {{ mso_tenant | default("ansible_test") }} tenant
#   cisco.mso.mso_tenant:
#     <<: *mso_info
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     state: absent

# - name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
#   ansible.builtin.set_fact:
#     ansible_connection: local
#     ansible_network_os: cisco.aci.aci

# - name: Reset the ansible_connection to access the APIC
#   ansible.builtin.meta: reset_connection

# - name: Remove the common tenant redirect policy
#   cisco.aci.aci_rest:
#     host: "{{ apic_hostname }}"
#     username: "{{ apic_username }}"
#     password: "{{ apic_password }}"
#     validate_certs: no
#     path: "/api/node/mo/uni/tn-common/svcCont.json"
#     method: post
#     content:
#       vnsSvcRedirectPol:
#         attributes:
#           name: redirect_policy2
#           status: deleted

# - name: Remove the {{ mso_tenant | default("ansible_test") }} from the APIC
#   cisco.aci.aci_tenant:
#     <<: *aci_info
#     tenant: '{{ mso_tenant | default("ansible_test") }}'
#     state: absent
